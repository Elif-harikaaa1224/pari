import { z } from 'zod';

declare const hexString: z.ZodEffects<z.ZodString, `0x${string}`, string>;
declare const u256: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
declare const numericString: z.ZodString;
declare const numberOrHex: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
declare const rpcAssetSchema: z.ZodUnion<[z.ZodObject<{
    chain: z.ZodLiteral<"Bitcoin">;
    asset: z.ZodLiteral<"BTC">;
}, "strip", z.ZodTypeAny, {
    chain: "Bitcoin";
    asset: "BTC";
}, {
    chain: "Bitcoin";
    asset: "BTC";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Polkadot">;
    asset: z.ZodLiteral<"DOT">;
}, "strip", z.ZodTypeAny, {
    chain: "Polkadot";
    asset: "DOT";
}, {
    chain: "Polkadot";
    asset: "DOT";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Ethereum">;
    asset: z.ZodLiteral<"FLIP">;
}, "strip", z.ZodTypeAny, {
    chain: "Ethereum";
    asset: "FLIP";
}, {
    chain: "Ethereum";
    asset: "FLIP";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Ethereum">;
    asset: z.ZodLiteral<"ETH">;
}, "strip", z.ZodTypeAny, {
    chain: "Ethereum";
    asset: "ETH";
}, {
    chain: "Ethereum";
    asset: "ETH";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Ethereum">;
    asset: z.ZodLiteral<"USDC">;
}, "strip", z.ZodTypeAny, {
    chain: "Ethereum";
    asset: "USDC";
}, {
    chain: "Ethereum";
    asset: "USDC";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Ethereum">;
    asset: z.ZodLiteral<"USDT">;
}, "strip", z.ZodTypeAny, {
    chain: "Ethereum";
    asset: "USDT";
}, {
    chain: "Ethereum";
    asset: "USDT";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Arbitrum">;
    asset: z.ZodLiteral<"ETH">;
}, "strip", z.ZodTypeAny, {
    chain: "Arbitrum";
    asset: "ETH";
}, {
    chain: "Arbitrum";
    asset: "ETH";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Arbitrum">;
    asset: z.ZodLiteral<"USDC">;
}, "strip", z.ZodTypeAny, {
    chain: "Arbitrum";
    asset: "USDC";
}, {
    chain: "Arbitrum";
    asset: "USDC";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Solana">;
    asset: z.ZodLiteral<"SOL">;
}, "strip", z.ZodTypeAny, {
    chain: "Solana";
    asset: "SOL";
}, {
    chain: "Solana";
    asset: "SOL";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Solana">;
    asset: z.ZodLiteral<"USDC">;
}, "strip", z.ZodTypeAny, {
    chain: "Solana";
    asset: "USDC";
}, {
    chain: "Solana";
    asset: "USDC";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Assethub">;
    asset: z.ZodLiteral<"DOT">;
}, "strip", z.ZodTypeAny, {
    chain: "Assethub";
    asset: "DOT";
}, {
    chain: "Assethub";
    asset: "DOT";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Assethub">;
    asset: z.ZodLiteral<"USDC">;
}, "strip", z.ZodTypeAny, {
    chain: "Assethub";
    asset: "USDC";
}, {
    chain: "Assethub";
    asset: "USDC";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Assethub">;
    asset: z.ZodLiteral<"USDT">;
}, "strip", z.ZodTypeAny, {
    chain: "Assethub";
    asset: "USDT";
}, {
    chain: "Assethub";
    asset: "USDT";
}>]>;
type AssetAndChain = z.output<typeof rpcAssetSchema>;
type Rename<T, U extends Record<string, string>> = Omit<T, keyof U> & {
    [K in keyof U as NonNullable<U[K]>]: K extends keyof T ? T[K] : never;
};
declare const rpcResponse: z.ZodUnion<[z.ZodObject<{
    id: z.ZodString;
    jsonrpc: z.ZodLiteral<"2.0">;
} & {
    result: z.ZodEffects<z.ZodAny, any, any>;
}, "strip", z.ZodTypeAny, {
    id: string;
    jsonrpc: "2.0";
    result?: any;
}, {
    id: string;
    jsonrpc: "2.0";
    result?: any;
}>, z.ZodObject<{
    id: z.ZodString;
    jsonrpc: z.ZodLiteral<"2.0">;
} & {
    error: z.ZodObject<{
        code: z.ZodNumber;
        message: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        code: number;
        message: string;
    }, {
        code: number;
        message: string;
    }>;
}, "strip", z.ZodTypeAny, {
    id: string;
    jsonrpc: "2.0";
    error: {
        code: number;
        message: string;
    };
}, {
    id: string;
    jsonrpc: "2.0";
    error: {
        code: number;
        message: string;
    };
}>]>;
declare const cfSwapRate: z.ZodObject<{
    intermediary: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
    output: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
}, "strip", z.ZodTypeAny, {
    intermediary: bigint | null;
    output: bigint;
}, {
    intermediary: string | number | null;
    output: string | number;
}>;
declare const cfSwapRateV2: z.ZodObject<{
    egress_fee: z.ZodIntersection<z.ZodUnion<[z.ZodObject<{
        chain: z.ZodLiteral<"Bitcoin">;
        asset: z.ZodLiteral<"BTC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Bitcoin";
        asset: "BTC";
    }, {
        chain: "Bitcoin";
        asset: "BTC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Polkadot">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Polkadot";
        asset: "DOT";
    }, {
        chain: "Polkadot";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"FLIP">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "FLIP";
    }, {
        chain: "Ethereum";
        asset: "FLIP";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "ETH";
    }, {
        chain: "Ethereum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDC";
    }, {
        chain: "Ethereum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDT";
    }, {
        chain: "Ethereum";
        asset: "USDT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "ETH";
    }, {
        chain: "Arbitrum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "USDC";
    }, {
        chain: "Arbitrum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"SOL">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "SOL";
    }, {
        chain: "Solana";
        asset: "SOL";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "USDC";
    }, {
        chain: "Solana";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "DOT";
    }, {
        chain: "Assethub";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDC";
    }, {
        chain: "Assethub";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDT";
    }, {
        chain: "Assethub";
        asset: "USDT";
    }>]>, z.ZodObject<{
        amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        amount: bigint;
    }, {
        amount: string | number;
    }>>;
    ingress_fee: z.ZodIntersection<z.ZodUnion<[z.ZodObject<{
        chain: z.ZodLiteral<"Bitcoin">;
        asset: z.ZodLiteral<"BTC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Bitcoin";
        asset: "BTC";
    }, {
        chain: "Bitcoin";
        asset: "BTC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Polkadot">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Polkadot";
        asset: "DOT";
    }, {
        chain: "Polkadot";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"FLIP">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "FLIP";
    }, {
        chain: "Ethereum";
        asset: "FLIP";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "ETH";
    }, {
        chain: "Ethereum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDC";
    }, {
        chain: "Ethereum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDT";
    }, {
        chain: "Ethereum";
        asset: "USDT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "ETH";
    }, {
        chain: "Arbitrum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "USDC";
    }, {
        chain: "Arbitrum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"SOL">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "SOL";
    }, {
        chain: "Solana";
        asset: "SOL";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "USDC";
    }, {
        chain: "Solana";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "DOT";
    }, {
        chain: "Assethub";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDC";
    }, {
        chain: "Assethub";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDT";
    }, {
        chain: "Assethub";
        asset: "USDT";
    }>]>, z.ZodObject<{
        amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        amount: bigint;
    }, {
        amount: string | number;
    }>>;
    intermediary: z.ZodNullable<z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>>;
    network_fee: z.ZodIntersection<z.ZodUnion<[z.ZodObject<{
        chain: z.ZodLiteral<"Bitcoin">;
        asset: z.ZodLiteral<"BTC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Bitcoin";
        asset: "BTC";
    }, {
        chain: "Bitcoin";
        asset: "BTC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Polkadot">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Polkadot";
        asset: "DOT";
    }, {
        chain: "Polkadot";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"FLIP">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "FLIP";
    }, {
        chain: "Ethereum";
        asset: "FLIP";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "ETH";
    }, {
        chain: "Ethereum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDC";
    }, {
        chain: "Ethereum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDT";
    }, {
        chain: "Ethereum";
        asset: "USDT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "ETH";
    }, {
        chain: "Arbitrum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "USDC";
    }, {
        chain: "Arbitrum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"SOL">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "SOL";
    }, {
        chain: "Solana";
        asset: "SOL";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "USDC";
    }, {
        chain: "Solana";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "DOT";
    }, {
        chain: "Assethub";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDC";
    }, {
        chain: "Assethub";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDT";
    }, {
        chain: "Assethub";
        asset: "USDT";
    }>]>, z.ZodObject<{
        amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        amount: bigint;
    }, {
        amount: string | number;
    }>>;
    output: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
}, "strip", z.ZodTypeAny, {
    intermediary: bigint | null;
    output: bigint;
    egress_fee: ({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        amount: bigint;
    };
    ingress_fee: ({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        amount: bigint;
    };
    network_fee: ({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        amount: bigint;
    };
}, {
    intermediary: string | null;
    output: string;
    egress_fee: ({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        amount: string | number;
    };
    ingress_fee: ({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        amount: string | number;
    };
    network_fee: ({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        amount: string | number;
    };
}>;
declare const cfSwapRateV3: z.ZodObject<{
    egress_fee: z.ZodIntersection<z.ZodUnion<[z.ZodObject<{
        chain: z.ZodLiteral<"Bitcoin">;
        asset: z.ZodLiteral<"BTC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Bitcoin";
        asset: "BTC";
    }, {
        chain: "Bitcoin";
        asset: "BTC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Polkadot">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Polkadot";
        asset: "DOT";
    }, {
        chain: "Polkadot";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"FLIP">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "FLIP";
    }, {
        chain: "Ethereum";
        asset: "FLIP";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "ETH";
    }, {
        chain: "Ethereum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDC";
    }, {
        chain: "Ethereum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDT";
    }, {
        chain: "Ethereum";
        asset: "USDT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "ETH";
    }, {
        chain: "Arbitrum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "USDC";
    }, {
        chain: "Arbitrum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"SOL">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "SOL";
    }, {
        chain: "Solana";
        asset: "SOL";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "USDC";
    }, {
        chain: "Solana";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "DOT";
    }, {
        chain: "Assethub";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDC";
    }, {
        chain: "Assethub";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDT";
    }, {
        chain: "Assethub";
        asset: "USDT";
    }>]>, z.ZodObject<{
        amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        amount: bigint;
    }, {
        amount: string | number;
    }>>;
    ingress_fee: z.ZodIntersection<z.ZodUnion<[z.ZodObject<{
        chain: z.ZodLiteral<"Bitcoin">;
        asset: z.ZodLiteral<"BTC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Bitcoin";
        asset: "BTC";
    }, {
        chain: "Bitcoin";
        asset: "BTC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Polkadot">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Polkadot";
        asset: "DOT";
    }, {
        chain: "Polkadot";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"FLIP">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "FLIP";
    }, {
        chain: "Ethereum";
        asset: "FLIP";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "ETH";
    }, {
        chain: "Ethereum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDC";
    }, {
        chain: "Ethereum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDT";
    }, {
        chain: "Ethereum";
        asset: "USDT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "ETH";
    }, {
        chain: "Arbitrum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "USDC";
    }, {
        chain: "Arbitrum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"SOL">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "SOL";
    }, {
        chain: "Solana";
        asset: "SOL";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "USDC";
    }, {
        chain: "Solana";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "DOT";
    }, {
        chain: "Assethub";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDC";
    }, {
        chain: "Assethub";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDT";
    }, {
        chain: "Assethub";
        asset: "USDT";
    }>]>, z.ZodObject<{
        amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        amount: bigint;
    }, {
        amount: string | number;
    }>>;
    intermediary: z.ZodNullable<z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>>;
    network_fee: z.ZodIntersection<z.ZodUnion<[z.ZodObject<{
        chain: z.ZodLiteral<"Bitcoin">;
        asset: z.ZodLiteral<"BTC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Bitcoin";
        asset: "BTC";
    }, {
        chain: "Bitcoin";
        asset: "BTC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Polkadot">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Polkadot";
        asset: "DOT";
    }, {
        chain: "Polkadot";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"FLIP">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "FLIP";
    }, {
        chain: "Ethereum";
        asset: "FLIP";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "ETH";
    }, {
        chain: "Ethereum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDC";
    }, {
        chain: "Ethereum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDT";
    }, {
        chain: "Ethereum";
        asset: "USDT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "ETH";
    }, {
        chain: "Arbitrum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "USDC";
    }, {
        chain: "Arbitrum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"SOL">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "SOL";
    }, {
        chain: "Solana";
        asset: "SOL";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "USDC";
    }, {
        chain: "Solana";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "DOT";
    }, {
        chain: "Assethub";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDC";
    }, {
        chain: "Assethub";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDT";
    }, {
        chain: "Assethub";
        asset: "USDT";
    }>]>, z.ZodObject<{
        amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        amount: bigint;
    }, {
        amount: string | number;
    }>>;
    output: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
} & {
    broker_commission: z.ZodIntersection<z.ZodUnion<[z.ZodObject<{
        chain: z.ZodLiteral<"Bitcoin">;
        asset: z.ZodLiteral<"BTC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Bitcoin";
        asset: "BTC";
    }, {
        chain: "Bitcoin";
        asset: "BTC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Polkadot">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Polkadot";
        asset: "DOT";
    }, {
        chain: "Polkadot";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"FLIP">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "FLIP";
    }, {
        chain: "Ethereum";
        asset: "FLIP";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "ETH";
    }, {
        chain: "Ethereum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDC";
    }, {
        chain: "Ethereum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDT";
    }, {
        chain: "Ethereum";
        asset: "USDT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "ETH";
    }, {
        chain: "Arbitrum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "USDC";
    }, {
        chain: "Arbitrum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"SOL">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "SOL";
    }, {
        chain: "Solana";
        asset: "SOL";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "USDC";
    }, {
        chain: "Solana";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "DOT";
    }, {
        chain: "Assethub";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDC";
    }, {
        chain: "Assethub";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDT";
    }, {
        chain: "Assethub";
        asset: "USDT";
    }>]>, z.ZodObject<{
        amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        amount: bigint;
    }, {
        amount: string | number;
    }>>;
}, "strip", z.ZodTypeAny, {
    intermediary: bigint | null;
    output: bigint;
    egress_fee: ({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        amount: bigint;
    };
    ingress_fee: ({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        amount: bigint;
    };
    network_fee: ({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        amount: bigint;
    };
    broker_commission: ({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        amount: bigint;
    };
}, {
    intermediary: string | null;
    output: string;
    egress_fee: ({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        amount: string | number;
    };
    ingress_fee: ({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        amount: string | number;
    };
    network_fee: ({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        amount: string | number;
    };
    broker_commission: ({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        amount: string | number;
    };
}>;
declare const chainGetBlockHash: z.ZodEffects<z.ZodString, `0x${string}`, string>;
declare const stateGetMetadata: z.ZodEffects<z.ZodString, `0x${string}`, string>;
declare const stateGetRuntimeVersion: z.ZodObject<{
    specName: z.ZodString;
    implName: z.ZodString;
    authoringVersion: z.ZodNumber;
    specVersion: z.ZodNumber;
    implVersion: z.ZodNumber;
    apis: z.ZodArray<z.ZodTuple<[z.ZodEffects<z.ZodString, `0x${string}`, string>, z.ZodNumber], null>, "many">;
    transactionVersion: z.ZodNumber;
    stateVersion: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    specName: string;
    implName: string;
    authoringVersion: number;
    specVersion: number;
    implVersion: number;
    apis: [`0x${string}`, number][];
    transactionVersion: number;
    stateVersion: number;
}, {
    specName: string;
    implName: string;
    authoringVersion: number;
    specVersion: number;
    implVersion: number;
    apis: [string, number][];
    transactionVersion: number;
    stateVersion: number;
}>;
declare const cfIngressEgressEnvironment: z.ZodEffects<z.ZodObject<{
    minimum_deposit_amounts: z.ZodObject<Omit<{
        Bitcoin: z.ZodObject<{
            BTC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            BTC: bigint;
        }, {
            BTC: string | number;
        }>;
        Ethereum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            FLIP: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        }>;
        Polkadot: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            DOT: bigint;
        }, {
            DOT: string | number;
        }>;
        Arbitrum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
        }>;
        Solana: z.ZodObject<{
            SOL: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            SOL: bigint;
        }, {
            USDC: string | number;
            SOL: string | number;
        }>;
        Assethub: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        }, {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        }>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    }, {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    }>;
    ingress_fees: z.ZodObject<Omit<{
        Bitcoin: z.ZodObject<{
            BTC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            BTC: bigint | null;
        }, {
            BTC: string | number | null;
        }>;
        Ethereum: z.ZodObject<{
            ETH: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            FLIP: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            USDT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint | null;
            USDC: bigint | null;
            FLIP: bigint | null;
            USDT: bigint | null;
        }, {
            ETH: string | number | null;
            USDC: string | number | null;
            FLIP: string | number | null;
            USDT: string | number | null;
        }>;
        Polkadot: z.ZodObject<{
            DOT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            DOT: bigint | null;
        }, {
            DOT: string | number | null;
        }>;
        Arbitrum: z.ZodObject<{
            ETH: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint | null;
            USDC: bigint | null;
        }, {
            ETH: string | number | null;
            USDC: string | number | null;
        }>;
        Solana: z.ZodObject<{
            SOL: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint | null;
            SOL: bigint | null;
        }, {
            USDC: string | number | null;
            SOL: string | number | null;
        }>;
        Assethub: z.ZodObject<{
            DOT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            USDT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint | null;
            USDT: bigint | null;
            DOT: bigint | null;
        }, {
            USDC: string | number | null;
            USDT: string | number | null;
            DOT: string | number | null;
        }>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: {
            BTC: bigint | null;
        };
        Ethereum: {
            ETH: bigint | null;
            USDC: bigint | null;
            FLIP: bigint | null;
            USDT: bigint | null;
        };
        Arbitrum: {
            ETH: bigint | null;
            USDC: bigint | null;
        };
        Solana: {
            USDC: bigint | null;
            SOL: bigint | null;
        };
        Assethub: {
            USDC: bigint | null;
            USDT: bigint | null;
            DOT: bigint | null;
        };
    }, {
        Bitcoin: {
            BTC: string | number | null;
        };
        Ethereum: {
            ETH: string | number | null;
            USDC: string | number | null;
            FLIP: string | number | null;
            USDT: string | number | null;
        };
        Arbitrum: {
            ETH: string | number | null;
            USDC: string | number | null;
        };
        Solana: {
            USDC: string | number | null;
            SOL: string | number | null;
        };
        Assethub: {
            USDC: string | number | null;
            USDT: string | number | null;
            DOT: string | number | null;
        };
    }>;
    egress_fees: z.ZodObject<Omit<{
        Bitcoin: z.ZodObject<{
            BTC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            BTC: bigint | null;
        }, {
            BTC: string | number | null;
        }>;
        Ethereum: z.ZodObject<{
            ETH: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            FLIP: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            USDT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint | null;
            USDC: bigint | null;
            FLIP: bigint | null;
            USDT: bigint | null;
        }, {
            ETH: string | number | null;
            USDC: string | number | null;
            FLIP: string | number | null;
            USDT: string | number | null;
        }>;
        Polkadot: z.ZodObject<{
            DOT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            DOT: bigint | null;
        }, {
            DOT: string | number | null;
        }>;
        Arbitrum: z.ZodObject<{
            ETH: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint | null;
            USDC: bigint | null;
        }, {
            ETH: string | number | null;
            USDC: string | number | null;
        }>;
        Solana: z.ZodObject<{
            SOL: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint | null;
            SOL: bigint | null;
        }, {
            USDC: string | number | null;
            SOL: string | number | null;
        }>;
        Assethub: z.ZodObject<{
            DOT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            USDT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint | null;
            USDT: bigint | null;
            DOT: bigint | null;
        }, {
            USDC: string | number | null;
            USDT: string | number | null;
            DOT: string | number | null;
        }>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: {
            BTC: bigint | null;
        };
        Ethereum: {
            ETH: bigint | null;
            USDC: bigint | null;
            FLIP: bigint | null;
            USDT: bigint | null;
        };
        Arbitrum: {
            ETH: bigint | null;
            USDC: bigint | null;
        };
        Solana: {
            USDC: bigint | null;
            SOL: bigint | null;
        };
        Assethub: {
            USDC: bigint | null;
            USDT: bigint | null;
            DOT: bigint | null;
        };
    }, {
        Bitcoin: {
            BTC: string | number | null;
        };
        Ethereum: {
            ETH: string | number | null;
            USDC: string | number | null;
            FLIP: string | number | null;
            USDT: string | number | null;
        };
        Arbitrum: {
            ETH: string | number | null;
            USDC: string | number | null;
        };
        Solana: {
            USDC: string | number | null;
            SOL: string | number | null;
        };
        Assethub: {
            USDC: string | number | null;
            USDT: string | number | null;
            DOT: string | number | null;
        };
    }>;
    witness_safety_margins: z.ZodObject<Omit<{
        Bitcoin: z.ZodNullable<z.ZodNumber>;
        Ethereum: z.ZodNullable<z.ZodNumber>;
        Polkadot: z.ZodNullable<z.ZodNumber>;
        Arbitrum: z.ZodNullable<z.ZodNumber>;
        Solana: z.ZodNullable<z.ZodNumber>;
        Assethub: z.ZodNullable<z.ZodNumber>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: number | null;
        Ethereum: number | null;
        Arbitrum: number | null;
        Solana: number | null;
        Assethub: number | null;
    }, {
        Bitcoin: number | null;
        Ethereum: number | null;
        Arbitrum: number | null;
        Solana: number | null;
        Assethub: number | null;
    }>;
    egress_dust_limits: z.ZodObject<Omit<{
        Bitcoin: z.ZodObject<{
            BTC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            BTC: bigint;
        }, {
            BTC: string | number;
        }>;
        Ethereum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            FLIP: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        }>;
        Polkadot: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            DOT: bigint;
        }, {
            DOT: string | number;
        }>;
        Arbitrum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
        }>;
        Solana: z.ZodObject<{
            SOL: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            SOL: bigint;
        }, {
            USDC: string | number;
            SOL: string | number;
        }>;
        Assethub: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        }, {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        }>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    }, {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    }>;
    channel_opening_fees: z.ZodObject<Omit<{
        Bitcoin: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        Ethereum: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        Polkadot: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        Arbitrum: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        Solana: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        Assethub: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: bigint;
        Ethereum: bigint;
        Arbitrum: bigint;
        Solana: bigint;
        Assethub: bigint;
    }, {
        Bitcoin: string | number;
        Ethereum: string | number;
        Arbitrum: string | number;
        Solana: string | number;
        Assethub: string | number;
    }>;
}, "strip", z.ZodTypeAny, {
    minimum_deposit_amounts: {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    };
    ingress_fees: {
        Bitcoin: {
            BTC: bigint | null;
        };
        Ethereum: {
            ETH: bigint | null;
            USDC: bigint | null;
            FLIP: bigint | null;
            USDT: bigint | null;
        };
        Arbitrum: {
            ETH: bigint | null;
            USDC: bigint | null;
        };
        Solana: {
            USDC: bigint | null;
            SOL: bigint | null;
        };
        Assethub: {
            USDC: bigint | null;
            USDT: bigint | null;
            DOT: bigint | null;
        };
    };
    egress_fees: {
        Bitcoin: {
            BTC: bigint | null;
        };
        Ethereum: {
            ETH: bigint | null;
            USDC: bigint | null;
            FLIP: bigint | null;
            USDT: bigint | null;
        };
        Arbitrum: {
            ETH: bigint | null;
            USDC: bigint | null;
        };
        Solana: {
            USDC: bigint | null;
            SOL: bigint | null;
        };
        Assethub: {
            USDC: bigint | null;
            USDT: bigint | null;
            DOT: bigint | null;
        };
    };
    witness_safety_margins: {
        Bitcoin: number | null;
        Ethereum: number | null;
        Arbitrum: number | null;
        Solana: number | null;
        Assethub: number | null;
    };
    egress_dust_limits: {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    };
    channel_opening_fees: {
        Bitcoin: bigint;
        Ethereum: bigint;
        Arbitrum: bigint;
        Solana: bigint;
        Assethub: bigint;
    };
}, {
    minimum_deposit_amounts: {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    };
    ingress_fees: {
        Bitcoin: {
            BTC: string | number | null;
        };
        Ethereum: {
            ETH: string | number | null;
            USDC: string | number | null;
            FLIP: string | number | null;
            USDT: string | number | null;
        };
        Arbitrum: {
            ETH: string | number | null;
            USDC: string | number | null;
        };
        Solana: {
            USDC: string | number | null;
            SOL: string | number | null;
        };
        Assethub: {
            USDC: string | number | null;
            USDT: string | number | null;
            DOT: string | number | null;
        };
    };
    egress_fees: {
        Bitcoin: {
            BTC: string | number | null;
        };
        Ethereum: {
            ETH: string | number | null;
            USDC: string | number | null;
            FLIP: string | number | null;
            USDT: string | number | null;
        };
        Arbitrum: {
            ETH: string | number | null;
            USDC: string | number | null;
        };
        Solana: {
            USDC: string | number | null;
            SOL: string | number | null;
        };
        Assethub: {
            USDC: string | number | null;
            USDT: string | number | null;
            DOT: string | number | null;
        };
    };
    witness_safety_margins: {
        Bitcoin: number | null;
        Ethereum: number | null;
        Arbitrum: number | null;
        Solana: number | null;
        Assethub: number | null;
    };
    egress_dust_limits: {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    };
    channel_opening_fees: {
        Bitcoin: string | number;
        Ethereum: string | number;
        Arbitrum: string | number;
        Solana: string | number;
        Assethub: string | number;
    };
}>, Rename<{
    minimum_deposit_amounts: {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    };
    ingress_fees: {
        Bitcoin: {
            BTC: bigint | null;
        };
        Ethereum: {
            ETH: bigint | null;
            USDC: bigint | null;
            FLIP: bigint | null;
            USDT: bigint | null;
        };
        Arbitrum: {
            ETH: bigint | null;
            USDC: bigint | null;
        };
        Solana: {
            USDC: bigint | null;
            SOL: bigint | null;
        };
        Assethub: {
            USDC: bigint | null;
            USDT: bigint | null;
            DOT: bigint | null;
        };
    };
    egress_fees: {
        Bitcoin: {
            BTC: bigint | null;
        };
        Ethereum: {
            ETH: bigint | null;
            USDC: bigint | null;
            FLIP: bigint | null;
            USDT: bigint | null;
        };
        Arbitrum: {
            ETH: bigint | null;
            USDC: bigint | null;
        };
        Solana: {
            USDC: bigint | null;
            SOL: bigint | null;
        };
        Assethub: {
            USDC: bigint | null;
            USDT: bigint | null;
            DOT: bigint | null;
        };
    };
    witness_safety_margins: {
        Bitcoin: number | null;
        Ethereum: number | null;
        Arbitrum: number | null;
        Solana: number | null;
        Assethub: number | null;
    };
    egress_dust_limits: {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    };
    channel_opening_fees: {
        Bitcoin: bigint;
        Ethereum: bigint;
        Arbitrum: bigint;
        Solana: bigint;
        Assethub: bigint;
    };
}, {
    readonly egress_dust_limits: "minimum_egress_amounts";
}>, {
    minimum_deposit_amounts: {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    };
    ingress_fees: {
        Bitcoin: {
            BTC: string | number | null;
        };
        Ethereum: {
            ETH: string | number | null;
            USDC: string | number | null;
            FLIP: string | number | null;
            USDT: string | number | null;
        };
        Arbitrum: {
            ETH: string | number | null;
            USDC: string | number | null;
        };
        Solana: {
            USDC: string | number | null;
            SOL: string | number | null;
        };
        Assethub: {
            USDC: string | number | null;
            USDT: string | number | null;
            DOT: string | number | null;
        };
    };
    egress_fees: {
        Bitcoin: {
            BTC: string | number | null;
        };
        Ethereum: {
            ETH: string | number | null;
            USDC: string | number | null;
            FLIP: string | number | null;
            USDT: string | number | null;
        };
        Arbitrum: {
            ETH: string | number | null;
            USDC: string | number | null;
        };
        Solana: {
            USDC: string | number | null;
            SOL: string | number | null;
        };
        Assethub: {
            USDC: string | number | null;
            USDT: string | number | null;
            DOT: string | number | null;
        };
    };
    witness_safety_margins: {
        Bitcoin: number | null;
        Ethereum: number | null;
        Arbitrum: number | null;
        Solana: number | null;
        Assethub: number | null;
    };
    egress_dust_limits: {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    };
    channel_opening_fees: {
        Bitcoin: string | number;
        Ethereum: string | number;
        Arbitrum: string | number;
        Solana: string | number;
        Assethub: string | number;
    };
}>;
declare const cfSwappingEnvironment: z.ZodObject<{
    maximum_swap_amounts: z.ZodObject<Omit<{
        Bitcoin: z.ZodObject<{
            BTC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            BTC: bigint | null;
        }, {
            BTC: string | number | null;
        }>;
        Ethereum: z.ZodObject<{
            ETH: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            FLIP: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            USDT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint | null;
            USDC: bigint | null;
            FLIP: bigint | null;
            USDT: bigint | null;
        }, {
            ETH: string | number | null;
            USDC: string | number | null;
            FLIP: string | number | null;
            USDT: string | number | null;
        }>;
        Polkadot: z.ZodObject<{
            DOT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            DOT: bigint | null;
        }, {
            DOT: string | number | null;
        }>;
        Arbitrum: z.ZodObject<{
            ETH: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint | null;
            USDC: bigint | null;
        }, {
            ETH: string | number | null;
            USDC: string | number | null;
        }>;
        Solana: z.ZodObject<{
            SOL: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint | null;
            SOL: bigint | null;
        }, {
            USDC: string | number | null;
            SOL: string | number | null;
        }>;
        Assethub: z.ZodObject<{
            DOT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            USDT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint | null;
            USDT: bigint | null;
            DOT: bigint | null;
        }, {
            USDC: string | number | null;
            USDT: string | number | null;
            DOT: string | number | null;
        }>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: {
            BTC: bigint | null;
        };
        Ethereum: {
            ETH: bigint | null;
            USDC: bigint | null;
            FLIP: bigint | null;
            USDT: bigint | null;
        };
        Arbitrum: {
            ETH: bigint | null;
            USDC: bigint | null;
        };
        Solana: {
            USDC: bigint | null;
            SOL: bigint | null;
        };
        Assethub: {
            USDC: bigint | null;
            USDT: bigint | null;
            DOT: bigint | null;
        };
    }, {
        Bitcoin: {
            BTC: string | number | null;
        };
        Ethereum: {
            ETH: string | number | null;
            USDC: string | number | null;
            FLIP: string | number | null;
            USDT: string | number | null;
        };
        Arbitrum: {
            ETH: string | number | null;
            USDC: string | number | null;
        };
        Solana: {
            USDC: string | number | null;
            SOL: string | number | null;
        };
        Assethub: {
            USDC: string | number | null;
            USDT: string | number | null;
            DOT: string | number | null;
        };
    }>;
    network_fee_hundredth_pips: z.ZodNumber;
    swap_retry_delay_blocks: z.ZodOptional<z.ZodNumber>;
    max_swap_retry_duration_blocks: z.ZodOptional<z.ZodNumber>;
    max_swap_request_duration_blocks: z.ZodOptional<z.ZodNumber>;
    minimum_chunk_size: z.ZodOptional<z.ZodObject<Omit<{
        Bitcoin: z.ZodObject<{
            BTC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            BTC: bigint | null;
        }, {
            BTC: string | number | null;
        }>;
        Ethereum: z.ZodObject<{
            ETH: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            FLIP: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            USDT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint | null;
            USDC: bigint | null;
            FLIP: bigint | null;
            USDT: bigint | null;
        }, {
            ETH: string | number | null;
            USDC: string | number | null;
            FLIP: string | number | null;
            USDT: string | number | null;
        }>;
        Polkadot: z.ZodObject<{
            DOT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            DOT: bigint | null;
        }, {
            DOT: string | number | null;
        }>;
        Arbitrum: z.ZodObject<{
            ETH: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint | null;
            USDC: bigint | null;
        }, {
            ETH: string | number | null;
            USDC: string | number | null;
        }>;
        Solana: z.ZodObject<{
            SOL: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint | null;
            SOL: bigint | null;
        }, {
            USDC: string | number | null;
            SOL: string | number | null;
        }>;
        Assethub: z.ZodObject<{
            DOT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            USDT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint | null;
            USDT: bigint | null;
            DOT: bigint | null;
        }, {
            USDC: string | number | null;
            USDT: string | number | null;
            DOT: string | number | null;
        }>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: {
            BTC: bigint | null;
        };
        Ethereum: {
            ETH: bigint | null;
            USDC: bigint | null;
            FLIP: bigint | null;
            USDT: bigint | null;
        };
        Arbitrum: {
            ETH: bigint | null;
            USDC: bigint | null;
        };
        Solana: {
            USDC: bigint | null;
            SOL: bigint | null;
        };
        Assethub: {
            USDC: bigint | null;
            USDT: bigint | null;
            DOT: bigint | null;
        };
    }, {
        Bitcoin: {
            BTC: string | number | null;
        };
        Ethereum: {
            ETH: string | number | null;
            USDC: string | number | null;
            FLIP: string | number | null;
            USDT: string | number | null;
        };
        Arbitrum: {
            ETH: string | number | null;
            USDC: string | number | null;
        };
        Solana: {
            USDC: string | number | null;
            SOL: string | number | null;
        };
        Assethub: {
            USDC: string | number | null;
            USDT: string | number | null;
            DOT: string | number | null;
        };
    }>>;
    network_fees: z.ZodObject<{
        regular_network_fee: z.ZodObject<{
            standard_rate_and_minimum: z.ZodObject<{
                rate: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                minimum: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            }, "strip", z.ZodTypeAny, {
                minimum: bigint;
                rate: bigint;
            }, {
                minimum: string | number;
                rate: string | number;
            }>;
            rates: z.ZodObject<Omit<{
                Bitcoin: z.ZodObject<{
                    BTC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                }, "strip", z.ZodTypeAny, {
                    BTC: bigint;
                }, {
                    BTC: string | number;
                }>;
                Ethereum: z.ZodObject<{
                    ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    FLIP: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                }, "strip", z.ZodTypeAny, {
                    ETH: bigint;
                    USDC: bigint;
                    FLIP: bigint;
                    USDT: bigint;
                }, {
                    ETH: string | number;
                    USDC: string | number;
                    FLIP: string | number;
                    USDT: string | number;
                }>;
                Polkadot: z.ZodObject<{
                    DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                }, "strip", z.ZodTypeAny, {
                    DOT: bigint;
                }, {
                    DOT: string | number;
                }>;
                Arbitrum: z.ZodObject<{
                    ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                }, "strip", z.ZodTypeAny, {
                    ETH: bigint;
                    USDC: bigint;
                }, {
                    ETH: string | number;
                    USDC: string | number;
                }>;
                Solana: z.ZodObject<{
                    SOL: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                }, "strip", z.ZodTypeAny, {
                    USDC: bigint;
                    SOL: bigint;
                }, {
                    USDC: string | number;
                    SOL: string | number;
                }>;
                Assethub: z.ZodObject<{
                    DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                }, "strip", z.ZodTypeAny, {
                    USDC: bigint;
                    USDT: bigint;
                    DOT: bigint;
                }, {
                    USDC: string | number;
                    USDT: string | number;
                    DOT: string | number;
                }>;
            }, "Polkadot">, "strip", z.ZodTypeAny, {
                Bitcoin: {
                    BTC: bigint;
                };
                Ethereum: {
                    ETH: bigint;
                    USDC: bigint;
                    FLIP: bigint;
                    USDT: bigint;
                };
                Arbitrum: {
                    ETH: bigint;
                    USDC: bigint;
                };
                Solana: {
                    USDC: bigint;
                    SOL: bigint;
                };
                Assethub: {
                    USDC: bigint;
                    USDT: bigint;
                    DOT: bigint;
                };
            }, {
                Bitcoin: {
                    BTC: string | number;
                };
                Ethereum: {
                    ETH: string | number;
                    USDC: string | number;
                    FLIP: string | number;
                    USDT: string | number;
                };
                Arbitrum: {
                    ETH: string | number;
                    USDC: string | number;
                };
                Solana: {
                    USDC: string | number;
                    SOL: string | number;
                };
                Assethub: {
                    USDC: string | number;
                    USDT: string | number;
                    DOT: string | number;
                };
            }>;
        }, "strip", z.ZodTypeAny, {
            standard_rate_and_minimum: {
                minimum: bigint;
                rate: bigint;
            };
            rates: {
                Bitcoin: {
                    BTC: bigint;
                };
                Ethereum: {
                    ETH: bigint;
                    USDC: bigint;
                    FLIP: bigint;
                    USDT: bigint;
                };
                Arbitrum: {
                    ETH: bigint;
                    USDC: bigint;
                };
                Solana: {
                    USDC: bigint;
                    SOL: bigint;
                };
                Assethub: {
                    USDC: bigint;
                    USDT: bigint;
                    DOT: bigint;
                };
            };
        }, {
            standard_rate_and_minimum: {
                minimum: string | number;
                rate: string | number;
            };
            rates: {
                Bitcoin: {
                    BTC: string | number;
                };
                Ethereum: {
                    ETH: string | number;
                    USDC: string | number;
                    FLIP: string | number;
                    USDT: string | number;
                };
                Arbitrum: {
                    ETH: string | number;
                    USDC: string | number;
                };
                Solana: {
                    USDC: string | number;
                    SOL: string | number;
                };
                Assethub: {
                    USDC: string | number;
                    USDT: string | number;
                    DOT: string | number;
                };
            };
        }>;
        internal_swap_network_fee: z.ZodObject<{
            standard_rate_and_minimum: z.ZodObject<{
                rate: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                minimum: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            }, "strip", z.ZodTypeAny, {
                minimum: bigint;
                rate: bigint;
            }, {
                minimum: string | number;
                rate: string | number;
            }>;
            rates: z.ZodObject<Omit<{
                Bitcoin: z.ZodObject<{
                    BTC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                }, "strip", z.ZodTypeAny, {
                    BTC: bigint;
                }, {
                    BTC: string | number;
                }>;
                Ethereum: z.ZodObject<{
                    ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    FLIP: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                }, "strip", z.ZodTypeAny, {
                    ETH: bigint;
                    USDC: bigint;
                    FLIP: bigint;
                    USDT: bigint;
                }, {
                    ETH: string | number;
                    USDC: string | number;
                    FLIP: string | number;
                    USDT: string | number;
                }>;
                Polkadot: z.ZodObject<{
                    DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                }, "strip", z.ZodTypeAny, {
                    DOT: bigint;
                }, {
                    DOT: string | number;
                }>;
                Arbitrum: z.ZodObject<{
                    ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                }, "strip", z.ZodTypeAny, {
                    ETH: bigint;
                    USDC: bigint;
                }, {
                    ETH: string | number;
                    USDC: string | number;
                }>;
                Solana: z.ZodObject<{
                    SOL: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                }, "strip", z.ZodTypeAny, {
                    USDC: bigint;
                    SOL: bigint;
                }, {
                    USDC: string | number;
                    SOL: string | number;
                }>;
                Assethub: z.ZodObject<{
                    DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                }, "strip", z.ZodTypeAny, {
                    USDC: bigint;
                    USDT: bigint;
                    DOT: bigint;
                }, {
                    USDC: string | number;
                    USDT: string | number;
                    DOT: string | number;
                }>;
            }, "Polkadot">, "strip", z.ZodTypeAny, {
                Bitcoin: {
                    BTC: bigint;
                };
                Ethereum: {
                    ETH: bigint;
                    USDC: bigint;
                    FLIP: bigint;
                    USDT: bigint;
                };
                Arbitrum: {
                    ETH: bigint;
                    USDC: bigint;
                };
                Solana: {
                    USDC: bigint;
                    SOL: bigint;
                };
                Assethub: {
                    USDC: bigint;
                    USDT: bigint;
                    DOT: bigint;
                };
            }, {
                Bitcoin: {
                    BTC: string | number;
                };
                Ethereum: {
                    ETH: string | number;
                    USDC: string | number;
                    FLIP: string | number;
                    USDT: string | number;
                };
                Arbitrum: {
                    ETH: string | number;
                    USDC: string | number;
                };
                Solana: {
                    USDC: string | number;
                    SOL: string | number;
                };
                Assethub: {
                    USDC: string | number;
                    USDT: string | number;
                    DOT: string | number;
                };
            }>;
        }, "strip", z.ZodTypeAny, {
            standard_rate_and_minimum: {
                minimum: bigint;
                rate: bigint;
            };
            rates: {
                Bitcoin: {
                    BTC: bigint;
                };
                Ethereum: {
                    ETH: bigint;
                    USDC: bigint;
                    FLIP: bigint;
                    USDT: bigint;
                };
                Arbitrum: {
                    ETH: bigint;
                    USDC: bigint;
                };
                Solana: {
                    USDC: bigint;
                    SOL: bigint;
                };
                Assethub: {
                    USDC: bigint;
                    USDT: bigint;
                    DOT: bigint;
                };
            };
        }, {
            standard_rate_and_minimum: {
                minimum: string | number;
                rate: string | number;
            };
            rates: {
                Bitcoin: {
                    BTC: string | number;
                };
                Ethereum: {
                    ETH: string | number;
                    USDC: string | number;
                    FLIP: string | number;
                    USDT: string | number;
                };
                Arbitrum: {
                    ETH: string | number;
                    USDC: string | number;
                };
                Solana: {
                    USDC: string | number;
                    SOL: string | number;
                };
                Assethub: {
                    USDC: string | number;
                    USDT: string | number;
                    DOT: string | number;
                };
            };
        }>;
    }, "strip", z.ZodTypeAny, {
        regular_network_fee: {
            standard_rate_and_minimum: {
                minimum: bigint;
                rate: bigint;
            };
            rates: {
                Bitcoin: {
                    BTC: bigint;
                };
                Ethereum: {
                    ETH: bigint;
                    USDC: bigint;
                    FLIP: bigint;
                    USDT: bigint;
                };
                Arbitrum: {
                    ETH: bigint;
                    USDC: bigint;
                };
                Solana: {
                    USDC: bigint;
                    SOL: bigint;
                };
                Assethub: {
                    USDC: bigint;
                    USDT: bigint;
                    DOT: bigint;
                };
            };
        };
        internal_swap_network_fee: {
            standard_rate_and_minimum: {
                minimum: bigint;
                rate: bigint;
            };
            rates: {
                Bitcoin: {
                    BTC: bigint;
                };
                Ethereum: {
                    ETH: bigint;
                    USDC: bigint;
                    FLIP: bigint;
                    USDT: bigint;
                };
                Arbitrum: {
                    ETH: bigint;
                    USDC: bigint;
                };
                Solana: {
                    USDC: bigint;
                    SOL: bigint;
                };
                Assethub: {
                    USDC: bigint;
                    USDT: bigint;
                    DOT: bigint;
                };
            };
        };
    }, {
        regular_network_fee: {
            standard_rate_and_minimum: {
                minimum: string | number;
                rate: string | number;
            };
            rates: {
                Bitcoin: {
                    BTC: string | number;
                };
                Ethereum: {
                    ETH: string | number;
                    USDC: string | number;
                    FLIP: string | number;
                    USDT: string | number;
                };
                Arbitrum: {
                    ETH: string | number;
                    USDC: string | number;
                };
                Solana: {
                    USDC: string | number;
                    SOL: string | number;
                };
                Assethub: {
                    USDC: string | number;
                    USDT: string | number;
                    DOT: string | number;
                };
            };
        };
        internal_swap_network_fee: {
            standard_rate_and_minimum: {
                minimum: string | number;
                rate: string | number;
            };
            rates: {
                Bitcoin: {
                    BTC: string | number;
                };
                Ethereum: {
                    ETH: string | number;
                    USDC: string | number;
                    FLIP: string | number;
                    USDT: string | number;
                };
                Arbitrum: {
                    ETH: string | number;
                    USDC: string | number;
                };
                Solana: {
                    USDC: string | number;
                    SOL: string | number;
                };
                Assethub: {
                    USDC: string | number;
                    USDT: string | number;
                    DOT: string | number;
                };
            };
        };
    }>;
}, "strip", z.ZodTypeAny, {
    maximum_swap_amounts: {
        Bitcoin: {
            BTC: bigint | null;
        };
        Ethereum: {
            ETH: bigint | null;
            USDC: bigint | null;
            FLIP: bigint | null;
            USDT: bigint | null;
        };
        Arbitrum: {
            ETH: bigint | null;
            USDC: bigint | null;
        };
        Solana: {
            USDC: bigint | null;
            SOL: bigint | null;
        };
        Assethub: {
            USDC: bigint | null;
            USDT: bigint | null;
            DOT: bigint | null;
        };
    };
    network_fee_hundredth_pips: number;
    network_fees: {
        regular_network_fee: {
            standard_rate_and_minimum: {
                minimum: bigint;
                rate: bigint;
            };
            rates: {
                Bitcoin: {
                    BTC: bigint;
                };
                Ethereum: {
                    ETH: bigint;
                    USDC: bigint;
                    FLIP: bigint;
                    USDT: bigint;
                };
                Arbitrum: {
                    ETH: bigint;
                    USDC: bigint;
                };
                Solana: {
                    USDC: bigint;
                    SOL: bigint;
                };
                Assethub: {
                    USDC: bigint;
                    USDT: bigint;
                    DOT: bigint;
                };
            };
        };
        internal_swap_network_fee: {
            standard_rate_and_minimum: {
                minimum: bigint;
                rate: bigint;
            };
            rates: {
                Bitcoin: {
                    BTC: bigint;
                };
                Ethereum: {
                    ETH: bigint;
                    USDC: bigint;
                    FLIP: bigint;
                    USDT: bigint;
                };
                Arbitrum: {
                    ETH: bigint;
                    USDC: bigint;
                };
                Solana: {
                    USDC: bigint;
                    SOL: bigint;
                };
                Assethub: {
                    USDC: bigint;
                    USDT: bigint;
                    DOT: bigint;
                };
            };
        };
    };
    swap_retry_delay_blocks?: number | undefined;
    max_swap_retry_duration_blocks?: number | undefined;
    max_swap_request_duration_blocks?: number | undefined;
    minimum_chunk_size?: {
        Bitcoin: {
            BTC: bigint | null;
        };
        Ethereum: {
            ETH: bigint | null;
            USDC: bigint | null;
            FLIP: bigint | null;
            USDT: bigint | null;
        };
        Arbitrum: {
            ETH: bigint | null;
            USDC: bigint | null;
        };
        Solana: {
            USDC: bigint | null;
            SOL: bigint | null;
        };
        Assethub: {
            USDC: bigint | null;
            USDT: bigint | null;
            DOT: bigint | null;
        };
    } | undefined;
}, {
    maximum_swap_amounts: {
        Bitcoin: {
            BTC: string | number | null;
        };
        Ethereum: {
            ETH: string | number | null;
            USDC: string | number | null;
            FLIP: string | number | null;
            USDT: string | number | null;
        };
        Arbitrum: {
            ETH: string | number | null;
            USDC: string | number | null;
        };
        Solana: {
            USDC: string | number | null;
            SOL: string | number | null;
        };
        Assethub: {
            USDC: string | number | null;
            USDT: string | number | null;
            DOT: string | number | null;
        };
    };
    network_fee_hundredth_pips: number;
    network_fees: {
        regular_network_fee: {
            standard_rate_and_minimum: {
                minimum: string | number;
                rate: string | number;
            };
            rates: {
                Bitcoin: {
                    BTC: string | number;
                };
                Ethereum: {
                    ETH: string | number;
                    USDC: string | number;
                    FLIP: string | number;
                    USDT: string | number;
                };
                Arbitrum: {
                    ETH: string | number;
                    USDC: string | number;
                };
                Solana: {
                    USDC: string | number;
                    SOL: string | number;
                };
                Assethub: {
                    USDC: string | number;
                    USDT: string | number;
                    DOT: string | number;
                };
            };
        };
        internal_swap_network_fee: {
            standard_rate_and_minimum: {
                minimum: string | number;
                rate: string | number;
            };
            rates: {
                Bitcoin: {
                    BTC: string | number;
                };
                Ethereum: {
                    ETH: string | number;
                    USDC: string | number;
                    FLIP: string | number;
                    USDT: string | number;
                };
                Arbitrum: {
                    ETH: string | number;
                    USDC: string | number;
                };
                Solana: {
                    USDC: string | number;
                    SOL: string | number;
                };
                Assethub: {
                    USDC: string | number;
                    USDT: string | number;
                    DOT: string | number;
                };
            };
        };
    };
    swap_retry_delay_blocks?: number | undefined;
    max_swap_retry_duration_blocks?: number | undefined;
    max_swap_request_duration_blocks?: number | undefined;
    minimum_chunk_size?: {
        Bitcoin: {
            BTC: string | number | null;
        };
        Ethereum: {
            ETH: string | number | null;
            USDC: string | number | null;
            FLIP: string | number | null;
            USDT: string | number | null;
        };
        Arbitrum: {
            ETH: string | number | null;
            USDC: string | number | null;
        };
        Solana: {
            USDC: string | number | null;
            SOL: string | number | null;
        };
        Assethub: {
            USDC: string | number | null;
            USDT: string | number | null;
            DOT: string | number | null;
        };
    } | undefined;
}>;
declare const cfFundingEnvironment: z.ZodObject<{
    redemption_tax: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    minimum_funding_amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
}, "strip", z.ZodTypeAny, {
    redemption_tax: bigint;
    minimum_funding_amount: bigint;
}, {
    redemption_tax: string | number;
    minimum_funding_amount: string | number;
}>;
declare const cfPoolsEnvironment: z.ZodObject<{
    fees: z.ZodObject<Omit<{
        Bitcoin: z.ZodObject<{
            BTC: z.ZodEffects<z.ZodNullable<z.ZodObject<{
                limit_order_fee_hundredth_pips: z.ZodNumber;
                range_order_fee_hundredth_pips: z.ZodNumber;
                range_order_total_fees_earned: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                limit_order_total_fees_earned: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                range_total_swap_inputs: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                limit_total_swap_inputs: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                quote_asset: z.ZodObject<{
                    chain: z.ZodLiteral<"Ethereum">;
                    asset: z.ZodLiteral<"USDC">;
                }, "strip", z.ZodTypeAny, {
                    chain: "Ethereum";
                    asset: "USDC";
                }, {
                    chain: "Ethereum";
                    asset: "USDC";
                }>;
            }, "strip", z.ZodTypeAny, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            }, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            }>>, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            }, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null>;
        }, "strip", z.ZodTypeAny, {
            BTC: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
        }, {
            BTC: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
        }>;
        Ethereum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodNullable<z.ZodObject<{
                limit_order_fee_hundredth_pips: z.ZodNumber;
                range_order_fee_hundredth_pips: z.ZodNumber;
                range_order_total_fees_earned: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                limit_order_total_fees_earned: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                range_total_swap_inputs: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                limit_total_swap_inputs: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                quote_asset: z.ZodObject<{
                    chain: z.ZodLiteral<"Ethereum">;
                    asset: z.ZodLiteral<"USDC">;
                }, "strip", z.ZodTypeAny, {
                    chain: "Ethereum";
                    asset: "USDC";
                }, {
                    chain: "Ethereum";
                    asset: "USDC";
                }>;
            }, "strip", z.ZodTypeAny, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            }, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            }>>, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            }, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null>;
            FLIP: z.ZodEffects<z.ZodNullable<z.ZodObject<{
                limit_order_fee_hundredth_pips: z.ZodNumber;
                range_order_fee_hundredth_pips: z.ZodNumber;
                range_order_total_fees_earned: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                limit_order_total_fees_earned: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                range_total_swap_inputs: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                limit_total_swap_inputs: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                quote_asset: z.ZodObject<{
                    chain: z.ZodLiteral<"Ethereum">;
                    asset: z.ZodLiteral<"USDC">;
                }, "strip", z.ZodTypeAny, {
                    chain: "Ethereum";
                    asset: "USDC";
                }, {
                    chain: "Ethereum";
                    asset: "USDC";
                }>;
            }, "strip", z.ZodTypeAny, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            }, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            }>>, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            }, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null>;
            USDT: z.ZodEffects<z.ZodNullable<z.ZodObject<{
                limit_order_fee_hundredth_pips: z.ZodNumber;
                range_order_fee_hundredth_pips: z.ZodNumber;
                range_order_total_fees_earned: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                limit_order_total_fees_earned: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                range_total_swap_inputs: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                limit_total_swap_inputs: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                quote_asset: z.ZodObject<{
                    chain: z.ZodLiteral<"Ethereum">;
                    asset: z.ZodLiteral<"USDC">;
                }, "strip", z.ZodTypeAny, {
                    chain: "Ethereum";
                    asset: "USDC";
                }, {
                    chain: "Ethereum";
                    asset: "USDC";
                }>;
            }, "strip", z.ZodTypeAny, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            }, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            }>>, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            }, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null>;
        }, "strip", z.ZodTypeAny, {
            ETH: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
            FLIP: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
            USDT: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
        }, {
            ETH: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
            FLIP: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
            USDT: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
        }>;
        Polkadot: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodNullable<z.ZodObject<{
                limit_order_fee_hundredth_pips: z.ZodNumber;
                range_order_fee_hundredth_pips: z.ZodNumber;
                range_order_total_fees_earned: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                limit_order_total_fees_earned: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                range_total_swap_inputs: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                limit_total_swap_inputs: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                quote_asset: z.ZodObject<{
                    chain: z.ZodLiteral<"Ethereum">;
                    asset: z.ZodLiteral<"USDC">;
                }, "strip", z.ZodTypeAny, {
                    chain: "Ethereum";
                    asset: "USDC";
                }, {
                    chain: "Ethereum";
                    asset: "USDC";
                }>;
            }, "strip", z.ZodTypeAny, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            }, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            }>>, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            }, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null>;
        }, "strip", z.ZodTypeAny, {
            DOT: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
        }, {
            DOT: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
        }>;
        Arbitrum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodNullable<z.ZodObject<{
                limit_order_fee_hundredth_pips: z.ZodNumber;
                range_order_fee_hundredth_pips: z.ZodNumber;
                range_order_total_fees_earned: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                limit_order_total_fees_earned: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                range_total_swap_inputs: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                limit_total_swap_inputs: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                quote_asset: z.ZodObject<{
                    chain: z.ZodLiteral<"Ethereum">;
                    asset: z.ZodLiteral<"USDC">;
                }, "strip", z.ZodTypeAny, {
                    chain: "Ethereum";
                    asset: "USDC";
                }, {
                    chain: "Ethereum";
                    asset: "USDC";
                }>;
            }, "strip", z.ZodTypeAny, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            }, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            }>>, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            }, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null>;
            USDC: z.ZodEffects<z.ZodNullable<z.ZodObject<{
                limit_order_fee_hundredth_pips: z.ZodNumber;
                range_order_fee_hundredth_pips: z.ZodNumber;
                range_order_total_fees_earned: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                limit_order_total_fees_earned: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                range_total_swap_inputs: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                limit_total_swap_inputs: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                quote_asset: z.ZodObject<{
                    chain: z.ZodLiteral<"Ethereum">;
                    asset: z.ZodLiteral<"USDC">;
                }, "strip", z.ZodTypeAny, {
                    chain: "Ethereum";
                    asset: "USDC";
                }, {
                    chain: "Ethereum";
                    asset: "USDC";
                }>;
            }, "strip", z.ZodTypeAny, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            }, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            }>>, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            }, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null>;
        }, "strip", z.ZodTypeAny, {
            ETH: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
            USDC: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
        }, {
            ETH: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
            USDC: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
        }>;
        Solana: z.ZodObject<{
            SOL: z.ZodEffects<z.ZodNullable<z.ZodObject<{
                limit_order_fee_hundredth_pips: z.ZodNumber;
                range_order_fee_hundredth_pips: z.ZodNumber;
                range_order_total_fees_earned: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                limit_order_total_fees_earned: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                range_total_swap_inputs: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                limit_total_swap_inputs: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                quote_asset: z.ZodObject<{
                    chain: z.ZodLiteral<"Ethereum">;
                    asset: z.ZodLiteral<"USDC">;
                }, "strip", z.ZodTypeAny, {
                    chain: "Ethereum";
                    asset: "USDC";
                }, {
                    chain: "Ethereum";
                    asset: "USDC";
                }>;
            }, "strip", z.ZodTypeAny, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            }, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            }>>, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            }, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null>;
            USDC: z.ZodEffects<z.ZodNullable<z.ZodObject<{
                limit_order_fee_hundredth_pips: z.ZodNumber;
                range_order_fee_hundredth_pips: z.ZodNumber;
                range_order_total_fees_earned: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                limit_order_total_fees_earned: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                range_total_swap_inputs: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                limit_total_swap_inputs: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                quote_asset: z.ZodObject<{
                    chain: z.ZodLiteral<"Ethereum">;
                    asset: z.ZodLiteral<"USDC">;
                }, "strip", z.ZodTypeAny, {
                    chain: "Ethereum";
                    asset: "USDC";
                }, {
                    chain: "Ethereum";
                    asset: "USDC";
                }>;
            }, "strip", z.ZodTypeAny, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            }, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            }>>, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            }, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null>;
        }, "strip", z.ZodTypeAny, {
            USDC: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
            SOL: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
        }, {
            USDC: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
            SOL: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
        }>;
        Assethub: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodNullable<z.ZodObject<{
                limit_order_fee_hundredth_pips: z.ZodNumber;
                range_order_fee_hundredth_pips: z.ZodNumber;
                range_order_total_fees_earned: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                limit_order_total_fees_earned: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                range_total_swap_inputs: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                limit_total_swap_inputs: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                quote_asset: z.ZodObject<{
                    chain: z.ZodLiteral<"Ethereum">;
                    asset: z.ZodLiteral<"USDC">;
                }, "strip", z.ZodTypeAny, {
                    chain: "Ethereum";
                    asset: "USDC";
                }, {
                    chain: "Ethereum";
                    asset: "USDC";
                }>;
            }, "strip", z.ZodTypeAny, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            }, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            }>>, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            }, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null>;
            USDC: z.ZodEffects<z.ZodNullable<z.ZodObject<{
                limit_order_fee_hundredth_pips: z.ZodNumber;
                range_order_fee_hundredth_pips: z.ZodNumber;
                range_order_total_fees_earned: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                limit_order_total_fees_earned: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                range_total_swap_inputs: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                limit_total_swap_inputs: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                quote_asset: z.ZodObject<{
                    chain: z.ZodLiteral<"Ethereum">;
                    asset: z.ZodLiteral<"USDC">;
                }, "strip", z.ZodTypeAny, {
                    chain: "Ethereum";
                    asset: "USDC";
                }, {
                    chain: "Ethereum";
                    asset: "USDC";
                }>;
            }, "strip", z.ZodTypeAny, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            }, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            }>>, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            }, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null>;
            USDT: z.ZodEffects<z.ZodNullable<z.ZodObject<{
                limit_order_fee_hundredth_pips: z.ZodNumber;
                range_order_fee_hundredth_pips: z.ZodNumber;
                range_order_total_fees_earned: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                limit_order_total_fees_earned: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                range_total_swap_inputs: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                limit_total_swap_inputs: z.ZodObject<{
                    base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                }, "strip", z.ZodTypeAny, {
                    base: bigint;
                    quote: bigint;
                }, {
                    base: string;
                    quote: string;
                }>;
                quote_asset: z.ZodObject<{
                    chain: z.ZodLiteral<"Ethereum">;
                    asset: z.ZodLiteral<"USDC">;
                }, "strip", z.ZodTypeAny, {
                    chain: "Ethereum";
                    asset: "USDC";
                }, {
                    chain: "Ethereum";
                    asset: "USDC";
                }>;
            }, "strip", z.ZodTypeAny, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            }, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            }>>, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            }, {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null>;
        }, "strip", z.ZodTypeAny, {
            USDC: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
            USDT: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
            DOT: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
        }, {
            USDC: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
            USDT: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
            DOT: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
        }>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: {
            BTC: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
        };
        Ethereum: {
            ETH: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
            FLIP: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
            USDT: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
        };
        Arbitrum: {
            ETH: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
            USDC: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
        };
        Solana: {
            USDC: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
            SOL: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
        };
        Assethub: {
            USDC: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
            USDT: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
            DOT: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
        };
    }, {
        Bitcoin: {
            BTC: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
        };
        Ethereum: {
            ETH: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
            FLIP: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
            USDT: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
        };
        Arbitrum: {
            ETH: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
            USDC: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
        };
        Solana: {
            USDC: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
            SOL: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
        };
        Assethub: {
            USDC: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
            USDT: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
            DOT: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
        };
    }>;
}, "strip", z.ZodTypeAny, {
    fees: {
        Bitcoin: {
            BTC: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
        };
        Ethereum: {
            ETH: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
            FLIP: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
            USDT: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
        };
        Arbitrum: {
            ETH: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
            USDC: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
        };
        Solana: {
            USDC: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
            SOL: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
        };
        Assethub: {
            USDC: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
            USDT: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
            DOT: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                limit_order_total_fees_earned: {
                    base: bigint;
                    quote: bigint;
                };
                range_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                limit_total_swap_inputs: {
                    base: bigint;
                    quote: bigint;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | {
                readonly limit_order_fee_hundredth_pips: 0;
                readonly range_order_fee_hundredth_pips: 0;
                readonly range_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_order_total_fees_earned: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly range_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly limit_total_swap_inputs: {
                    readonly base: "0x0";
                    readonly quote: "0x0";
                };
                readonly quote_asset: {
                    readonly chain: "Ethereum";
                    readonly asset: "USDC";
                };
            };
        };
    };
}, {
    fees: {
        Bitcoin: {
            BTC: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
        };
        Ethereum: {
            ETH: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
            FLIP: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
            USDT: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
        };
        Arbitrum: {
            ETH: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
            USDC: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
        };
        Solana: {
            USDC: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
            SOL: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
        };
        Assethub: {
            USDC: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
            USDT: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
            DOT: {
                limit_order_fee_hundredth_pips: number;
                range_order_fee_hundredth_pips: number;
                range_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                limit_order_total_fees_earned: {
                    base: string;
                    quote: string;
                };
                range_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                limit_total_swap_inputs: {
                    base: string;
                    quote: string;
                };
                quote_asset: {
                    chain: "Ethereum";
                    asset: "USDC";
                };
            } | null;
        };
    };
}>;
declare const cfEnvironment: z.ZodObject<{
    ingress_egress: z.ZodEffects<z.ZodObject<{
        minimum_deposit_amounts: z.ZodObject<Omit<{
            Bitcoin: z.ZodObject<{
                BTC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            }, "strip", z.ZodTypeAny, {
                BTC: bigint;
            }, {
                BTC: string | number;
            }>;
            Ethereum: z.ZodObject<{
                ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                FLIP: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            }, {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            }>;
            Polkadot: z.ZodObject<{
                DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            }, "strip", z.ZodTypeAny, {
                DOT: bigint;
            }, {
                DOT: string | number;
            }>;
            Arbitrum: z.ZodObject<{
                ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint;
                USDC: bigint;
            }, {
                ETH: string | number;
                USDC: string | number;
            }>;
            Solana: z.ZodObject<{
                SOL: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            }, "strip", z.ZodTypeAny, {
                USDC: bigint;
                SOL: bigint;
            }, {
                USDC: string | number;
                SOL: string | number;
            }>;
            Assethub: z.ZodObject<{
                DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            }, "strip", z.ZodTypeAny, {
                USDC: bigint;
                USDT: bigint;
                DOT: bigint;
            }, {
                USDC: string | number;
                USDT: string | number;
                DOT: string | number;
            }>;
        }, "Polkadot">, "strip", z.ZodTypeAny, {
            Bitcoin: {
                BTC: bigint;
            };
            Ethereum: {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            };
            Arbitrum: {
                ETH: bigint;
                USDC: bigint;
            };
            Solana: {
                USDC: bigint;
                SOL: bigint;
            };
            Assethub: {
                USDC: bigint;
                USDT: bigint;
                DOT: bigint;
            };
        }, {
            Bitcoin: {
                BTC: string | number;
            };
            Ethereum: {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            };
            Arbitrum: {
                ETH: string | number;
                USDC: string | number;
            };
            Solana: {
                USDC: string | number;
                SOL: string | number;
            };
            Assethub: {
                USDC: string | number;
                USDT: string | number;
                DOT: string | number;
            };
        }>;
        ingress_fees: z.ZodObject<Omit<{
            Bitcoin: z.ZodObject<{
                BTC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            }, "strip", z.ZodTypeAny, {
                BTC: bigint | null;
            }, {
                BTC: string | number | null;
            }>;
            Ethereum: z.ZodObject<{
                ETH: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                FLIP: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                USDT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            }, {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            }>;
            Polkadot: z.ZodObject<{
                DOT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            }, "strip", z.ZodTypeAny, {
                DOT: bigint | null;
            }, {
                DOT: string | number | null;
            }>;
            Arbitrum: z.ZodObject<{
                ETH: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint | null;
                USDC: bigint | null;
            }, {
                ETH: string | number | null;
                USDC: string | number | null;
            }>;
            Solana: z.ZodObject<{
                SOL: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            }, "strip", z.ZodTypeAny, {
                USDC: bigint | null;
                SOL: bigint | null;
            }, {
                USDC: string | number | null;
                SOL: string | number | null;
            }>;
            Assethub: z.ZodObject<{
                DOT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                USDT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            }, "strip", z.ZodTypeAny, {
                USDC: bigint | null;
                USDT: bigint | null;
                DOT: bigint | null;
            }, {
                USDC: string | number | null;
                USDT: string | number | null;
                DOT: string | number | null;
            }>;
        }, "Polkadot">, "strip", z.ZodTypeAny, {
            Bitcoin: {
                BTC: bigint | null;
            };
            Ethereum: {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            };
            Arbitrum: {
                ETH: bigint | null;
                USDC: bigint | null;
            };
            Solana: {
                USDC: bigint | null;
                SOL: bigint | null;
            };
            Assethub: {
                USDC: bigint | null;
                USDT: bigint | null;
                DOT: bigint | null;
            };
        }, {
            Bitcoin: {
                BTC: string | number | null;
            };
            Ethereum: {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            };
            Arbitrum: {
                ETH: string | number | null;
                USDC: string | number | null;
            };
            Solana: {
                USDC: string | number | null;
                SOL: string | number | null;
            };
            Assethub: {
                USDC: string | number | null;
                USDT: string | number | null;
                DOT: string | number | null;
            };
        }>;
        egress_fees: z.ZodObject<Omit<{
            Bitcoin: z.ZodObject<{
                BTC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            }, "strip", z.ZodTypeAny, {
                BTC: bigint | null;
            }, {
                BTC: string | number | null;
            }>;
            Ethereum: z.ZodObject<{
                ETH: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                FLIP: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                USDT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            }, {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            }>;
            Polkadot: z.ZodObject<{
                DOT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            }, "strip", z.ZodTypeAny, {
                DOT: bigint | null;
            }, {
                DOT: string | number | null;
            }>;
            Arbitrum: z.ZodObject<{
                ETH: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint | null;
                USDC: bigint | null;
            }, {
                ETH: string | number | null;
                USDC: string | number | null;
            }>;
            Solana: z.ZodObject<{
                SOL: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            }, "strip", z.ZodTypeAny, {
                USDC: bigint | null;
                SOL: bigint | null;
            }, {
                USDC: string | number | null;
                SOL: string | number | null;
            }>;
            Assethub: z.ZodObject<{
                DOT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                USDT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            }, "strip", z.ZodTypeAny, {
                USDC: bigint | null;
                USDT: bigint | null;
                DOT: bigint | null;
            }, {
                USDC: string | number | null;
                USDT: string | number | null;
                DOT: string | number | null;
            }>;
        }, "Polkadot">, "strip", z.ZodTypeAny, {
            Bitcoin: {
                BTC: bigint | null;
            };
            Ethereum: {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            };
            Arbitrum: {
                ETH: bigint | null;
                USDC: bigint | null;
            };
            Solana: {
                USDC: bigint | null;
                SOL: bigint | null;
            };
            Assethub: {
                USDC: bigint | null;
                USDT: bigint | null;
                DOT: bigint | null;
            };
        }, {
            Bitcoin: {
                BTC: string | number | null;
            };
            Ethereum: {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            };
            Arbitrum: {
                ETH: string | number | null;
                USDC: string | number | null;
            };
            Solana: {
                USDC: string | number | null;
                SOL: string | number | null;
            };
            Assethub: {
                USDC: string | number | null;
                USDT: string | number | null;
                DOT: string | number | null;
            };
        }>;
        witness_safety_margins: z.ZodObject<Omit<{
            Bitcoin: z.ZodNullable<z.ZodNumber>;
            Ethereum: z.ZodNullable<z.ZodNumber>;
            Polkadot: z.ZodNullable<z.ZodNumber>;
            Arbitrum: z.ZodNullable<z.ZodNumber>;
            Solana: z.ZodNullable<z.ZodNumber>;
            Assethub: z.ZodNullable<z.ZodNumber>;
        }, "Polkadot">, "strip", z.ZodTypeAny, {
            Bitcoin: number | null;
            Ethereum: number | null;
            Arbitrum: number | null;
            Solana: number | null;
            Assethub: number | null;
        }, {
            Bitcoin: number | null;
            Ethereum: number | null;
            Arbitrum: number | null;
            Solana: number | null;
            Assethub: number | null;
        }>;
        egress_dust_limits: z.ZodObject<Omit<{
            Bitcoin: z.ZodObject<{
                BTC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            }, "strip", z.ZodTypeAny, {
                BTC: bigint;
            }, {
                BTC: string | number;
            }>;
            Ethereum: z.ZodObject<{
                ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                FLIP: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            }, {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            }>;
            Polkadot: z.ZodObject<{
                DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            }, "strip", z.ZodTypeAny, {
                DOT: bigint;
            }, {
                DOT: string | number;
            }>;
            Arbitrum: z.ZodObject<{
                ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint;
                USDC: bigint;
            }, {
                ETH: string | number;
                USDC: string | number;
            }>;
            Solana: z.ZodObject<{
                SOL: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            }, "strip", z.ZodTypeAny, {
                USDC: bigint;
                SOL: bigint;
            }, {
                USDC: string | number;
                SOL: string | number;
            }>;
            Assethub: z.ZodObject<{
                DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            }, "strip", z.ZodTypeAny, {
                USDC: bigint;
                USDT: bigint;
                DOT: bigint;
            }, {
                USDC: string | number;
                USDT: string | number;
                DOT: string | number;
            }>;
        }, "Polkadot">, "strip", z.ZodTypeAny, {
            Bitcoin: {
                BTC: bigint;
            };
            Ethereum: {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            };
            Arbitrum: {
                ETH: bigint;
                USDC: bigint;
            };
            Solana: {
                USDC: bigint;
                SOL: bigint;
            };
            Assethub: {
                USDC: bigint;
                USDT: bigint;
                DOT: bigint;
            };
        }, {
            Bitcoin: {
                BTC: string | number;
            };
            Ethereum: {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            };
            Arbitrum: {
                ETH: string | number;
                USDC: string | number;
            };
            Solana: {
                USDC: string | number;
                SOL: string | number;
            };
            Assethub: {
                USDC: string | number;
                USDT: string | number;
                DOT: string | number;
            };
        }>;
        channel_opening_fees: z.ZodObject<Omit<{
            Bitcoin: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            Ethereum: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            Polkadot: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            Arbitrum: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            Solana: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            Assethub: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "Polkadot">, "strip", z.ZodTypeAny, {
            Bitcoin: bigint;
            Ethereum: bigint;
            Arbitrum: bigint;
            Solana: bigint;
            Assethub: bigint;
        }, {
            Bitcoin: string | number;
            Ethereum: string | number;
            Arbitrum: string | number;
            Solana: string | number;
            Assethub: string | number;
        }>;
    }, "strip", z.ZodTypeAny, {
        minimum_deposit_amounts: {
            Bitcoin: {
                BTC: bigint;
            };
            Ethereum: {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            };
            Arbitrum: {
                ETH: bigint;
                USDC: bigint;
            };
            Solana: {
                USDC: bigint;
                SOL: bigint;
            };
            Assethub: {
                USDC: bigint;
                USDT: bigint;
                DOT: bigint;
            };
        };
        ingress_fees: {
            Bitcoin: {
                BTC: bigint | null;
            };
            Ethereum: {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            };
            Arbitrum: {
                ETH: bigint | null;
                USDC: bigint | null;
            };
            Solana: {
                USDC: bigint | null;
                SOL: bigint | null;
            };
            Assethub: {
                USDC: bigint | null;
                USDT: bigint | null;
                DOT: bigint | null;
            };
        };
        egress_fees: {
            Bitcoin: {
                BTC: bigint | null;
            };
            Ethereum: {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            };
            Arbitrum: {
                ETH: bigint | null;
                USDC: bigint | null;
            };
            Solana: {
                USDC: bigint | null;
                SOL: bigint | null;
            };
            Assethub: {
                USDC: bigint | null;
                USDT: bigint | null;
                DOT: bigint | null;
            };
        };
        witness_safety_margins: {
            Bitcoin: number | null;
            Ethereum: number | null;
            Arbitrum: number | null;
            Solana: number | null;
            Assethub: number | null;
        };
        egress_dust_limits: {
            Bitcoin: {
                BTC: bigint;
            };
            Ethereum: {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            };
            Arbitrum: {
                ETH: bigint;
                USDC: bigint;
            };
            Solana: {
                USDC: bigint;
                SOL: bigint;
            };
            Assethub: {
                USDC: bigint;
                USDT: bigint;
                DOT: bigint;
            };
        };
        channel_opening_fees: {
            Bitcoin: bigint;
            Ethereum: bigint;
            Arbitrum: bigint;
            Solana: bigint;
            Assethub: bigint;
        };
    }, {
        minimum_deposit_amounts: {
            Bitcoin: {
                BTC: string | number;
            };
            Ethereum: {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            };
            Arbitrum: {
                ETH: string | number;
                USDC: string | number;
            };
            Solana: {
                USDC: string | number;
                SOL: string | number;
            };
            Assethub: {
                USDC: string | number;
                USDT: string | number;
                DOT: string | number;
            };
        };
        ingress_fees: {
            Bitcoin: {
                BTC: string | number | null;
            };
            Ethereum: {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            };
            Arbitrum: {
                ETH: string | number | null;
                USDC: string | number | null;
            };
            Solana: {
                USDC: string | number | null;
                SOL: string | number | null;
            };
            Assethub: {
                USDC: string | number | null;
                USDT: string | number | null;
                DOT: string | number | null;
            };
        };
        egress_fees: {
            Bitcoin: {
                BTC: string | number | null;
            };
            Ethereum: {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            };
            Arbitrum: {
                ETH: string | number | null;
                USDC: string | number | null;
            };
            Solana: {
                USDC: string | number | null;
                SOL: string | number | null;
            };
            Assethub: {
                USDC: string | number | null;
                USDT: string | number | null;
                DOT: string | number | null;
            };
        };
        witness_safety_margins: {
            Bitcoin: number | null;
            Ethereum: number | null;
            Arbitrum: number | null;
            Solana: number | null;
            Assethub: number | null;
        };
        egress_dust_limits: {
            Bitcoin: {
                BTC: string | number;
            };
            Ethereum: {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            };
            Arbitrum: {
                ETH: string | number;
                USDC: string | number;
            };
            Solana: {
                USDC: string | number;
                SOL: string | number;
            };
            Assethub: {
                USDC: string | number;
                USDT: string | number;
                DOT: string | number;
            };
        };
        channel_opening_fees: {
            Bitcoin: string | number;
            Ethereum: string | number;
            Arbitrum: string | number;
            Solana: string | number;
            Assethub: string | number;
        };
    }>, Rename<{
        minimum_deposit_amounts: {
            Bitcoin: {
                BTC: bigint;
            };
            Ethereum: {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            };
            Arbitrum: {
                ETH: bigint;
                USDC: bigint;
            };
            Solana: {
                USDC: bigint;
                SOL: bigint;
            };
            Assethub: {
                USDC: bigint;
                USDT: bigint;
                DOT: bigint;
            };
        };
        ingress_fees: {
            Bitcoin: {
                BTC: bigint | null;
            };
            Ethereum: {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            };
            Arbitrum: {
                ETH: bigint | null;
                USDC: bigint | null;
            };
            Solana: {
                USDC: bigint | null;
                SOL: bigint | null;
            };
            Assethub: {
                USDC: bigint | null;
                USDT: bigint | null;
                DOT: bigint | null;
            };
        };
        egress_fees: {
            Bitcoin: {
                BTC: bigint | null;
            };
            Ethereum: {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            };
            Arbitrum: {
                ETH: bigint | null;
                USDC: bigint | null;
            };
            Solana: {
                USDC: bigint | null;
                SOL: bigint | null;
            };
            Assethub: {
                USDC: bigint | null;
                USDT: bigint | null;
                DOT: bigint | null;
            };
        };
        witness_safety_margins: {
            Bitcoin: number | null;
            Ethereum: number | null;
            Arbitrum: number | null;
            Solana: number | null;
            Assethub: number | null;
        };
        egress_dust_limits: {
            Bitcoin: {
                BTC: bigint;
            };
            Ethereum: {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            };
            Arbitrum: {
                ETH: bigint;
                USDC: bigint;
            };
            Solana: {
                USDC: bigint;
                SOL: bigint;
            };
            Assethub: {
                USDC: bigint;
                USDT: bigint;
                DOT: bigint;
            };
        };
        channel_opening_fees: {
            Bitcoin: bigint;
            Ethereum: bigint;
            Arbitrum: bigint;
            Solana: bigint;
            Assethub: bigint;
        };
    }, {
        readonly egress_dust_limits: "minimum_egress_amounts";
    }>, {
        minimum_deposit_amounts: {
            Bitcoin: {
                BTC: string | number;
            };
            Ethereum: {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            };
            Arbitrum: {
                ETH: string | number;
                USDC: string | number;
            };
            Solana: {
                USDC: string | number;
                SOL: string | number;
            };
            Assethub: {
                USDC: string | number;
                USDT: string | number;
                DOT: string | number;
            };
        };
        ingress_fees: {
            Bitcoin: {
                BTC: string | number | null;
            };
            Ethereum: {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            };
            Arbitrum: {
                ETH: string | number | null;
                USDC: string | number | null;
            };
            Solana: {
                USDC: string | number | null;
                SOL: string | number | null;
            };
            Assethub: {
                USDC: string | number | null;
                USDT: string | number | null;
                DOT: string | number | null;
            };
        };
        egress_fees: {
            Bitcoin: {
                BTC: string | number | null;
            };
            Ethereum: {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            };
            Arbitrum: {
                ETH: string | number | null;
                USDC: string | number | null;
            };
            Solana: {
                USDC: string | number | null;
                SOL: string | number | null;
            };
            Assethub: {
                USDC: string | number | null;
                USDT: string | number | null;
                DOT: string | number | null;
            };
        };
        witness_safety_margins: {
            Bitcoin: number | null;
            Ethereum: number | null;
            Arbitrum: number | null;
            Solana: number | null;
            Assethub: number | null;
        };
        egress_dust_limits: {
            Bitcoin: {
                BTC: string | number;
            };
            Ethereum: {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            };
            Arbitrum: {
                ETH: string | number;
                USDC: string | number;
            };
            Solana: {
                USDC: string | number;
                SOL: string | number;
            };
            Assethub: {
                USDC: string | number;
                USDT: string | number;
                DOT: string | number;
            };
        };
        channel_opening_fees: {
            Bitcoin: string | number;
            Ethereum: string | number;
            Arbitrum: string | number;
            Solana: string | number;
            Assethub: string | number;
        };
    }>;
    swapping: z.ZodObject<{
        maximum_swap_amounts: z.ZodObject<Omit<{
            Bitcoin: z.ZodObject<{
                BTC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            }, "strip", z.ZodTypeAny, {
                BTC: bigint | null;
            }, {
                BTC: string | number | null;
            }>;
            Ethereum: z.ZodObject<{
                ETH: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                FLIP: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                USDT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            }, {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            }>;
            Polkadot: z.ZodObject<{
                DOT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            }, "strip", z.ZodTypeAny, {
                DOT: bigint | null;
            }, {
                DOT: string | number | null;
            }>;
            Arbitrum: z.ZodObject<{
                ETH: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint | null;
                USDC: bigint | null;
            }, {
                ETH: string | number | null;
                USDC: string | number | null;
            }>;
            Solana: z.ZodObject<{
                SOL: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            }, "strip", z.ZodTypeAny, {
                USDC: bigint | null;
                SOL: bigint | null;
            }, {
                USDC: string | number | null;
                SOL: string | number | null;
            }>;
            Assethub: z.ZodObject<{
                DOT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                USDT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            }, "strip", z.ZodTypeAny, {
                USDC: bigint | null;
                USDT: bigint | null;
                DOT: bigint | null;
            }, {
                USDC: string | number | null;
                USDT: string | number | null;
                DOT: string | number | null;
            }>;
        }, "Polkadot">, "strip", z.ZodTypeAny, {
            Bitcoin: {
                BTC: bigint | null;
            };
            Ethereum: {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            };
            Arbitrum: {
                ETH: bigint | null;
                USDC: bigint | null;
            };
            Solana: {
                USDC: bigint | null;
                SOL: bigint | null;
            };
            Assethub: {
                USDC: bigint | null;
                USDT: bigint | null;
                DOT: bigint | null;
            };
        }, {
            Bitcoin: {
                BTC: string | number | null;
            };
            Ethereum: {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            };
            Arbitrum: {
                ETH: string | number | null;
                USDC: string | number | null;
            };
            Solana: {
                USDC: string | number | null;
                SOL: string | number | null;
            };
            Assethub: {
                USDC: string | number | null;
                USDT: string | number | null;
                DOT: string | number | null;
            };
        }>;
        network_fee_hundredth_pips: z.ZodNumber;
        swap_retry_delay_blocks: z.ZodOptional<z.ZodNumber>;
        max_swap_retry_duration_blocks: z.ZodOptional<z.ZodNumber>;
        max_swap_request_duration_blocks: z.ZodOptional<z.ZodNumber>;
        minimum_chunk_size: z.ZodOptional<z.ZodObject<Omit<{
            Bitcoin: z.ZodObject<{
                BTC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            }, "strip", z.ZodTypeAny, {
                BTC: bigint | null;
            }, {
                BTC: string | number | null;
            }>;
            Ethereum: z.ZodObject<{
                ETH: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                FLIP: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                USDT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            }, {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            }>;
            Polkadot: z.ZodObject<{
                DOT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            }, "strip", z.ZodTypeAny, {
                DOT: bigint | null;
            }, {
                DOT: string | number | null;
            }>;
            Arbitrum: z.ZodObject<{
                ETH: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            }, "strip", z.ZodTypeAny, {
                ETH: bigint | null;
                USDC: bigint | null;
            }, {
                ETH: string | number | null;
                USDC: string | number | null;
            }>;
            Solana: z.ZodObject<{
                SOL: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            }, "strip", z.ZodTypeAny, {
                USDC: bigint | null;
                SOL: bigint | null;
            }, {
                USDC: string | number | null;
                SOL: string | number | null;
            }>;
            Assethub: z.ZodObject<{
                DOT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                USDC: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
                USDT: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
            }, "strip", z.ZodTypeAny, {
                USDC: bigint | null;
                USDT: bigint | null;
                DOT: bigint | null;
            }, {
                USDC: string | number | null;
                USDT: string | number | null;
                DOT: string | number | null;
            }>;
        }, "Polkadot">, "strip", z.ZodTypeAny, {
            Bitcoin: {
                BTC: bigint | null;
            };
            Ethereum: {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            };
            Arbitrum: {
                ETH: bigint | null;
                USDC: bigint | null;
            };
            Solana: {
                USDC: bigint | null;
                SOL: bigint | null;
            };
            Assethub: {
                USDC: bigint | null;
                USDT: bigint | null;
                DOT: bigint | null;
            };
        }, {
            Bitcoin: {
                BTC: string | number | null;
            };
            Ethereum: {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            };
            Arbitrum: {
                ETH: string | number | null;
                USDC: string | number | null;
            };
            Solana: {
                USDC: string | number | null;
                SOL: string | number | null;
            };
            Assethub: {
                USDC: string | number | null;
                USDT: string | number | null;
                DOT: string | number | null;
            };
        }>>;
        network_fees: z.ZodObject<{
            regular_network_fee: z.ZodObject<{
                standard_rate_and_minimum: z.ZodObject<{
                    rate: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    minimum: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                }, "strip", z.ZodTypeAny, {
                    minimum: bigint;
                    rate: bigint;
                }, {
                    minimum: string | number;
                    rate: string | number;
                }>;
                rates: z.ZodObject<Omit<{
                    Bitcoin: z.ZodObject<{
                        BTC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    }, "strip", z.ZodTypeAny, {
                        BTC: bigint;
                    }, {
                        BTC: string | number;
                    }>;
                    Ethereum: z.ZodObject<{
                        ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                        USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                        FLIP: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                        USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    }, "strip", z.ZodTypeAny, {
                        ETH: bigint;
                        USDC: bigint;
                        FLIP: bigint;
                        USDT: bigint;
                    }, {
                        ETH: string | number;
                        USDC: string | number;
                        FLIP: string | number;
                        USDT: string | number;
                    }>;
                    Polkadot: z.ZodObject<{
                        DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    }, "strip", z.ZodTypeAny, {
                        DOT: bigint;
                    }, {
                        DOT: string | number;
                    }>;
                    Arbitrum: z.ZodObject<{
                        ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                        USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    }, "strip", z.ZodTypeAny, {
                        ETH: bigint;
                        USDC: bigint;
                    }, {
                        ETH: string | number;
                        USDC: string | number;
                    }>;
                    Solana: z.ZodObject<{
                        SOL: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                        USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    }, "strip", z.ZodTypeAny, {
                        USDC: bigint;
                        SOL: bigint;
                    }, {
                        USDC: string | number;
                        SOL: string | number;
                    }>;
                    Assethub: z.ZodObject<{
                        DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                        USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                        USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    }, "strip", z.ZodTypeAny, {
                        USDC: bigint;
                        USDT: bigint;
                        DOT: bigint;
                    }, {
                        USDC: string | number;
                        USDT: string | number;
                        DOT: string | number;
                    }>;
                }, "Polkadot">, "strip", z.ZodTypeAny, {
                    Bitcoin: {
                        BTC: bigint;
                    };
                    Ethereum: {
                        ETH: bigint;
                        USDC: bigint;
                        FLIP: bigint;
                        USDT: bigint;
                    };
                    Arbitrum: {
                        ETH: bigint;
                        USDC: bigint;
                    };
                    Solana: {
                        USDC: bigint;
                        SOL: bigint;
                    };
                    Assethub: {
                        USDC: bigint;
                        USDT: bigint;
                        DOT: bigint;
                    };
                }, {
                    Bitcoin: {
                        BTC: string | number;
                    };
                    Ethereum: {
                        ETH: string | number;
                        USDC: string | number;
                        FLIP: string | number;
                        USDT: string | number;
                    };
                    Arbitrum: {
                        ETH: string | number;
                        USDC: string | number;
                    };
                    Solana: {
                        USDC: string | number;
                        SOL: string | number;
                    };
                    Assethub: {
                        USDC: string | number;
                        USDT: string | number;
                        DOT: string | number;
                    };
                }>;
            }, "strip", z.ZodTypeAny, {
                standard_rate_and_minimum: {
                    minimum: bigint;
                    rate: bigint;
                };
                rates: {
                    Bitcoin: {
                        BTC: bigint;
                    };
                    Ethereum: {
                        ETH: bigint;
                        USDC: bigint;
                        FLIP: bigint;
                        USDT: bigint;
                    };
                    Arbitrum: {
                        ETH: bigint;
                        USDC: bigint;
                    };
                    Solana: {
                        USDC: bigint;
                        SOL: bigint;
                    };
                    Assethub: {
                        USDC: bigint;
                        USDT: bigint;
                        DOT: bigint;
                    };
                };
            }, {
                standard_rate_and_minimum: {
                    minimum: string | number;
                    rate: string | number;
                };
                rates: {
                    Bitcoin: {
                        BTC: string | number;
                    };
                    Ethereum: {
                        ETH: string | number;
                        USDC: string | number;
                        FLIP: string | number;
                        USDT: string | number;
                    };
                    Arbitrum: {
                        ETH: string | number;
                        USDC: string | number;
                    };
                    Solana: {
                        USDC: string | number;
                        SOL: string | number;
                    };
                    Assethub: {
                        USDC: string | number;
                        USDT: string | number;
                        DOT: string | number;
                    };
                };
            }>;
            internal_swap_network_fee: z.ZodObject<{
                standard_rate_and_minimum: z.ZodObject<{
                    rate: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    minimum: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                }, "strip", z.ZodTypeAny, {
                    minimum: bigint;
                    rate: bigint;
                }, {
                    minimum: string | number;
                    rate: string | number;
                }>;
                rates: z.ZodObject<Omit<{
                    Bitcoin: z.ZodObject<{
                        BTC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    }, "strip", z.ZodTypeAny, {
                        BTC: bigint;
                    }, {
                        BTC: string | number;
                    }>;
                    Ethereum: z.ZodObject<{
                        ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                        USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                        FLIP: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                        USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    }, "strip", z.ZodTypeAny, {
                        ETH: bigint;
                        USDC: bigint;
                        FLIP: bigint;
                        USDT: bigint;
                    }, {
                        ETH: string | number;
                        USDC: string | number;
                        FLIP: string | number;
                        USDT: string | number;
                    }>;
                    Polkadot: z.ZodObject<{
                        DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    }, "strip", z.ZodTypeAny, {
                        DOT: bigint;
                    }, {
                        DOT: string | number;
                    }>;
                    Arbitrum: z.ZodObject<{
                        ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                        USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    }, "strip", z.ZodTypeAny, {
                        ETH: bigint;
                        USDC: bigint;
                    }, {
                        ETH: string | number;
                        USDC: string | number;
                    }>;
                    Solana: z.ZodObject<{
                        SOL: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                        USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    }, "strip", z.ZodTypeAny, {
                        USDC: bigint;
                        SOL: bigint;
                    }, {
                        USDC: string | number;
                        SOL: string | number;
                    }>;
                    Assethub: z.ZodObject<{
                        DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                        USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                        USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
                    }, "strip", z.ZodTypeAny, {
                        USDC: bigint;
                        USDT: bigint;
                        DOT: bigint;
                    }, {
                        USDC: string | number;
                        USDT: string | number;
                        DOT: string | number;
                    }>;
                }, "Polkadot">, "strip", z.ZodTypeAny, {
                    Bitcoin: {
                        BTC: bigint;
                    };
                    Ethereum: {
                        ETH: bigint;
                        USDC: bigint;
                        FLIP: bigint;
                        USDT: bigint;
                    };
                    Arbitrum: {
                        ETH: bigint;
                        USDC: bigint;
                    };
                    Solana: {
                        USDC: bigint;
                        SOL: bigint;
                    };
                    Assethub: {
                        USDC: bigint;
                        USDT: bigint;
                        DOT: bigint;
                    };
                }, {
                    Bitcoin: {
                        BTC: string | number;
                    };
                    Ethereum: {
                        ETH: string | number;
                        USDC: string | number;
                        FLIP: string | number;
                        USDT: string | number;
                    };
                    Arbitrum: {
                        ETH: string | number;
                        USDC: string | number;
                    };
                    Solana: {
                        USDC: string | number;
                        SOL: string | number;
                    };
                    Assethub: {
                        USDC: string | number;
                        USDT: string | number;
                        DOT: string | number;
                    };
                }>;
            }, "strip", z.ZodTypeAny, {
                standard_rate_and_minimum: {
                    minimum: bigint;
                    rate: bigint;
                };
                rates: {
                    Bitcoin: {
                        BTC: bigint;
                    };
                    Ethereum: {
                        ETH: bigint;
                        USDC: bigint;
                        FLIP: bigint;
                        USDT: bigint;
                    };
                    Arbitrum: {
                        ETH: bigint;
                        USDC: bigint;
                    };
                    Solana: {
                        USDC: bigint;
                        SOL: bigint;
                    };
                    Assethub: {
                        USDC: bigint;
                        USDT: bigint;
                        DOT: bigint;
                    };
                };
            }, {
                standard_rate_and_minimum: {
                    minimum: string | number;
                    rate: string | number;
                };
                rates: {
                    Bitcoin: {
                        BTC: string | number;
                    };
                    Ethereum: {
                        ETH: string | number;
                        USDC: string | number;
                        FLIP: string | number;
                        USDT: string | number;
                    };
                    Arbitrum: {
                        ETH: string | number;
                        USDC: string | number;
                    };
                    Solana: {
                        USDC: string | number;
                        SOL: string | number;
                    };
                    Assethub: {
                        USDC: string | number;
                        USDT: string | number;
                        DOT: string | number;
                    };
                };
            }>;
        }, "strip", z.ZodTypeAny, {
            regular_network_fee: {
                standard_rate_and_minimum: {
                    minimum: bigint;
                    rate: bigint;
                };
                rates: {
                    Bitcoin: {
                        BTC: bigint;
                    };
                    Ethereum: {
                        ETH: bigint;
                        USDC: bigint;
                        FLIP: bigint;
                        USDT: bigint;
                    };
                    Arbitrum: {
                        ETH: bigint;
                        USDC: bigint;
                    };
                    Solana: {
                        USDC: bigint;
                        SOL: bigint;
                    };
                    Assethub: {
                        USDC: bigint;
                        USDT: bigint;
                        DOT: bigint;
                    };
                };
            };
            internal_swap_network_fee: {
                standard_rate_and_minimum: {
                    minimum: bigint;
                    rate: bigint;
                };
                rates: {
                    Bitcoin: {
                        BTC: bigint;
                    };
                    Ethereum: {
                        ETH: bigint;
                        USDC: bigint;
                        FLIP: bigint;
                        USDT: bigint;
                    };
                    Arbitrum: {
                        ETH: bigint;
                        USDC: bigint;
                    };
                    Solana: {
                        USDC: bigint;
                        SOL: bigint;
                    };
                    Assethub: {
                        USDC: bigint;
                        USDT: bigint;
                        DOT: bigint;
                    };
                };
            };
        }, {
            regular_network_fee: {
                standard_rate_and_minimum: {
                    minimum: string | number;
                    rate: string | number;
                };
                rates: {
                    Bitcoin: {
                        BTC: string | number;
                    };
                    Ethereum: {
                        ETH: string | number;
                        USDC: string | number;
                        FLIP: string | number;
                        USDT: string | number;
                    };
                    Arbitrum: {
                        ETH: string | number;
                        USDC: string | number;
                    };
                    Solana: {
                        USDC: string | number;
                        SOL: string | number;
                    };
                    Assethub: {
                        USDC: string | number;
                        USDT: string | number;
                        DOT: string | number;
                    };
                };
            };
            internal_swap_network_fee: {
                standard_rate_and_minimum: {
                    minimum: string | number;
                    rate: string | number;
                };
                rates: {
                    Bitcoin: {
                        BTC: string | number;
                    };
                    Ethereum: {
                        ETH: string | number;
                        USDC: string | number;
                        FLIP: string | number;
                        USDT: string | number;
                    };
                    Arbitrum: {
                        ETH: string | number;
                        USDC: string | number;
                    };
                    Solana: {
                        USDC: string | number;
                        SOL: string | number;
                    };
                    Assethub: {
                        USDC: string | number;
                        USDT: string | number;
                        DOT: string | number;
                    };
                };
            };
        }>;
    }, "strip", z.ZodTypeAny, {
        maximum_swap_amounts: {
            Bitcoin: {
                BTC: bigint | null;
            };
            Ethereum: {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            };
            Arbitrum: {
                ETH: bigint | null;
                USDC: bigint | null;
            };
            Solana: {
                USDC: bigint | null;
                SOL: bigint | null;
            };
            Assethub: {
                USDC: bigint | null;
                USDT: bigint | null;
                DOT: bigint | null;
            };
        };
        network_fee_hundredth_pips: number;
        network_fees: {
            regular_network_fee: {
                standard_rate_and_minimum: {
                    minimum: bigint;
                    rate: bigint;
                };
                rates: {
                    Bitcoin: {
                        BTC: bigint;
                    };
                    Ethereum: {
                        ETH: bigint;
                        USDC: bigint;
                        FLIP: bigint;
                        USDT: bigint;
                    };
                    Arbitrum: {
                        ETH: bigint;
                        USDC: bigint;
                    };
                    Solana: {
                        USDC: bigint;
                        SOL: bigint;
                    };
                    Assethub: {
                        USDC: bigint;
                        USDT: bigint;
                        DOT: bigint;
                    };
                };
            };
            internal_swap_network_fee: {
                standard_rate_and_minimum: {
                    minimum: bigint;
                    rate: bigint;
                };
                rates: {
                    Bitcoin: {
                        BTC: bigint;
                    };
                    Ethereum: {
                        ETH: bigint;
                        USDC: bigint;
                        FLIP: bigint;
                        USDT: bigint;
                    };
                    Arbitrum: {
                        ETH: bigint;
                        USDC: bigint;
                    };
                    Solana: {
                        USDC: bigint;
                        SOL: bigint;
                    };
                    Assethub: {
                        USDC: bigint;
                        USDT: bigint;
                        DOT: bigint;
                    };
                };
            };
        };
        swap_retry_delay_blocks?: number | undefined;
        max_swap_retry_duration_blocks?: number | undefined;
        max_swap_request_duration_blocks?: number | undefined;
        minimum_chunk_size?: {
            Bitcoin: {
                BTC: bigint | null;
            };
            Ethereum: {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            };
            Arbitrum: {
                ETH: bigint | null;
                USDC: bigint | null;
            };
            Solana: {
                USDC: bigint | null;
                SOL: bigint | null;
            };
            Assethub: {
                USDC: bigint | null;
                USDT: bigint | null;
                DOT: bigint | null;
            };
        } | undefined;
    }, {
        maximum_swap_amounts: {
            Bitcoin: {
                BTC: string | number | null;
            };
            Ethereum: {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            };
            Arbitrum: {
                ETH: string | number | null;
                USDC: string | number | null;
            };
            Solana: {
                USDC: string | number | null;
                SOL: string | number | null;
            };
            Assethub: {
                USDC: string | number | null;
                USDT: string | number | null;
                DOT: string | number | null;
            };
        };
        network_fee_hundredth_pips: number;
        network_fees: {
            regular_network_fee: {
                standard_rate_and_minimum: {
                    minimum: string | number;
                    rate: string | number;
                };
                rates: {
                    Bitcoin: {
                        BTC: string | number;
                    };
                    Ethereum: {
                        ETH: string | number;
                        USDC: string | number;
                        FLIP: string | number;
                        USDT: string | number;
                    };
                    Arbitrum: {
                        ETH: string | number;
                        USDC: string | number;
                    };
                    Solana: {
                        USDC: string | number;
                        SOL: string | number;
                    };
                    Assethub: {
                        USDC: string | number;
                        USDT: string | number;
                        DOT: string | number;
                    };
                };
            };
            internal_swap_network_fee: {
                standard_rate_and_minimum: {
                    minimum: string | number;
                    rate: string | number;
                };
                rates: {
                    Bitcoin: {
                        BTC: string | number;
                    };
                    Ethereum: {
                        ETH: string | number;
                        USDC: string | number;
                        FLIP: string | number;
                        USDT: string | number;
                    };
                    Arbitrum: {
                        ETH: string | number;
                        USDC: string | number;
                    };
                    Solana: {
                        USDC: string | number;
                        SOL: string | number;
                    };
                    Assethub: {
                        USDC: string | number;
                        USDT: string | number;
                        DOT: string | number;
                    };
                };
            };
        };
        swap_retry_delay_blocks?: number | undefined;
        max_swap_retry_duration_blocks?: number | undefined;
        max_swap_request_duration_blocks?: number | undefined;
        minimum_chunk_size?: {
            Bitcoin: {
                BTC: string | number | null;
            };
            Ethereum: {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            };
            Arbitrum: {
                ETH: string | number | null;
                USDC: string | number | null;
            };
            Solana: {
                USDC: string | number | null;
                SOL: string | number | null;
            };
            Assethub: {
                USDC: string | number | null;
                USDT: string | number | null;
                DOT: string | number | null;
            };
        } | undefined;
    }>;
    funding: z.ZodObject<{
        redemption_tax: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        minimum_funding_amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        redemption_tax: bigint;
        minimum_funding_amount: bigint;
    }, {
        redemption_tax: string | number;
        minimum_funding_amount: string | number;
    }>;
    pools: z.ZodObject<{
        fees: z.ZodObject<Omit<{
            Bitcoin: z.ZodObject<{
                BTC: z.ZodEffects<z.ZodNullable<z.ZodObject<{
                    limit_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    range_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    quote_asset: z.ZodObject<{
                        chain: z.ZodLiteral<"Ethereum">;
                        asset: z.ZodLiteral<"USDC">;
                    }, "strip", z.ZodTypeAny, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }>;
                }, "strip", z.ZodTypeAny, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }>>, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null>;
            }, "strip", z.ZodTypeAny, {
                BTC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
            }, {
                BTC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
            }>;
            Ethereum: z.ZodObject<{
                ETH: z.ZodEffects<z.ZodNullable<z.ZodObject<{
                    limit_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    range_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    quote_asset: z.ZodObject<{
                        chain: z.ZodLiteral<"Ethereum">;
                        asset: z.ZodLiteral<"USDC">;
                    }, "strip", z.ZodTypeAny, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }>;
                }, "strip", z.ZodTypeAny, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }>>, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null>;
                FLIP: z.ZodEffects<z.ZodNullable<z.ZodObject<{
                    limit_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    range_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    quote_asset: z.ZodObject<{
                        chain: z.ZodLiteral<"Ethereum">;
                        asset: z.ZodLiteral<"USDC">;
                    }, "strip", z.ZodTypeAny, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }>;
                }, "strip", z.ZodTypeAny, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }>>, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null>;
                USDT: z.ZodEffects<z.ZodNullable<z.ZodObject<{
                    limit_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    range_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    quote_asset: z.ZodObject<{
                        chain: z.ZodLiteral<"Ethereum">;
                        asset: z.ZodLiteral<"USDC">;
                    }, "strip", z.ZodTypeAny, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }>;
                }, "strip", z.ZodTypeAny, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }>>, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null>;
            }, "strip", z.ZodTypeAny, {
                ETH: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
                FLIP: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
                USDT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
            }, {
                ETH: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
                FLIP: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
                USDT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
            }>;
            Polkadot: z.ZodObject<{
                DOT: z.ZodEffects<z.ZodNullable<z.ZodObject<{
                    limit_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    range_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    quote_asset: z.ZodObject<{
                        chain: z.ZodLiteral<"Ethereum">;
                        asset: z.ZodLiteral<"USDC">;
                    }, "strip", z.ZodTypeAny, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }>;
                }, "strip", z.ZodTypeAny, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }>>, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null>;
            }, "strip", z.ZodTypeAny, {
                DOT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
            }, {
                DOT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
            }>;
            Arbitrum: z.ZodObject<{
                ETH: z.ZodEffects<z.ZodNullable<z.ZodObject<{
                    limit_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    range_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    quote_asset: z.ZodObject<{
                        chain: z.ZodLiteral<"Ethereum">;
                        asset: z.ZodLiteral<"USDC">;
                    }, "strip", z.ZodTypeAny, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }>;
                }, "strip", z.ZodTypeAny, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }>>, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null>;
                USDC: z.ZodEffects<z.ZodNullable<z.ZodObject<{
                    limit_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    range_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    quote_asset: z.ZodObject<{
                        chain: z.ZodLiteral<"Ethereum">;
                        asset: z.ZodLiteral<"USDC">;
                    }, "strip", z.ZodTypeAny, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }>;
                }, "strip", z.ZodTypeAny, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }>>, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null>;
            }, "strip", z.ZodTypeAny, {
                ETH: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
            }, {
                ETH: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
            }>;
            Solana: z.ZodObject<{
                SOL: z.ZodEffects<z.ZodNullable<z.ZodObject<{
                    limit_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    range_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    quote_asset: z.ZodObject<{
                        chain: z.ZodLiteral<"Ethereum">;
                        asset: z.ZodLiteral<"USDC">;
                    }, "strip", z.ZodTypeAny, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }>;
                }, "strip", z.ZodTypeAny, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }>>, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null>;
                USDC: z.ZodEffects<z.ZodNullable<z.ZodObject<{
                    limit_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    range_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    quote_asset: z.ZodObject<{
                        chain: z.ZodLiteral<"Ethereum">;
                        asset: z.ZodLiteral<"USDC">;
                    }, "strip", z.ZodTypeAny, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }>;
                }, "strip", z.ZodTypeAny, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }>>, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null>;
            }, "strip", z.ZodTypeAny, {
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
                SOL: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
            }, {
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
                SOL: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
            }>;
            Assethub: z.ZodObject<{
                DOT: z.ZodEffects<z.ZodNullable<z.ZodObject<{
                    limit_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    range_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    quote_asset: z.ZodObject<{
                        chain: z.ZodLiteral<"Ethereum">;
                        asset: z.ZodLiteral<"USDC">;
                    }, "strip", z.ZodTypeAny, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }>;
                }, "strip", z.ZodTypeAny, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }>>, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null>;
                USDC: z.ZodEffects<z.ZodNullable<z.ZodObject<{
                    limit_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    range_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    quote_asset: z.ZodObject<{
                        chain: z.ZodLiteral<"Ethereum">;
                        asset: z.ZodLiteral<"USDC">;
                    }, "strip", z.ZodTypeAny, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }>;
                }, "strip", z.ZodTypeAny, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }>>, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null>;
                USDT: z.ZodEffects<z.ZodNullable<z.ZodObject<{
                    limit_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_fee_hundredth_pips: z.ZodNumber;
                    range_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_order_total_fees_earned: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    range_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    limit_total_swap_inputs: z.ZodObject<{
                        base: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                        quote: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                    }, "strip", z.ZodTypeAny, {
                        base: bigint;
                        quote: bigint;
                    }, {
                        base: string;
                        quote: string;
                    }>;
                    quote_asset: z.ZodObject<{
                        chain: z.ZodLiteral<"Ethereum">;
                        asset: z.ZodLiteral<"USDC">;
                    }, "strip", z.ZodTypeAny, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }, {
                        chain: "Ethereum";
                        asset: "USDC";
                    }>;
                }, "strip", z.ZodTypeAny, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                }>>, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                }, {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null>;
            }, "strip", z.ZodTypeAny, {
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
                USDT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
                DOT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
            }, {
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
                USDT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
                DOT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
            }>;
        }, "Polkadot">, "strip", z.ZodTypeAny, {
            Bitcoin: {
                BTC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
            };
            Ethereum: {
                ETH: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
                FLIP: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
                USDT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
            };
            Arbitrum: {
                ETH: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
            };
            Solana: {
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
                SOL: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
            };
            Assethub: {
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
                USDT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
                DOT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
            };
        }, {
            Bitcoin: {
                BTC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
            };
            Ethereum: {
                ETH: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
                FLIP: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
                USDT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
            };
            Arbitrum: {
                ETH: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
            };
            Solana: {
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
                SOL: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
            };
            Assethub: {
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
                USDT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
                DOT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
            };
        }>;
    }, "strip", z.ZodTypeAny, {
        fees: {
            Bitcoin: {
                BTC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
            };
            Ethereum: {
                ETH: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
                FLIP: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
                USDT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
            };
            Arbitrum: {
                ETH: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
            };
            Solana: {
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
                SOL: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
            };
            Assethub: {
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
                USDT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
                DOT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
            };
        };
    }, {
        fees: {
            Bitcoin: {
                BTC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
            };
            Ethereum: {
                ETH: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
                FLIP: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
                USDT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
            };
            Arbitrum: {
                ETH: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
            };
            Solana: {
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
                SOL: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
            };
            Assethub: {
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
                USDT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
                DOT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
            };
        };
    }>;
}, "strip", z.ZodTypeAny, {
    ingress_egress: Omit<{
        minimum_deposit_amounts: {
            Bitcoin: {
                BTC: bigint;
            };
            Ethereum: {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            };
            Arbitrum: {
                ETH: bigint;
                USDC: bigint;
            };
            Solana: {
                USDC: bigint;
                SOL: bigint;
            };
            Assethub: {
                USDC: bigint;
                USDT: bigint;
                DOT: bigint;
            };
        };
        ingress_fees: {
            Bitcoin: {
                BTC: bigint | null;
            };
            Ethereum: {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            };
            Arbitrum: {
                ETH: bigint | null;
                USDC: bigint | null;
            };
            Solana: {
                USDC: bigint | null;
                SOL: bigint | null;
            };
            Assethub: {
                USDC: bigint | null;
                USDT: bigint | null;
                DOT: bigint | null;
            };
        };
        egress_fees: {
            Bitcoin: {
                BTC: bigint | null;
            };
            Ethereum: {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            };
            Arbitrum: {
                ETH: bigint | null;
                USDC: bigint | null;
            };
            Solana: {
                USDC: bigint | null;
                SOL: bigint | null;
            };
            Assethub: {
                USDC: bigint | null;
                USDT: bigint | null;
                DOT: bigint | null;
            };
        };
        witness_safety_margins: {
            Bitcoin: number | null;
            Ethereum: number | null;
            Arbitrum: number | null;
            Solana: number | null;
            Assethub: number | null;
        };
        egress_dust_limits: {
            Bitcoin: {
                BTC: bigint;
            };
            Ethereum: {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            };
            Arbitrum: {
                ETH: bigint;
                USDC: bigint;
            };
            Solana: {
                USDC: bigint;
                SOL: bigint;
            };
            Assethub: {
                USDC: bigint;
                USDT: bigint;
                DOT: bigint;
            };
        };
        channel_opening_fees: {
            Bitcoin: bigint;
            Ethereum: bigint;
            Arbitrum: bigint;
            Solana: bigint;
            Assethub: bigint;
        };
    }, "egress_dust_limits"> & {
        readonly minimum_egress_amounts: {
            Bitcoin: {
                BTC: bigint;
            };
            Ethereum: {
                ETH: bigint;
                USDC: bigint;
                FLIP: bigint;
                USDT: bigint;
            };
            Arbitrum: {
                ETH: bigint;
                USDC: bigint;
            };
            Solana: {
                USDC: bigint;
                SOL: bigint;
            };
            Assethub: {
                USDC: bigint;
                USDT: bigint;
                DOT: bigint;
            };
        };
    };
    swapping: {
        maximum_swap_amounts: {
            Bitcoin: {
                BTC: bigint | null;
            };
            Ethereum: {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            };
            Arbitrum: {
                ETH: bigint | null;
                USDC: bigint | null;
            };
            Solana: {
                USDC: bigint | null;
                SOL: bigint | null;
            };
            Assethub: {
                USDC: bigint | null;
                USDT: bigint | null;
                DOT: bigint | null;
            };
        };
        network_fee_hundredth_pips: number;
        network_fees: {
            regular_network_fee: {
                standard_rate_and_minimum: {
                    minimum: bigint;
                    rate: bigint;
                };
                rates: {
                    Bitcoin: {
                        BTC: bigint;
                    };
                    Ethereum: {
                        ETH: bigint;
                        USDC: bigint;
                        FLIP: bigint;
                        USDT: bigint;
                    };
                    Arbitrum: {
                        ETH: bigint;
                        USDC: bigint;
                    };
                    Solana: {
                        USDC: bigint;
                        SOL: bigint;
                    };
                    Assethub: {
                        USDC: bigint;
                        USDT: bigint;
                        DOT: bigint;
                    };
                };
            };
            internal_swap_network_fee: {
                standard_rate_and_minimum: {
                    minimum: bigint;
                    rate: bigint;
                };
                rates: {
                    Bitcoin: {
                        BTC: bigint;
                    };
                    Ethereum: {
                        ETH: bigint;
                        USDC: bigint;
                        FLIP: bigint;
                        USDT: bigint;
                    };
                    Arbitrum: {
                        ETH: bigint;
                        USDC: bigint;
                    };
                    Solana: {
                        USDC: bigint;
                        SOL: bigint;
                    };
                    Assethub: {
                        USDC: bigint;
                        USDT: bigint;
                        DOT: bigint;
                    };
                };
            };
        };
        swap_retry_delay_blocks?: number | undefined;
        max_swap_retry_duration_blocks?: number | undefined;
        max_swap_request_duration_blocks?: number | undefined;
        minimum_chunk_size?: {
            Bitcoin: {
                BTC: bigint | null;
            };
            Ethereum: {
                ETH: bigint | null;
                USDC: bigint | null;
                FLIP: bigint | null;
                USDT: bigint | null;
            };
            Arbitrum: {
                ETH: bigint | null;
                USDC: bigint | null;
            };
            Solana: {
                USDC: bigint | null;
                SOL: bigint | null;
            };
            Assethub: {
                USDC: bigint | null;
                USDT: bigint | null;
                DOT: bigint | null;
            };
        } | undefined;
    };
    funding: {
        redemption_tax: bigint;
        minimum_funding_amount: bigint;
    };
    pools: {
        fees: {
            Bitcoin: {
                BTC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
            };
            Ethereum: {
                ETH: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
                FLIP: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
                USDT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
            };
            Arbitrum: {
                ETH: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
            };
            Solana: {
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
                SOL: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
            };
            Assethub: {
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
                USDT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
                DOT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_order_total_fees_earned: {
                        base: bigint;
                        quote: bigint;
                    };
                    range_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    limit_total_swap_inputs: {
                        base: bigint;
                        quote: bigint;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | {
                    readonly limit_order_fee_hundredth_pips: 0;
                    readonly range_order_fee_hundredth_pips: 0;
                    readonly range_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_order_total_fees_earned: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly range_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly limit_total_swap_inputs: {
                        readonly base: "0x0";
                        readonly quote: "0x0";
                    };
                    readonly quote_asset: {
                        readonly chain: "Ethereum";
                        readonly asset: "USDC";
                    };
                };
            };
        };
    };
}, {
    ingress_egress: {
        minimum_deposit_amounts: {
            Bitcoin: {
                BTC: string | number;
            };
            Ethereum: {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            };
            Arbitrum: {
                ETH: string | number;
                USDC: string | number;
            };
            Solana: {
                USDC: string | number;
                SOL: string | number;
            };
            Assethub: {
                USDC: string | number;
                USDT: string | number;
                DOT: string | number;
            };
        };
        ingress_fees: {
            Bitcoin: {
                BTC: string | number | null;
            };
            Ethereum: {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            };
            Arbitrum: {
                ETH: string | number | null;
                USDC: string | number | null;
            };
            Solana: {
                USDC: string | number | null;
                SOL: string | number | null;
            };
            Assethub: {
                USDC: string | number | null;
                USDT: string | number | null;
                DOT: string | number | null;
            };
        };
        egress_fees: {
            Bitcoin: {
                BTC: string | number | null;
            };
            Ethereum: {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            };
            Arbitrum: {
                ETH: string | number | null;
                USDC: string | number | null;
            };
            Solana: {
                USDC: string | number | null;
                SOL: string | number | null;
            };
            Assethub: {
                USDC: string | number | null;
                USDT: string | number | null;
                DOT: string | number | null;
            };
        };
        witness_safety_margins: {
            Bitcoin: number | null;
            Ethereum: number | null;
            Arbitrum: number | null;
            Solana: number | null;
            Assethub: number | null;
        };
        egress_dust_limits: {
            Bitcoin: {
                BTC: string | number;
            };
            Ethereum: {
                ETH: string | number;
                USDC: string | number;
                FLIP: string | number;
                USDT: string | number;
            };
            Arbitrum: {
                ETH: string | number;
                USDC: string | number;
            };
            Solana: {
                USDC: string | number;
                SOL: string | number;
            };
            Assethub: {
                USDC: string | number;
                USDT: string | number;
                DOT: string | number;
            };
        };
        channel_opening_fees: {
            Bitcoin: string | number;
            Ethereum: string | number;
            Arbitrum: string | number;
            Solana: string | number;
            Assethub: string | number;
        };
    };
    swapping: {
        maximum_swap_amounts: {
            Bitcoin: {
                BTC: string | number | null;
            };
            Ethereum: {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            };
            Arbitrum: {
                ETH: string | number | null;
                USDC: string | number | null;
            };
            Solana: {
                USDC: string | number | null;
                SOL: string | number | null;
            };
            Assethub: {
                USDC: string | number | null;
                USDT: string | number | null;
                DOT: string | number | null;
            };
        };
        network_fee_hundredth_pips: number;
        network_fees: {
            regular_network_fee: {
                standard_rate_and_minimum: {
                    minimum: string | number;
                    rate: string | number;
                };
                rates: {
                    Bitcoin: {
                        BTC: string | number;
                    };
                    Ethereum: {
                        ETH: string | number;
                        USDC: string | number;
                        FLIP: string | number;
                        USDT: string | number;
                    };
                    Arbitrum: {
                        ETH: string | number;
                        USDC: string | number;
                    };
                    Solana: {
                        USDC: string | number;
                        SOL: string | number;
                    };
                    Assethub: {
                        USDC: string | number;
                        USDT: string | number;
                        DOT: string | number;
                    };
                };
            };
            internal_swap_network_fee: {
                standard_rate_and_minimum: {
                    minimum: string | number;
                    rate: string | number;
                };
                rates: {
                    Bitcoin: {
                        BTC: string | number;
                    };
                    Ethereum: {
                        ETH: string | number;
                        USDC: string | number;
                        FLIP: string | number;
                        USDT: string | number;
                    };
                    Arbitrum: {
                        ETH: string | number;
                        USDC: string | number;
                    };
                    Solana: {
                        USDC: string | number;
                        SOL: string | number;
                    };
                    Assethub: {
                        USDC: string | number;
                        USDT: string | number;
                        DOT: string | number;
                    };
                };
            };
        };
        swap_retry_delay_blocks?: number | undefined;
        max_swap_retry_duration_blocks?: number | undefined;
        max_swap_request_duration_blocks?: number | undefined;
        minimum_chunk_size?: {
            Bitcoin: {
                BTC: string | number | null;
            };
            Ethereum: {
                ETH: string | number | null;
                USDC: string | number | null;
                FLIP: string | number | null;
                USDT: string | number | null;
            };
            Arbitrum: {
                ETH: string | number | null;
                USDC: string | number | null;
            };
            Solana: {
                USDC: string | number | null;
                SOL: string | number | null;
            };
            Assethub: {
                USDC: string | number | null;
                USDT: string | number | null;
                DOT: string | number | null;
            };
        } | undefined;
    };
    funding: {
        redemption_tax: string | number;
        minimum_funding_amount: string | number;
    };
    pools: {
        fees: {
            Bitcoin: {
                BTC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
            };
            Ethereum: {
                ETH: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
                FLIP: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
                USDT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
            };
            Arbitrum: {
                ETH: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
            };
            Solana: {
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
                SOL: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
            };
            Assethub: {
                USDC: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
                USDT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
                DOT: {
                    limit_order_fee_hundredth_pips: number;
                    range_order_fee_hundredth_pips: number;
                    range_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    limit_order_total_fees_earned: {
                        base: string;
                        quote: string;
                    };
                    range_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    limit_total_swap_inputs: {
                        base: string;
                        quote: string;
                    };
                    quote_asset: {
                        chain: "Ethereum";
                        asset: "USDC";
                    };
                } | null;
            };
        };
    };
}>;
declare const cfBoostPoolsDepth: z.ZodArray<z.ZodIntersection<z.ZodUnion<[z.ZodObject<{
    chain: z.ZodLiteral<"Bitcoin">;
    asset: z.ZodLiteral<"BTC">;
}, "strip", z.ZodTypeAny, {
    chain: "Bitcoin";
    asset: "BTC";
}, {
    chain: "Bitcoin";
    asset: "BTC";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Polkadot">;
    asset: z.ZodLiteral<"DOT">;
}, "strip", z.ZodTypeAny, {
    chain: "Polkadot";
    asset: "DOT";
}, {
    chain: "Polkadot";
    asset: "DOT";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Ethereum">;
    asset: z.ZodLiteral<"FLIP">;
}, "strip", z.ZodTypeAny, {
    chain: "Ethereum";
    asset: "FLIP";
}, {
    chain: "Ethereum";
    asset: "FLIP";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Ethereum">;
    asset: z.ZodLiteral<"ETH">;
}, "strip", z.ZodTypeAny, {
    chain: "Ethereum";
    asset: "ETH";
}, {
    chain: "Ethereum";
    asset: "ETH";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Ethereum">;
    asset: z.ZodLiteral<"USDC">;
}, "strip", z.ZodTypeAny, {
    chain: "Ethereum";
    asset: "USDC";
}, {
    chain: "Ethereum";
    asset: "USDC";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Ethereum">;
    asset: z.ZodLiteral<"USDT">;
}, "strip", z.ZodTypeAny, {
    chain: "Ethereum";
    asset: "USDT";
}, {
    chain: "Ethereum";
    asset: "USDT";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Arbitrum">;
    asset: z.ZodLiteral<"ETH">;
}, "strip", z.ZodTypeAny, {
    chain: "Arbitrum";
    asset: "ETH";
}, {
    chain: "Arbitrum";
    asset: "ETH";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Arbitrum">;
    asset: z.ZodLiteral<"USDC">;
}, "strip", z.ZodTypeAny, {
    chain: "Arbitrum";
    asset: "USDC";
}, {
    chain: "Arbitrum";
    asset: "USDC";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Solana">;
    asset: z.ZodLiteral<"SOL">;
}, "strip", z.ZodTypeAny, {
    chain: "Solana";
    asset: "SOL";
}, {
    chain: "Solana";
    asset: "SOL";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Solana">;
    asset: z.ZodLiteral<"USDC">;
}, "strip", z.ZodTypeAny, {
    chain: "Solana";
    asset: "USDC";
}, {
    chain: "Solana";
    asset: "USDC";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Assethub">;
    asset: z.ZodLiteral<"DOT">;
}, "strip", z.ZodTypeAny, {
    chain: "Assethub";
    asset: "DOT";
}, {
    chain: "Assethub";
    asset: "DOT";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Assethub">;
    asset: z.ZodLiteral<"USDC">;
}, "strip", z.ZodTypeAny, {
    chain: "Assethub";
    asset: "USDC";
}, {
    chain: "Assethub";
    asset: "USDC";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Assethub">;
    asset: z.ZodLiteral<"USDT">;
}, "strip", z.ZodTypeAny, {
    chain: "Assethub";
    asset: "USDT";
}, {
    chain: "Assethub";
    asset: "USDT";
}>]>, z.ZodObject<{
    tier: z.ZodNumber;
    available_amount: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
}, "strip", z.ZodTypeAny, {
    available_amount: bigint;
    tier: number;
}, {
    available_amount: string;
    tier: number;
}>>, "many">;
declare const cfPoolDepth: z.ZodNullable<z.ZodObject<{
    asks: z.ZodObject<{
        limit_orders: z.ZodObject<{
            depth: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            price: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            depth: bigint;
            price: bigint | null;
        }, {
            depth: string | number;
            price: string | number | null;
        }>;
        range_orders: z.ZodObject<{
            depth: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            price: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            depth: bigint;
            price: bigint | null;
        }, {
            depth: string | number;
            price: string | number | null;
        }>;
    }, "strip", z.ZodTypeAny, {
        limit_orders: {
            depth: bigint;
            price: bigint | null;
        };
        range_orders: {
            depth: bigint;
            price: bigint | null;
        };
    }, {
        limit_orders: {
            depth: string | number;
            price: string | number | null;
        };
        range_orders: {
            depth: string | number;
            price: string | number | null;
        };
    }>;
    bids: z.ZodObject<{
        limit_orders: z.ZodObject<{
            depth: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            price: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            depth: bigint;
            price: bigint | null;
        }, {
            depth: string | number;
            price: string | number | null;
        }>;
        range_orders: z.ZodObject<{
            depth: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            price: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        }, "strip", z.ZodTypeAny, {
            depth: bigint;
            price: bigint | null;
        }, {
            depth: string | number;
            price: string | number | null;
        }>;
    }, "strip", z.ZodTypeAny, {
        limit_orders: {
            depth: bigint;
            price: bigint | null;
        };
        range_orders: {
            depth: bigint;
            price: bigint | null;
        };
    }, {
        limit_orders: {
            depth: string | number;
            price: string | number | null;
        };
        range_orders: {
            depth: string | number;
            price: string | number | null;
        };
    }>;
}, "strip", z.ZodTypeAny, {
    asks: {
        limit_orders: {
            depth: bigint;
            price: bigint | null;
        };
        range_orders: {
            depth: bigint;
            price: bigint | null;
        };
    };
    bids: {
        limit_orders: {
            depth: bigint;
            price: bigint | null;
        };
        range_orders: {
            depth: bigint;
            price: bigint | null;
        };
    };
}, {
    asks: {
        limit_orders: {
            depth: string | number;
            price: string | number | null;
        };
        range_orders: {
            depth: string | number;
            price: string | number | null;
        };
    };
    bids: {
        limit_orders: {
            depth: string | number;
            price: string | number | null;
        };
        range_orders: {
            depth: string | number;
            price: string | number | null;
        };
    };
}>>;
declare const cfSupportedAssets: z.ZodEffects<z.ZodArray<z.ZodObject<{
    chain: z.ZodString;
    asset: z.ZodString;
}, "strip", z.ZodTypeAny, {
    chain: string;
    asset: string;
}, {
    chain: string;
    asset: string;
}>, "many">, ({
    chain: "Bitcoin";
    asset: "BTC";
} | {
    chain: "Polkadot";
    asset: "DOT";
} | {
    chain: "Ethereum";
    asset: "FLIP";
} | {
    chain: "Ethereum";
    asset: "ETH";
} | {
    chain: "Ethereum";
    asset: "USDC";
} | {
    chain: "Ethereum";
    asset: "USDT";
} | {
    chain: "Arbitrum";
    asset: "ETH";
} | {
    chain: "Arbitrum";
    asset: "USDC";
} | {
    chain: "Solana";
    asset: "SOL";
} | {
    chain: "Solana";
    asset: "USDC";
} | {
    chain: "Assethub";
    asset: "DOT";
} | {
    chain: "Assethub";
    asset: "USDC";
} | {
    chain: "Assethub";
    asset: "USDT";
})[], {
    chain: string;
    asset: string;
}[]>;
declare const brokerRequestSwapDepositAddress: z.ZodObject<{
    address: z.ZodString;
    issued_block: z.ZodNumber;
    channel_id: z.ZodNumber;
    source_chain_expiry_block: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    channel_opening_fee: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
}, "strip", z.ZodTypeAny, {
    address: string;
    issued_block: number;
    channel_id: number;
    source_chain_expiry_block: bigint;
    channel_opening_fee: bigint;
}, {
    address: string;
    issued_block: number;
    channel_id: number;
    source_chain_expiry_block: string | number;
    channel_opening_fee: string;
}>;
declare const requestSwapParameterEncoding: z.ZodDiscriminatedUnion<"chain", [z.ZodObject<{
    chain: z.ZodLiteral<"Bitcoin">;
    nulldata_payload: z.ZodEffects<z.ZodString, `0x${string}`, string>;
    deposit_address: z.ZodString;
}, "strip", z.ZodTypeAny, {
    chain: "Bitcoin";
    nulldata_payload: `0x${string}`;
    deposit_address: string;
}, {
    chain: "Bitcoin";
    nulldata_payload: string;
    deposit_address: string;
}>, z.ZodObject<{
    to: z.ZodEffects<z.ZodString, `0x${string}`, string>;
    calldata: z.ZodEffects<z.ZodString, `0x${string}`, string>;
    value: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    source_token_address: z.ZodOptional<z.ZodEffects<z.ZodString, `0x${string}`, string>>;
} & {
    chain: z.ZodLiteral<"Ethereum">;
}, "strip", z.ZodTypeAny, {
    value: bigint;
    chain: "Ethereum";
    to: `0x${string}`;
    calldata: `0x${string}`;
    source_token_address?: `0x${string}` | undefined;
}, {
    value: string | number;
    chain: "Ethereum";
    to: string;
    calldata: string;
    source_token_address?: string | undefined;
}>, z.ZodObject<{
    to: z.ZodEffects<z.ZodString, `0x${string}`, string>;
    calldata: z.ZodEffects<z.ZodString, `0x${string}`, string>;
    value: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    source_token_address: z.ZodOptional<z.ZodEffects<z.ZodString, `0x${string}`, string>>;
} & {
    chain: z.ZodLiteral<"Arbitrum">;
}, "strip", z.ZodTypeAny, {
    value: bigint;
    chain: "Arbitrum";
    to: `0x${string}`;
    calldata: `0x${string}`;
    source_token_address?: `0x${string}` | undefined;
}, {
    value: string | number;
    chain: "Arbitrum";
    to: string;
    calldata: string;
    source_token_address?: string | undefined;
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Solana">;
    program_id: z.ZodString;
    data: z.ZodEffects<z.ZodString, `0x${string}`, string>;
    accounts: z.ZodArray<z.ZodObject<{
        pubkey: z.ZodString;
        is_signer: z.ZodBoolean;
        is_writable: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        pubkey: string;
        is_signer: boolean;
        is_writable: boolean;
    }, {
        pubkey: string;
        is_signer: boolean;
        is_writable: boolean;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    chain: "Solana";
    program_id: string;
    data: `0x${string}`;
    accounts: {
        pubkey: string;
        is_signer: boolean;
        is_writable: boolean;
    }[];
}, {
    chain: "Solana";
    program_id: string;
    data: string;
    accounts: {
        pubkey: string;
        is_signer: boolean;
        is_writable: boolean;
    }[];
}>]>;
declare const accountInfoCommon: {
    readonly vanity_name: z.ZodOptional<z.ZodString>;
    readonly flip_balance: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    readonly asset_balances: z.ZodObject<Omit<{
        Bitcoin: z.ZodObject<{
            BTC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            BTC: bigint;
        }, {
            BTC: string | number;
        }>;
        Ethereum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            FLIP: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        }>;
        Polkadot: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            DOT: bigint;
        }, {
            DOT: string | number;
        }>;
        Arbitrum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
        }>;
        Solana: z.ZodObject<{
            SOL: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            SOL: bigint;
        }, {
            USDC: string | number;
            SOL: string | number;
        }>;
        Assethub: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        }, {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        }>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    }, {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    }>;
    readonly bond: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    readonly estimated_redeemable_balance: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    readonly bound_redeem_address: z.ZodOptional<z.ZodEffects<z.ZodString, `0x${string}`, string>>;
    readonly restricted_balances: z.ZodOptional<z.ZodRecord<z.ZodEffects<z.ZodString, `0x${string}`, string>, z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>>;
    readonly current_delegation_status: z.ZodOptional<z.ZodObject<{
        operator: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        bid: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        operator: `cF${string}`;
        bid: bigint;
    }, {
        operator: string;
        bid: string | number;
    }>>;
    readonly upcoming_delegation_status: z.ZodOptional<z.ZodObject<{
        operator: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        bid: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        operator: `cF${string}`;
        bid: bigint;
    }, {
        operator: string;
        bid: string | number;
    }>>;
};
declare const unregistered: z.ZodObject<{
    vanity_name: z.ZodOptional<z.ZodString>;
    flip_balance: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    asset_balances: z.ZodObject<Omit<{
        Bitcoin: z.ZodObject<{
            BTC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            BTC: bigint;
        }, {
            BTC: string | number;
        }>;
        Ethereum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            FLIP: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        }>;
        Polkadot: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            DOT: bigint;
        }, {
            DOT: string | number;
        }>;
        Arbitrum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
        }>;
        Solana: z.ZodObject<{
            SOL: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            SOL: bigint;
        }, {
            USDC: string | number;
            SOL: string | number;
        }>;
        Assethub: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        }, {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        }>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    }, {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    }>;
    bond: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    estimated_redeemable_balance: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    bound_redeem_address: z.ZodOptional<z.ZodEffects<z.ZodString, `0x${string}`, string>>;
    restricted_balances: z.ZodOptional<z.ZodRecord<z.ZodEffects<z.ZodString, `0x${string}`, string>, z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>>;
    current_delegation_status: z.ZodOptional<z.ZodObject<{
        operator: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        bid: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        operator: `cF${string}`;
        bid: bigint;
    }, {
        operator: string;
        bid: string | number;
    }>>;
    upcoming_delegation_status: z.ZodOptional<z.ZodObject<{
        operator: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        bid: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        operator: `cF${string}`;
        bid: bigint;
    }, {
        operator: string;
        bid: string | number;
    }>>;
    role: z.ZodLiteral<"unregistered">;
}, "strip", z.ZodTypeAny, {
    role: "unregistered";
    flip_balance: bigint;
    asset_balances: {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    };
    bond: bigint;
    estimated_redeemable_balance: bigint;
    vanity_name?: string | undefined;
    bound_redeem_address?: `0x${string}` | undefined;
    restricted_balances?: Partial<Record<`0x${string}`, bigint>> | undefined;
    current_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
    upcoming_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
}, {
    role: "unregistered";
    flip_balance: string | number;
    asset_balances: {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    };
    bond: string | number;
    estimated_redeemable_balance: string | number;
    vanity_name?: string | undefined;
    bound_redeem_address?: string | undefined;
    restricted_balances?: Record<string, string | number> | undefined;
    current_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
    upcoming_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
}>;
declare const broker: z.ZodObject<{
    earned_fees: z.ZodObject<Omit<{
        Bitcoin: z.ZodObject<{
            BTC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            BTC: bigint;
        }, {
            BTC: string | number;
        }>;
        Ethereum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            FLIP: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        }>;
        Polkadot: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            DOT: bigint;
        }, {
            DOT: string | number;
        }>;
        Arbitrum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
        }>;
        Solana: z.ZodObject<{
            SOL: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            SOL: bigint;
        }, {
            USDC: string | number;
            SOL: string | number;
        }>;
        Assethub: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        }, {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        }>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    }, {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    }>;
    btc_vault_deposit_address: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    affiliates: z.ZodDefault<z.ZodOptional<z.ZodArray<z.ZodObject<{
        account_id: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        short_id: z.ZodNumber;
        withdrawal_address: z.ZodEffects<z.ZodString, `0x${string}`, string>;
    }, "strip", z.ZodTypeAny, {
        account_id: `cF${string}`;
        short_id: number;
        withdrawal_address: `0x${string}`;
    }, {
        account_id: string;
        short_id: number;
        withdrawal_address: string;
    }>, "many">>>;
    vanity_name: z.ZodOptional<z.ZodString>;
    flip_balance: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    asset_balances: z.ZodObject<Omit<{
        Bitcoin: z.ZodObject<{
            BTC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            BTC: bigint;
        }, {
            BTC: string | number;
        }>;
        Ethereum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            FLIP: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        }>;
        Polkadot: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            DOT: bigint;
        }, {
            DOT: string | number;
        }>;
        Arbitrum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
        }>;
        Solana: z.ZodObject<{
            SOL: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            SOL: bigint;
        }, {
            USDC: string | number;
            SOL: string | number;
        }>;
        Assethub: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        }, {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        }>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    }, {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    }>;
    bond: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    estimated_redeemable_balance: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    bound_redeem_address: z.ZodOptional<z.ZodEffects<z.ZodString, `0x${string}`, string>>;
    restricted_balances: z.ZodOptional<z.ZodRecord<z.ZodEffects<z.ZodString, `0x${string}`, string>, z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>>;
    current_delegation_status: z.ZodOptional<z.ZodObject<{
        operator: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        bid: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        operator: `cF${string}`;
        bid: bigint;
    }, {
        operator: string;
        bid: string | number;
    }>>;
    upcoming_delegation_status: z.ZodOptional<z.ZodObject<{
        operator: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        bid: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        operator: `cF${string}`;
        bid: bigint;
    }, {
        operator: string;
        bid: string | number;
    }>>;
    role: z.ZodLiteral<"broker">;
}, "strip", z.ZodTypeAny, {
    role: "broker";
    flip_balance: bigint;
    asset_balances: {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    };
    bond: bigint;
    estimated_redeemable_balance: bigint;
    earned_fees: {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    };
    affiliates: {
        account_id: `cF${string}`;
        short_id: number;
        withdrawal_address: `0x${string}`;
    }[];
    vanity_name?: string | undefined;
    bound_redeem_address?: `0x${string}` | undefined;
    restricted_balances?: Partial<Record<`0x${string}`, bigint>> | undefined;
    current_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
    upcoming_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
    btc_vault_deposit_address?: string | null | undefined;
}, {
    role: "broker";
    flip_balance: string | number;
    asset_balances: {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    };
    bond: string | number;
    estimated_redeemable_balance: string | number;
    earned_fees: {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    };
    vanity_name?: string | undefined;
    bound_redeem_address?: string | undefined;
    restricted_balances?: Record<string, string | number> | undefined;
    current_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
    upcoming_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
    btc_vault_deposit_address?: string | null | undefined;
    affiliates?: {
        account_id: string;
        short_id: number;
        withdrawal_address: string;
    }[] | undefined;
}>;
declare const operator: z.ZodObject<{
    managed_validators: z.ZodRecord<z.ZodEffects<z.ZodString, `cF${string}`, string>, z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
    delegators: z.ZodRecord<z.ZodEffects<z.ZodString, `cF${string}`, string>, z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
    settings: z.ZodObject<{
        fee_bps: z.ZodNumber;
        delegation_acceptance: z.ZodEnum<["Allow", "Deny"]>;
    }, "strip", z.ZodTypeAny, {
        fee_bps: number;
        delegation_acceptance: "Allow" | "Deny";
    }, {
        fee_bps: number;
        delegation_acceptance: "Allow" | "Deny";
    }>;
    allowed: z.ZodDefault<z.ZodOptional<z.ZodArray<z.ZodEffects<z.ZodString, `cF${string}`, string>, "many">>>;
    blocked: z.ZodDefault<z.ZodOptional<z.ZodArray<z.ZodEffects<z.ZodString, `cF${string}`, string>, "many">>>;
    active_delegation: z.ZodOptional<z.ZodObject<{
        operator: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        validators: z.ZodRecord<z.ZodEffects<z.ZodString, `cF${string}`, string>, z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        delegators: z.ZodRecord<z.ZodEffects<z.ZodString, `cF${string}`, string>, z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        delegation_fee_bps: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        operator: `cF${string}`;
        delegators: Partial<Record<`cF${string}`, bigint>>;
        validators: Partial<Record<`cF${string}`, bigint>>;
        delegation_fee_bps: number;
    }, {
        operator: string;
        delegators: Record<string, string | number>;
        validators: Record<string, string | number>;
        delegation_fee_bps: number;
    }>>;
    vanity_name: z.ZodOptional<z.ZodString>;
    flip_balance: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    asset_balances: z.ZodObject<Omit<{
        Bitcoin: z.ZodObject<{
            BTC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            BTC: bigint;
        }, {
            BTC: string | number;
        }>;
        Ethereum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            FLIP: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        }>;
        Polkadot: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            DOT: bigint;
        }, {
            DOT: string | number;
        }>;
        Arbitrum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
        }>;
        Solana: z.ZodObject<{
            SOL: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            SOL: bigint;
        }, {
            USDC: string | number;
            SOL: string | number;
        }>;
        Assethub: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        }, {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        }>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    }, {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    }>;
    bond: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    estimated_redeemable_balance: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    bound_redeem_address: z.ZodOptional<z.ZodEffects<z.ZodString, `0x${string}`, string>>;
    restricted_balances: z.ZodOptional<z.ZodRecord<z.ZodEffects<z.ZodString, `0x${string}`, string>, z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>>;
    current_delegation_status: z.ZodOptional<z.ZodObject<{
        operator: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        bid: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        operator: `cF${string}`;
        bid: bigint;
    }, {
        operator: string;
        bid: string | number;
    }>>;
    upcoming_delegation_status: z.ZodOptional<z.ZodObject<{
        operator: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        bid: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        operator: `cF${string}`;
        bid: bigint;
    }, {
        operator: string;
        bid: string | number;
    }>>;
    role: z.ZodLiteral<"operator">;
}, "strip", z.ZodTypeAny, {
    role: "operator";
    flip_balance: bigint;
    asset_balances: {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    };
    bond: bigint;
    estimated_redeemable_balance: bigint;
    managed_validators: Partial<Record<`cF${string}`, bigint>>;
    delegators: Partial<Record<`cF${string}`, bigint>>;
    settings: {
        fee_bps: number;
        delegation_acceptance: "Allow" | "Deny";
    };
    allowed: `cF${string}`[];
    blocked: `cF${string}`[];
    vanity_name?: string | undefined;
    bound_redeem_address?: `0x${string}` | undefined;
    restricted_balances?: Partial<Record<`0x${string}`, bigint>> | undefined;
    current_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
    upcoming_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
    active_delegation?: {
        operator: `cF${string}`;
        delegators: Partial<Record<`cF${string}`, bigint>>;
        validators: Partial<Record<`cF${string}`, bigint>>;
        delegation_fee_bps: number;
    } | undefined;
}, {
    role: "operator";
    flip_balance: string | number;
    asset_balances: {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    };
    bond: string | number;
    estimated_redeemable_balance: string | number;
    managed_validators: Record<string, string | number>;
    delegators: Record<string, string | number>;
    settings: {
        fee_bps: number;
        delegation_acceptance: "Allow" | "Deny";
    };
    vanity_name?: string | undefined;
    bound_redeem_address?: string | undefined;
    restricted_balances?: Record<string, string | number> | undefined;
    current_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
    upcoming_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
    allowed?: string[] | undefined;
    blocked?: string[] | undefined;
    active_delegation?: {
        operator: string;
        delegators: Record<string, string | number>;
        validators: Record<string, string | number>;
        delegation_fee_bps: number;
    } | undefined;
}>;
declare const liquidityProvider: z.ZodObject<{
    refund_addresses: z.ZodObject<Omit<{
        Bitcoin: z.ZodNullable<z.ZodString>;
        Ethereum: z.ZodNullable<z.ZodString>;
        Polkadot: z.ZodNullable<z.ZodString>;
        Arbitrum: z.ZodNullable<z.ZodString>;
        Solana: z.ZodNullable<z.ZodString>;
        Assethub: z.ZodNullable<z.ZodString>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: string | null;
        Ethereum: string | null;
        Arbitrum: string | null;
        Solana: string | null;
        Assethub: string | null;
    }, {
        Bitcoin: string | null;
        Ethereum: string | null;
        Arbitrum: string | null;
        Solana: string | null;
        Assethub: string | null;
    }>;
    earned_fees: z.ZodObject<Omit<{
        Bitcoin: z.ZodObject<{
            BTC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            BTC: bigint;
        }, {
            BTC: string | number;
        }>;
        Ethereum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            FLIP: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        }>;
        Polkadot: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            DOT: bigint;
        }, {
            DOT: string | number;
        }>;
        Arbitrum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
        }>;
        Solana: z.ZodObject<{
            SOL: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            SOL: bigint;
        }, {
            USDC: string | number;
            SOL: string | number;
        }>;
        Assethub: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        }, {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        }>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    }, {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    }>;
    boost_balances: z.ZodObject<Omit<{
        Bitcoin: z.ZodObject<{
            BTC: z.ZodArray<z.ZodObject<{
                fee_tier: z.ZodNumber;
                total_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                available_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                in_use_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                is_withdrawing: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }, {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            BTC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        }, {
            BTC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        }>;
        Ethereum: z.ZodObject<{
            ETH: z.ZodArray<z.ZodObject<{
                fee_tier: z.ZodNumber;
                total_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                available_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                in_use_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                is_withdrawing: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }, {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }>, "many">;
            USDC: z.ZodArray<z.ZodObject<{
                fee_tier: z.ZodNumber;
                total_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                available_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                in_use_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                is_withdrawing: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }, {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }>, "many">;
            FLIP: z.ZodArray<z.ZodObject<{
                fee_tier: z.ZodNumber;
                total_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                available_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                in_use_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                is_withdrawing: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }, {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }>, "many">;
            USDT: z.ZodArray<z.ZodObject<{
                fee_tier: z.ZodNumber;
                total_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                available_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                in_use_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                is_withdrawing: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }, {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            ETH: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            FLIP: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        }, {
            ETH: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            FLIP: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        }>;
        Polkadot: z.ZodObject<{
            DOT: z.ZodArray<z.ZodObject<{
                fee_tier: z.ZodNumber;
                total_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                available_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                in_use_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                is_withdrawing: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }, {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            DOT: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        }, {
            DOT: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        }>;
        Arbitrum: z.ZodObject<{
            ETH: z.ZodArray<z.ZodObject<{
                fee_tier: z.ZodNumber;
                total_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                available_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                in_use_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                is_withdrawing: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }, {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }>, "many">;
            USDC: z.ZodArray<z.ZodObject<{
                fee_tier: z.ZodNumber;
                total_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                available_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                in_use_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                is_withdrawing: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }, {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            ETH: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        }, {
            ETH: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        }>;
        Solana: z.ZodObject<{
            SOL: z.ZodArray<z.ZodObject<{
                fee_tier: z.ZodNumber;
                total_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                available_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                in_use_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                is_withdrawing: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }, {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }>, "many">;
            USDC: z.ZodArray<z.ZodObject<{
                fee_tier: z.ZodNumber;
                total_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                available_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                in_use_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                is_withdrawing: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }, {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            SOL: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        }, {
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            SOL: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        }>;
        Assethub: z.ZodObject<{
            DOT: z.ZodArray<z.ZodObject<{
                fee_tier: z.ZodNumber;
                total_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                available_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                in_use_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                is_withdrawing: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }, {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }>, "many">;
            USDC: z.ZodArray<z.ZodObject<{
                fee_tier: z.ZodNumber;
                total_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                available_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                in_use_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                is_withdrawing: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }, {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }>, "many">;
            USDT: z.ZodArray<z.ZodObject<{
                fee_tier: z.ZodNumber;
                total_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                available_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                in_use_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                is_withdrawing: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }, {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            DOT: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        }, {
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            DOT: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        }>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: {
            BTC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        };
        Ethereum: {
            ETH: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            FLIP: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        };
        Arbitrum: {
            ETH: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        };
        Solana: {
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            SOL: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        };
        Assethub: {
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            DOT: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        };
    }, {
        Bitcoin: {
            BTC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        };
        Ethereum: {
            ETH: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            FLIP: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        };
        Arbitrum: {
            ETH: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        };
        Solana: {
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            SOL: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        };
        Assethub: {
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            DOT: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        };
    }>;
    lending_positions: z.ZodOptional<z.ZodArray<z.ZodIntersection<z.ZodUnion<[z.ZodObject<{
        chain: z.ZodLiteral<"Bitcoin">;
        asset: z.ZodLiteral<"BTC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Bitcoin";
        asset: "BTC";
    }, {
        chain: "Bitcoin";
        asset: "BTC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Polkadot">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Polkadot";
        asset: "DOT";
    }, {
        chain: "Polkadot";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"FLIP">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "FLIP";
    }, {
        chain: "Ethereum";
        asset: "FLIP";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "ETH";
    }, {
        chain: "Ethereum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDC";
    }, {
        chain: "Ethereum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDT";
    }, {
        chain: "Ethereum";
        asset: "USDT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "ETH";
    }, {
        chain: "Arbitrum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "USDC";
    }, {
        chain: "Arbitrum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"SOL">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "SOL";
    }, {
        chain: "Solana";
        asset: "SOL";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "USDC";
    }, {
        chain: "Solana";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "DOT";
    }, {
        chain: "Assethub";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDC";
    }, {
        chain: "Assethub";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDT";
    }, {
        chain: "Assethub";
        asset: "USDT";
    }>]>, z.ZodObject<{
        total_amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        available_amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        total_amount: bigint;
        available_amount: bigint;
    }, {
        total_amount: string | number;
        available_amount: string | number;
    }>>, "many">>;
    collateral_balances: z.ZodOptional<z.ZodArray<z.ZodIntersection<z.ZodUnion<[z.ZodObject<{
        chain: z.ZodLiteral<"Bitcoin">;
        asset: z.ZodLiteral<"BTC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Bitcoin";
        asset: "BTC";
    }, {
        chain: "Bitcoin";
        asset: "BTC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Polkadot">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Polkadot";
        asset: "DOT";
    }, {
        chain: "Polkadot";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"FLIP">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "FLIP";
    }, {
        chain: "Ethereum";
        asset: "FLIP";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "ETH";
    }, {
        chain: "Ethereum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDC";
    }, {
        chain: "Ethereum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDT";
    }, {
        chain: "Ethereum";
        asset: "USDT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "ETH";
    }, {
        chain: "Arbitrum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "USDC";
    }, {
        chain: "Arbitrum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"SOL">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "SOL";
    }, {
        chain: "Solana";
        asset: "SOL";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "USDC";
    }, {
        chain: "Solana";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "DOT";
    }, {
        chain: "Assethub";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDC";
    }, {
        chain: "Assethub";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDT";
    }, {
        chain: "Assethub";
        asset: "USDT";
    }>]>, z.ZodObject<{
        amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        amount: bigint;
    }, {
        amount: string | number;
    }>>, "many">>;
    vanity_name: z.ZodOptional<z.ZodString>;
    flip_balance: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    asset_balances: z.ZodObject<Omit<{
        Bitcoin: z.ZodObject<{
            BTC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            BTC: bigint;
        }, {
            BTC: string | number;
        }>;
        Ethereum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            FLIP: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        }>;
        Polkadot: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            DOT: bigint;
        }, {
            DOT: string | number;
        }>;
        Arbitrum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
        }>;
        Solana: z.ZodObject<{
            SOL: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            SOL: bigint;
        }, {
            USDC: string | number;
            SOL: string | number;
        }>;
        Assethub: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        }, {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        }>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    }, {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    }>;
    bond: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    estimated_redeemable_balance: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    bound_redeem_address: z.ZodOptional<z.ZodEffects<z.ZodString, `0x${string}`, string>>;
    restricted_balances: z.ZodOptional<z.ZodRecord<z.ZodEffects<z.ZodString, `0x${string}`, string>, z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>>;
    current_delegation_status: z.ZodOptional<z.ZodObject<{
        operator: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        bid: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        operator: `cF${string}`;
        bid: bigint;
    }, {
        operator: string;
        bid: string | number;
    }>>;
    upcoming_delegation_status: z.ZodOptional<z.ZodObject<{
        operator: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        bid: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        operator: `cF${string}`;
        bid: bigint;
    }, {
        operator: string;
        bid: string | number;
    }>>;
    role: z.ZodLiteral<"liquidity_provider">;
}, "strip", z.ZodTypeAny, {
    role: "liquidity_provider";
    flip_balance: bigint;
    asset_balances: {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    };
    bond: bigint;
    estimated_redeemable_balance: bigint;
    earned_fees: {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    };
    refund_addresses: {
        Bitcoin: string | null;
        Ethereum: string | null;
        Arbitrum: string | null;
        Solana: string | null;
        Assethub: string | null;
    };
    boost_balances: {
        Bitcoin: {
            BTC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        };
        Ethereum: {
            ETH: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            FLIP: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        };
        Arbitrum: {
            ETH: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        };
        Solana: {
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            SOL: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        };
        Assethub: {
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            DOT: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        };
    };
    vanity_name?: string | undefined;
    bound_redeem_address?: `0x${string}` | undefined;
    restricted_balances?: Partial<Record<`0x${string}`, bigint>> | undefined;
    current_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
    upcoming_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
    lending_positions?: (({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        total_amount: bigint;
        available_amount: bigint;
    })[] | undefined;
    collateral_balances?: (({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        amount: bigint;
    })[] | undefined;
}, {
    role: "liquidity_provider";
    flip_balance: string | number;
    asset_balances: {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    };
    bond: string | number;
    estimated_redeemable_balance: string | number;
    earned_fees: {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    };
    refund_addresses: {
        Bitcoin: string | null;
        Ethereum: string | null;
        Arbitrum: string | null;
        Solana: string | null;
        Assethub: string | null;
    };
    boost_balances: {
        Bitcoin: {
            BTC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        };
        Ethereum: {
            ETH: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            FLIP: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        };
        Arbitrum: {
            ETH: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        };
        Solana: {
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            SOL: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        };
        Assethub: {
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            DOT: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        };
    };
    vanity_name?: string | undefined;
    bound_redeem_address?: string | undefined;
    restricted_balances?: Record<string, string | number> | undefined;
    current_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
    upcoming_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
    lending_positions?: (({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        total_amount: string | number;
        available_amount: string | number;
    })[] | undefined;
    collateral_balances?: (({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        amount: string | number;
    })[] | undefined;
}>;
declare const validator: z.ZodObject<{
    last_heartbeat: z.ZodNumber;
    reputation_points: z.ZodNumber;
    keyholder_epochs: z.ZodArray<z.ZodNumber, "many">;
    is_current_authority: z.ZodBoolean;
    is_current_backup: z.ZodBoolean;
    is_qualified: z.ZodBoolean;
    is_online: z.ZodBoolean;
    is_bidding: z.ZodBoolean;
    apy_bp: z.ZodNullable<z.ZodNumber>;
    operator: z.ZodOptional<z.ZodEffects<z.ZodString, `cF${string}`, string>>;
    vanity_name: z.ZodOptional<z.ZodString>;
    flip_balance: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    asset_balances: z.ZodObject<Omit<{
        Bitcoin: z.ZodObject<{
            BTC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            BTC: bigint;
        }, {
            BTC: string | number;
        }>;
        Ethereum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            FLIP: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        }>;
        Polkadot: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            DOT: bigint;
        }, {
            DOT: string | number;
        }>;
        Arbitrum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
        }>;
        Solana: z.ZodObject<{
            SOL: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            SOL: bigint;
        }, {
            USDC: string | number;
            SOL: string | number;
        }>;
        Assethub: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        }, {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        }>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    }, {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    }>;
    bond: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    estimated_redeemable_balance: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    bound_redeem_address: z.ZodOptional<z.ZodEffects<z.ZodString, `0x${string}`, string>>;
    restricted_balances: z.ZodOptional<z.ZodRecord<z.ZodEffects<z.ZodString, `0x${string}`, string>, z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>>;
    current_delegation_status: z.ZodOptional<z.ZodObject<{
        operator: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        bid: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        operator: `cF${string}`;
        bid: bigint;
    }, {
        operator: string;
        bid: string | number;
    }>>;
    upcoming_delegation_status: z.ZodOptional<z.ZodObject<{
        operator: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        bid: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        operator: `cF${string}`;
        bid: bigint;
    }, {
        operator: string;
        bid: string | number;
    }>>;
    role: z.ZodLiteral<"validator">;
}, "strip", z.ZodTypeAny, {
    role: "validator";
    flip_balance: bigint;
    asset_balances: {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    };
    bond: bigint;
    estimated_redeemable_balance: bigint;
    last_heartbeat: number;
    reputation_points: number;
    keyholder_epochs: number[];
    is_current_authority: boolean;
    is_current_backup: boolean;
    is_qualified: boolean;
    is_online: boolean;
    is_bidding: boolean;
    apy_bp: number | null;
    operator?: `cF${string}` | undefined;
    vanity_name?: string | undefined;
    bound_redeem_address?: `0x${string}` | undefined;
    restricted_balances?: Partial<Record<`0x${string}`, bigint>> | undefined;
    current_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
    upcoming_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
}, {
    role: "validator";
    flip_balance: string | number;
    asset_balances: {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    };
    bond: string | number;
    estimated_redeemable_balance: string | number;
    last_heartbeat: number;
    reputation_points: number;
    keyholder_epochs: number[];
    is_current_authority: boolean;
    is_current_backup: boolean;
    is_qualified: boolean;
    is_online: boolean;
    is_bidding: boolean;
    apy_bp: number | null;
    operator?: string | undefined;
    vanity_name?: string | undefined;
    bound_redeem_address?: string | undefined;
    restricted_balances?: Record<string, string | number> | undefined;
    current_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
    upcoming_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
}>;
declare const cfAccountInfo: z.ZodEffects<z.ZodDiscriminatedUnion<"role", [z.ZodObject<{
    vanity_name: z.ZodOptional<z.ZodString>;
    flip_balance: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    asset_balances: z.ZodObject<Omit<{
        Bitcoin: z.ZodObject<{
            BTC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            BTC: bigint;
        }, {
            BTC: string | number;
        }>;
        Ethereum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            FLIP: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        }>;
        Polkadot: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            DOT: bigint;
        }, {
            DOT: string | number;
        }>;
        Arbitrum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
        }>;
        Solana: z.ZodObject<{
            SOL: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            SOL: bigint;
        }, {
            USDC: string | number;
            SOL: string | number;
        }>;
        Assethub: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        }, {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        }>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    }, {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    }>;
    bond: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    estimated_redeemable_balance: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    bound_redeem_address: z.ZodOptional<z.ZodEffects<z.ZodString, `0x${string}`, string>>;
    restricted_balances: z.ZodOptional<z.ZodRecord<z.ZodEffects<z.ZodString, `0x${string}`, string>, z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>>;
    current_delegation_status: z.ZodOptional<z.ZodObject<{
        operator: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        bid: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        operator: `cF${string}`;
        bid: bigint;
    }, {
        operator: string;
        bid: string | number;
    }>>;
    upcoming_delegation_status: z.ZodOptional<z.ZodObject<{
        operator: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        bid: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        operator: `cF${string}`;
        bid: bigint;
    }, {
        operator: string;
        bid: string | number;
    }>>;
    role: z.ZodLiteral<"unregistered">;
}, "strip", z.ZodTypeAny, {
    role: "unregistered";
    flip_balance: bigint;
    asset_balances: {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    };
    bond: bigint;
    estimated_redeemable_balance: bigint;
    vanity_name?: string | undefined;
    bound_redeem_address?: `0x${string}` | undefined;
    restricted_balances?: Partial<Record<`0x${string}`, bigint>> | undefined;
    current_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
    upcoming_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
}, {
    role: "unregistered";
    flip_balance: string | number;
    asset_balances: {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    };
    bond: string | number;
    estimated_redeemable_balance: string | number;
    vanity_name?: string | undefined;
    bound_redeem_address?: string | undefined;
    restricted_balances?: Record<string, string | number> | undefined;
    current_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
    upcoming_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
}>, z.ZodObject<{
    earned_fees: z.ZodObject<Omit<{
        Bitcoin: z.ZodObject<{
            BTC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            BTC: bigint;
        }, {
            BTC: string | number;
        }>;
        Ethereum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            FLIP: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        }>;
        Polkadot: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            DOT: bigint;
        }, {
            DOT: string | number;
        }>;
        Arbitrum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
        }>;
        Solana: z.ZodObject<{
            SOL: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            SOL: bigint;
        }, {
            USDC: string | number;
            SOL: string | number;
        }>;
        Assethub: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        }, {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        }>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    }, {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    }>;
    btc_vault_deposit_address: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    affiliates: z.ZodDefault<z.ZodOptional<z.ZodArray<z.ZodObject<{
        account_id: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        short_id: z.ZodNumber;
        withdrawal_address: z.ZodEffects<z.ZodString, `0x${string}`, string>;
    }, "strip", z.ZodTypeAny, {
        account_id: `cF${string}`;
        short_id: number;
        withdrawal_address: `0x${string}`;
    }, {
        account_id: string;
        short_id: number;
        withdrawal_address: string;
    }>, "many">>>;
    vanity_name: z.ZodOptional<z.ZodString>;
    flip_balance: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    asset_balances: z.ZodObject<Omit<{
        Bitcoin: z.ZodObject<{
            BTC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            BTC: bigint;
        }, {
            BTC: string | number;
        }>;
        Ethereum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            FLIP: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        }>;
        Polkadot: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            DOT: bigint;
        }, {
            DOT: string | number;
        }>;
        Arbitrum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
        }>;
        Solana: z.ZodObject<{
            SOL: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            SOL: bigint;
        }, {
            USDC: string | number;
            SOL: string | number;
        }>;
        Assethub: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        }, {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        }>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    }, {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    }>;
    bond: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    estimated_redeemable_balance: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    bound_redeem_address: z.ZodOptional<z.ZodEffects<z.ZodString, `0x${string}`, string>>;
    restricted_balances: z.ZodOptional<z.ZodRecord<z.ZodEffects<z.ZodString, `0x${string}`, string>, z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>>;
    current_delegation_status: z.ZodOptional<z.ZodObject<{
        operator: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        bid: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        operator: `cF${string}`;
        bid: bigint;
    }, {
        operator: string;
        bid: string | number;
    }>>;
    upcoming_delegation_status: z.ZodOptional<z.ZodObject<{
        operator: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        bid: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        operator: `cF${string}`;
        bid: bigint;
    }, {
        operator: string;
        bid: string | number;
    }>>;
    role: z.ZodLiteral<"broker">;
}, "strip", z.ZodTypeAny, {
    role: "broker";
    flip_balance: bigint;
    asset_balances: {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    };
    bond: bigint;
    estimated_redeemable_balance: bigint;
    earned_fees: {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    };
    affiliates: {
        account_id: `cF${string}`;
        short_id: number;
        withdrawal_address: `0x${string}`;
    }[];
    vanity_name?: string | undefined;
    bound_redeem_address?: `0x${string}` | undefined;
    restricted_balances?: Partial<Record<`0x${string}`, bigint>> | undefined;
    current_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
    upcoming_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
    btc_vault_deposit_address?: string | null | undefined;
}, {
    role: "broker";
    flip_balance: string | number;
    asset_balances: {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    };
    bond: string | number;
    estimated_redeemable_balance: string | number;
    earned_fees: {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    };
    vanity_name?: string | undefined;
    bound_redeem_address?: string | undefined;
    restricted_balances?: Record<string, string | number> | undefined;
    current_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
    upcoming_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
    btc_vault_deposit_address?: string | null | undefined;
    affiliates?: {
        account_id: string;
        short_id: number;
        withdrawal_address: string;
    }[] | undefined;
}>, z.ZodObject<{
    managed_validators: z.ZodRecord<z.ZodEffects<z.ZodString, `cF${string}`, string>, z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
    delegators: z.ZodRecord<z.ZodEffects<z.ZodString, `cF${string}`, string>, z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
    settings: z.ZodObject<{
        fee_bps: z.ZodNumber;
        delegation_acceptance: z.ZodEnum<["Allow", "Deny"]>;
    }, "strip", z.ZodTypeAny, {
        fee_bps: number;
        delegation_acceptance: "Allow" | "Deny";
    }, {
        fee_bps: number;
        delegation_acceptance: "Allow" | "Deny";
    }>;
    allowed: z.ZodDefault<z.ZodOptional<z.ZodArray<z.ZodEffects<z.ZodString, `cF${string}`, string>, "many">>>;
    blocked: z.ZodDefault<z.ZodOptional<z.ZodArray<z.ZodEffects<z.ZodString, `cF${string}`, string>, "many">>>;
    active_delegation: z.ZodOptional<z.ZodObject<{
        operator: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        validators: z.ZodRecord<z.ZodEffects<z.ZodString, `cF${string}`, string>, z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        delegators: z.ZodRecord<z.ZodEffects<z.ZodString, `cF${string}`, string>, z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        delegation_fee_bps: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        operator: `cF${string}`;
        delegators: Partial<Record<`cF${string}`, bigint>>;
        validators: Partial<Record<`cF${string}`, bigint>>;
        delegation_fee_bps: number;
    }, {
        operator: string;
        delegators: Record<string, string | number>;
        validators: Record<string, string | number>;
        delegation_fee_bps: number;
    }>>;
    vanity_name: z.ZodOptional<z.ZodString>;
    flip_balance: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    asset_balances: z.ZodObject<Omit<{
        Bitcoin: z.ZodObject<{
            BTC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            BTC: bigint;
        }, {
            BTC: string | number;
        }>;
        Ethereum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            FLIP: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        }>;
        Polkadot: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            DOT: bigint;
        }, {
            DOT: string | number;
        }>;
        Arbitrum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
        }>;
        Solana: z.ZodObject<{
            SOL: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            SOL: bigint;
        }, {
            USDC: string | number;
            SOL: string | number;
        }>;
        Assethub: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        }, {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        }>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    }, {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    }>;
    bond: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    estimated_redeemable_balance: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    bound_redeem_address: z.ZodOptional<z.ZodEffects<z.ZodString, `0x${string}`, string>>;
    restricted_balances: z.ZodOptional<z.ZodRecord<z.ZodEffects<z.ZodString, `0x${string}`, string>, z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>>;
    current_delegation_status: z.ZodOptional<z.ZodObject<{
        operator: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        bid: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        operator: `cF${string}`;
        bid: bigint;
    }, {
        operator: string;
        bid: string | number;
    }>>;
    upcoming_delegation_status: z.ZodOptional<z.ZodObject<{
        operator: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        bid: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        operator: `cF${string}`;
        bid: bigint;
    }, {
        operator: string;
        bid: string | number;
    }>>;
    role: z.ZodLiteral<"operator">;
}, "strip", z.ZodTypeAny, {
    role: "operator";
    flip_balance: bigint;
    asset_balances: {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    };
    bond: bigint;
    estimated_redeemable_balance: bigint;
    managed_validators: Partial<Record<`cF${string}`, bigint>>;
    delegators: Partial<Record<`cF${string}`, bigint>>;
    settings: {
        fee_bps: number;
        delegation_acceptance: "Allow" | "Deny";
    };
    allowed: `cF${string}`[];
    blocked: `cF${string}`[];
    vanity_name?: string | undefined;
    bound_redeem_address?: `0x${string}` | undefined;
    restricted_balances?: Partial<Record<`0x${string}`, bigint>> | undefined;
    current_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
    upcoming_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
    active_delegation?: {
        operator: `cF${string}`;
        delegators: Partial<Record<`cF${string}`, bigint>>;
        validators: Partial<Record<`cF${string}`, bigint>>;
        delegation_fee_bps: number;
    } | undefined;
}, {
    role: "operator";
    flip_balance: string | number;
    asset_balances: {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    };
    bond: string | number;
    estimated_redeemable_balance: string | number;
    managed_validators: Record<string, string | number>;
    delegators: Record<string, string | number>;
    settings: {
        fee_bps: number;
        delegation_acceptance: "Allow" | "Deny";
    };
    vanity_name?: string | undefined;
    bound_redeem_address?: string | undefined;
    restricted_balances?: Record<string, string | number> | undefined;
    current_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
    upcoming_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
    allowed?: string[] | undefined;
    blocked?: string[] | undefined;
    active_delegation?: {
        operator: string;
        delegators: Record<string, string | number>;
        validators: Record<string, string | number>;
        delegation_fee_bps: number;
    } | undefined;
}>, z.ZodObject<{
    refund_addresses: z.ZodObject<Omit<{
        Bitcoin: z.ZodNullable<z.ZodString>;
        Ethereum: z.ZodNullable<z.ZodString>;
        Polkadot: z.ZodNullable<z.ZodString>;
        Arbitrum: z.ZodNullable<z.ZodString>;
        Solana: z.ZodNullable<z.ZodString>;
        Assethub: z.ZodNullable<z.ZodString>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: string | null;
        Ethereum: string | null;
        Arbitrum: string | null;
        Solana: string | null;
        Assethub: string | null;
    }, {
        Bitcoin: string | null;
        Ethereum: string | null;
        Arbitrum: string | null;
        Solana: string | null;
        Assethub: string | null;
    }>;
    earned_fees: z.ZodObject<Omit<{
        Bitcoin: z.ZodObject<{
            BTC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            BTC: bigint;
        }, {
            BTC: string | number;
        }>;
        Ethereum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            FLIP: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        }>;
        Polkadot: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            DOT: bigint;
        }, {
            DOT: string | number;
        }>;
        Arbitrum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
        }>;
        Solana: z.ZodObject<{
            SOL: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            SOL: bigint;
        }, {
            USDC: string | number;
            SOL: string | number;
        }>;
        Assethub: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        }, {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        }>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    }, {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    }>;
    boost_balances: z.ZodObject<Omit<{
        Bitcoin: z.ZodObject<{
            BTC: z.ZodArray<z.ZodObject<{
                fee_tier: z.ZodNumber;
                total_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                available_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                in_use_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                is_withdrawing: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }, {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            BTC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        }, {
            BTC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        }>;
        Ethereum: z.ZodObject<{
            ETH: z.ZodArray<z.ZodObject<{
                fee_tier: z.ZodNumber;
                total_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                available_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                in_use_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                is_withdrawing: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }, {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }>, "many">;
            USDC: z.ZodArray<z.ZodObject<{
                fee_tier: z.ZodNumber;
                total_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                available_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                in_use_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                is_withdrawing: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }, {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }>, "many">;
            FLIP: z.ZodArray<z.ZodObject<{
                fee_tier: z.ZodNumber;
                total_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                available_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                in_use_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                is_withdrawing: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }, {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }>, "many">;
            USDT: z.ZodArray<z.ZodObject<{
                fee_tier: z.ZodNumber;
                total_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                available_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                in_use_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                is_withdrawing: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }, {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            ETH: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            FLIP: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        }, {
            ETH: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            FLIP: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        }>;
        Polkadot: z.ZodObject<{
            DOT: z.ZodArray<z.ZodObject<{
                fee_tier: z.ZodNumber;
                total_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                available_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                in_use_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                is_withdrawing: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }, {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            DOT: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        }, {
            DOT: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        }>;
        Arbitrum: z.ZodObject<{
            ETH: z.ZodArray<z.ZodObject<{
                fee_tier: z.ZodNumber;
                total_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                available_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                in_use_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                is_withdrawing: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }, {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }>, "many">;
            USDC: z.ZodArray<z.ZodObject<{
                fee_tier: z.ZodNumber;
                total_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                available_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                in_use_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                is_withdrawing: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }, {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            ETH: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        }, {
            ETH: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        }>;
        Solana: z.ZodObject<{
            SOL: z.ZodArray<z.ZodObject<{
                fee_tier: z.ZodNumber;
                total_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                available_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                in_use_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                is_withdrawing: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }, {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }>, "many">;
            USDC: z.ZodArray<z.ZodObject<{
                fee_tier: z.ZodNumber;
                total_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                available_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                in_use_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                is_withdrawing: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }, {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            SOL: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        }, {
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            SOL: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        }>;
        Assethub: z.ZodObject<{
            DOT: z.ZodArray<z.ZodObject<{
                fee_tier: z.ZodNumber;
                total_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                available_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                in_use_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                is_withdrawing: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }, {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }>, "many">;
            USDC: z.ZodArray<z.ZodObject<{
                fee_tier: z.ZodNumber;
                total_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                available_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                in_use_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                is_withdrawing: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }, {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }>, "many">;
            USDT: z.ZodArray<z.ZodObject<{
                fee_tier: z.ZodNumber;
                total_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                available_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                in_use_balance: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
                is_withdrawing: z.ZodBoolean;
            }, "strip", z.ZodTypeAny, {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }, {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }>, "many">;
        }, "strip", z.ZodTypeAny, {
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            DOT: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        }, {
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            DOT: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        }>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: {
            BTC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        };
        Ethereum: {
            ETH: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            FLIP: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        };
        Arbitrum: {
            ETH: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        };
        Solana: {
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            SOL: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        };
        Assethub: {
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            DOT: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        };
    }, {
        Bitcoin: {
            BTC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        };
        Ethereum: {
            ETH: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            FLIP: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        };
        Arbitrum: {
            ETH: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        };
        Solana: {
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            SOL: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        };
        Assethub: {
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            DOT: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        };
    }>;
    lending_positions: z.ZodOptional<z.ZodArray<z.ZodIntersection<z.ZodUnion<[z.ZodObject<{
        chain: z.ZodLiteral<"Bitcoin">;
        asset: z.ZodLiteral<"BTC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Bitcoin";
        asset: "BTC";
    }, {
        chain: "Bitcoin";
        asset: "BTC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Polkadot">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Polkadot";
        asset: "DOT";
    }, {
        chain: "Polkadot";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"FLIP">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "FLIP";
    }, {
        chain: "Ethereum";
        asset: "FLIP";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "ETH";
    }, {
        chain: "Ethereum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDC";
    }, {
        chain: "Ethereum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDT";
    }, {
        chain: "Ethereum";
        asset: "USDT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "ETH";
    }, {
        chain: "Arbitrum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "USDC";
    }, {
        chain: "Arbitrum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"SOL">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "SOL";
    }, {
        chain: "Solana";
        asset: "SOL";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "USDC";
    }, {
        chain: "Solana";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "DOT";
    }, {
        chain: "Assethub";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDC";
    }, {
        chain: "Assethub";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDT";
    }, {
        chain: "Assethub";
        asset: "USDT";
    }>]>, z.ZodObject<{
        total_amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        available_amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        total_amount: bigint;
        available_amount: bigint;
    }, {
        total_amount: string | number;
        available_amount: string | number;
    }>>, "many">>;
    collateral_balances: z.ZodOptional<z.ZodArray<z.ZodIntersection<z.ZodUnion<[z.ZodObject<{
        chain: z.ZodLiteral<"Bitcoin">;
        asset: z.ZodLiteral<"BTC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Bitcoin";
        asset: "BTC";
    }, {
        chain: "Bitcoin";
        asset: "BTC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Polkadot">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Polkadot";
        asset: "DOT";
    }, {
        chain: "Polkadot";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"FLIP">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "FLIP";
    }, {
        chain: "Ethereum";
        asset: "FLIP";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "ETH";
    }, {
        chain: "Ethereum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDC";
    }, {
        chain: "Ethereum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDT";
    }, {
        chain: "Ethereum";
        asset: "USDT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "ETH";
    }, {
        chain: "Arbitrum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "USDC";
    }, {
        chain: "Arbitrum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"SOL">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "SOL";
    }, {
        chain: "Solana";
        asset: "SOL";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "USDC";
    }, {
        chain: "Solana";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "DOT";
    }, {
        chain: "Assethub";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDC";
    }, {
        chain: "Assethub";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDT";
    }, {
        chain: "Assethub";
        asset: "USDT";
    }>]>, z.ZodObject<{
        amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        amount: bigint;
    }, {
        amount: string | number;
    }>>, "many">>;
    vanity_name: z.ZodOptional<z.ZodString>;
    flip_balance: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    asset_balances: z.ZodObject<Omit<{
        Bitcoin: z.ZodObject<{
            BTC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            BTC: bigint;
        }, {
            BTC: string | number;
        }>;
        Ethereum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            FLIP: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        }>;
        Polkadot: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            DOT: bigint;
        }, {
            DOT: string | number;
        }>;
        Arbitrum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
        }>;
        Solana: z.ZodObject<{
            SOL: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            SOL: bigint;
        }, {
            USDC: string | number;
            SOL: string | number;
        }>;
        Assethub: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        }, {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        }>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    }, {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    }>;
    bond: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    estimated_redeemable_balance: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    bound_redeem_address: z.ZodOptional<z.ZodEffects<z.ZodString, `0x${string}`, string>>;
    restricted_balances: z.ZodOptional<z.ZodRecord<z.ZodEffects<z.ZodString, `0x${string}`, string>, z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>>;
    current_delegation_status: z.ZodOptional<z.ZodObject<{
        operator: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        bid: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        operator: `cF${string}`;
        bid: bigint;
    }, {
        operator: string;
        bid: string | number;
    }>>;
    upcoming_delegation_status: z.ZodOptional<z.ZodObject<{
        operator: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        bid: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        operator: `cF${string}`;
        bid: bigint;
    }, {
        operator: string;
        bid: string | number;
    }>>;
    role: z.ZodLiteral<"liquidity_provider">;
}, "strip", z.ZodTypeAny, {
    role: "liquidity_provider";
    flip_balance: bigint;
    asset_balances: {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    };
    bond: bigint;
    estimated_redeemable_balance: bigint;
    earned_fees: {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    };
    refund_addresses: {
        Bitcoin: string | null;
        Ethereum: string | null;
        Arbitrum: string | null;
        Solana: string | null;
        Assethub: string | null;
    };
    boost_balances: {
        Bitcoin: {
            BTC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        };
        Ethereum: {
            ETH: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            FLIP: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        };
        Arbitrum: {
            ETH: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        };
        Solana: {
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            SOL: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        };
        Assethub: {
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            DOT: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        };
    };
    vanity_name?: string | undefined;
    bound_redeem_address?: `0x${string}` | undefined;
    restricted_balances?: Partial<Record<`0x${string}`, bigint>> | undefined;
    current_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
    upcoming_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
    lending_positions?: (({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        total_amount: bigint;
        available_amount: bigint;
    })[] | undefined;
    collateral_balances?: (({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        amount: bigint;
    })[] | undefined;
}, {
    role: "liquidity_provider";
    flip_balance: string | number;
    asset_balances: {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    };
    bond: string | number;
    estimated_redeemable_balance: string | number;
    earned_fees: {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    };
    refund_addresses: {
        Bitcoin: string | null;
        Ethereum: string | null;
        Arbitrum: string | null;
        Solana: string | null;
        Assethub: string | null;
    };
    boost_balances: {
        Bitcoin: {
            BTC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        };
        Ethereum: {
            ETH: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            FLIP: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        };
        Arbitrum: {
            ETH: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        };
        Solana: {
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            SOL: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        };
        Assethub: {
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            DOT: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        };
    };
    vanity_name?: string | undefined;
    bound_redeem_address?: string | undefined;
    restricted_balances?: Record<string, string | number> | undefined;
    current_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
    upcoming_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
    lending_positions?: (({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        total_amount: string | number;
        available_amount: string | number;
    })[] | undefined;
    collateral_balances?: (({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        amount: string | number;
    })[] | undefined;
}>, z.ZodObject<{
    last_heartbeat: z.ZodNumber;
    reputation_points: z.ZodNumber;
    keyholder_epochs: z.ZodArray<z.ZodNumber, "many">;
    is_current_authority: z.ZodBoolean;
    is_current_backup: z.ZodBoolean;
    is_qualified: z.ZodBoolean;
    is_online: z.ZodBoolean;
    is_bidding: z.ZodBoolean;
    apy_bp: z.ZodNullable<z.ZodNumber>;
    operator: z.ZodOptional<z.ZodEffects<z.ZodString, `cF${string}`, string>>;
    vanity_name: z.ZodOptional<z.ZodString>;
    flip_balance: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    asset_balances: z.ZodObject<Omit<{
        Bitcoin: z.ZodObject<{
            BTC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            BTC: bigint;
        }, {
            BTC: string | number;
        }>;
        Ethereum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            FLIP: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        }>;
        Polkadot: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            DOT: bigint;
        }, {
            DOT: string | number;
        }>;
        Arbitrum: z.ZodObject<{
            ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            ETH: bigint;
            USDC: bigint;
        }, {
            ETH: string | number;
            USDC: string | number;
        }>;
        Solana: z.ZodObject<{
            SOL: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            SOL: bigint;
        }, {
            USDC: string | number;
            SOL: string | number;
        }>;
        Assethub: z.ZodObject<{
            DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        }, {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        }>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    }, {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    }>;
    bond: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    estimated_redeemable_balance: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    bound_redeem_address: z.ZodOptional<z.ZodEffects<z.ZodString, `0x${string}`, string>>;
    restricted_balances: z.ZodOptional<z.ZodRecord<z.ZodEffects<z.ZodString, `0x${string}`, string>, z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>>;
    current_delegation_status: z.ZodOptional<z.ZodObject<{
        operator: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        bid: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        operator: `cF${string}`;
        bid: bigint;
    }, {
        operator: string;
        bid: string | number;
    }>>;
    upcoming_delegation_status: z.ZodOptional<z.ZodObject<{
        operator: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        bid: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        operator: `cF${string}`;
        bid: bigint;
    }, {
        operator: string;
        bid: string | number;
    }>>;
    role: z.ZodLiteral<"validator">;
}, "strip", z.ZodTypeAny, {
    role: "validator";
    flip_balance: bigint;
    asset_balances: {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    };
    bond: bigint;
    estimated_redeemable_balance: bigint;
    last_heartbeat: number;
    reputation_points: number;
    keyholder_epochs: number[];
    is_current_authority: boolean;
    is_current_backup: boolean;
    is_qualified: boolean;
    is_online: boolean;
    is_bidding: boolean;
    apy_bp: number | null;
    operator?: `cF${string}` | undefined;
    vanity_name?: string | undefined;
    bound_redeem_address?: `0x${string}` | undefined;
    restricted_balances?: Partial<Record<`0x${string}`, bigint>> | undefined;
    current_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
    upcoming_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
}, {
    role: "validator";
    flip_balance: string | number;
    asset_balances: {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    };
    bond: string | number;
    estimated_redeemable_balance: string | number;
    last_heartbeat: number;
    reputation_points: number;
    keyholder_epochs: number[];
    is_current_authority: boolean;
    is_current_backup: boolean;
    is_qualified: boolean;
    is_online: boolean;
    is_bidding: boolean;
    apy_bp: number | null;
    operator?: string | undefined;
    vanity_name?: string | undefined;
    bound_redeem_address?: string | undefined;
    restricted_balances?: Record<string, string | number> | undefined;
    current_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
    upcoming_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
}>]>, {
    role: "unregistered";
    flip_balance: bigint;
    asset_balances: {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    };
    bond: bigint;
    estimated_redeemable_balance: bigint;
    vanity_name?: string | undefined;
    bound_redeem_address?: `0x${string}` | undefined;
    restricted_balances?: Partial<Record<`0x${string}`, bigint>> | undefined;
    current_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
    upcoming_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
} | {
    role: "broker";
    flip_balance: bigint;
    asset_balances: {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    };
    bond: bigint;
    estimated_redeemable_balance: bigint;
    earned_fees: {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    };
    affiliates: {
        account_id: `cF${string}`;
        short_id: number;
        withdrawal_address: `0x${string}`;
    }[];
    vanity_name?: string | undefined;
    bound_redeem_address?: `0x${string}` | undefined;
    restricted_balances?: Partial<Record<`0x${string}`, bigint>> | undefined;
    current_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
    upcoming_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
    btc_vault_deposit_address?: string | null | undefined;
} | {
    role: "liquidity_provider";
    flip_balance: bigint;
    asset_balances: {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    };
    bond: bigint;
    estimated_redeemable_balance: bigint;
    earned_fees: {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    };
    refund_addresses: {
        Bitcoin: string | null;
        Ethereum: string | null;
        Arbitrum: string | null;
        Solana: string | null;
        Assethub: string | null;
    };
    boost_balances: {
        Bitcoin: {
            BTC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        };
        Ethereum: {
            ETH: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            FLIP: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        };
        Arbitrum: {
            ETH: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        };
        Solana: {
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            SOL: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        };
        Assethub: {
            USDC: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
            DOT: {
                fee_tier: number;
                total_balance: bigint;
                available_balance: bigint;
                in_use_balance: bigint;
                is_withdrawing: boolean;
            }[];
        };
    };
    vanity_name?: string | undefined;
    bound_redeem_address?: `0x${string}` | undefined;
    restricted_balances?: Partial<Record<`0x${string}`, bigint>> | undefined;
    current_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
    upcoming_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
    lending_positions?: (({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        total_amount: bigint;
        available_amount: bigint;
    })[] | undefined;
    collateral_balances?: (({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        amount: bigint;
    })[] | undefined;
} | {
    role: "validator";
    flip_balance: bigint;
    asset_balances: {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    };
    bond: bigint;
    estimated_redeemable_balance: bigint;
    last_heartbeat: number;
    reputation_points: number;
    keyholder_epochs: number[];
    is_current_authority: boolean;
    is_current_backup: boolean;
    is_qualified: boolean;
    is_online: boolean;
    is_bidding: boolean;
    apy_bp: number | null;
    operator?: `cF${string}` | undefined;
    vanity_name?: string | undefined;
    bound_redeem_address?: `0x${string}` | undefined;
    restricted_balances?: Partial<Record<`0x${string}`, bigint>> | undefined;
    current_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
    upcoming_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
} | {
    upcoming_delegation: {
        validators: Partial<Record<`cF${string}`, bigint>>;
        delegators: Partial<Record<`cF${string}`, bigint>>;
        delegation_fee_bps: number;
        delegation_acceptance: "Allow" | "Deny";
    };
    role: "operator";
    flip_balance: bigint;
    asset_balances: {
        Bitcoin: {
            BTC: bigint;
        };
        Ethereum: {
            ETH: bigint;
            USDC: bigint;
            FLIP: bigint;
            USDT: bigint;
        };
        Arbitrum: {
            ETH: bigint;
            USDC: bigint;
        };
        Solana: {
            USDC: bigint;
            SOL: bigint;
        };
        Assethub: {
            USDC: bigint;
            USDT: bigint;
            DOT: bigint;
        };
    };
    bond: bigint;
    estimated_redeemable_balance: bigint;
    allowed: `cF${string}`[];
    blocked: `cF${string}`[];
    vanity_name?: string | undefined;
    bound_redeem_address?: `0x${string}` | undefined;
    restricted_balances?: Partial<Record<`0x${string}`, bigint>> | undefined;
    current_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
    upcoming_delegation_status?: {
        operator: `cF${string}`;
        bid: bigint;
    } | undefined;
    active_delegation?: {
        operator: `cF${string}`;
        delegators: Partial<Record<`cF${string}`, bigint>>;
        validators: Partial<Record<`cF${string}`, bigint>>;
        delegation_fee_bps: number;
    } | undefined;
}, {
    role: "unregistered";
    flip_balance: string | number;
    asset_balances: {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    };
    bond: string | number;
    estimated_redeemable_balance: string | number;
    vanity_name?: string | undefined;
    bound_redeem_address?: string | undefined;
    restricted_balances?: Record<string, string | number> | undefined;
    current_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
    upcoming_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
} | {
    role: "broker";
    flip_balance: string | number;
    asset_balances: {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    };
    bond: string | number;
    estimated_redeemable_balance: string | number;
    earned_fees: {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    };
    vanity_name?: string | undefined;
    bound_redeem_address?: string | undefined;
    restricted_balances?: Record<string, string | number> | undefined;
    current_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
    upcoming_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
    btc_vault_deposit_address?: string | null | undefined;
    affiliates?: {
        account_id: string;
        short_id: number;
        withdrawal_address: string;
    }[] | undefined;
} | {
    role: "operator";
    flip_balance: string | number;
    asset_balances: {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    };
    bond: string | number;
    estimated_redeemable_balance: string | number;
    managed_validators: Record<string, string | number>;
    delegators: Record<string, string | number>;
    settings: {
        fee_bps: number;
        delegation_acceptance: "Allow" | "Deny";
    };
    vanity_name?: string | undefined;
    bound_redeem_address?: string | undefined;
    restricted_balances?: Record<string, string | number> | undefined;
    current_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
    upcoming_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
    allowed?: string[] | undefined;
    blocked?: string[] | undefined;
    active_delegation?: {
        operator: string;
        delegators: Record<string, string | number>;
        validators: Record<string, string | number>;
        delegation_fee_bps: number;
    } | undefined;
} | {
    role: "liquidity_provider";
    flip_balance: string | number;
    asset_balances: {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    };
    bond: string | number;
    estimated_redeemable_balance: string | number;
    earned_fees: {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    };
    refund_addresses: {
        Bitcoin: string | null;
        Ethereum: string | null;
        Arbitrum: string | null;
        Solana: string | null;
        Assethub: string | null;
    };
    boost_balances: {
        Bitcoin: {
            BTC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        };
        Ethereum: {
            ETH: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            FLIP: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        };
        Arbitrum: {
            ETH: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        };
        Solana: {
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            SOL: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        };
        Assethub: {
            USDC: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            USDT: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
            DOT: {
                fee_tier: number;
                total_balance: string;
                available_balance: string;
                in_use_balance: string;
                is_withdrawing: boolean;
            }[];
        };
    };
    vanity_name?: string | undefined;
    bound_redeem_address?: string | undefined;
    restricted_balances?: Record<string, string | number> | undefined;
    current_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
    upcoming_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
    lending_positions?: (({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        total_amount: string | number;
        available_amount: string | number;
    })[] | undefined;
    collateral_balances?: (({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        amount: string | number;
    })[] | undefined;
} | {
    role: "validator";
    flip_balance: string | number;
    asset_balances: {
        Bitcoin: {
            BTC: string | number;
        };
        Ethereum: {
            ETH: string | number;
            USDC: string | number;
            FLIP: string | number;
            USDT: string | number;
        };
        Arbitrum: {
            ETH: string | number;
            USDC: string | number;
        };
        Solana: {
            USDC: string | number;
            SOL: string | number;
        };
        Assethub: {
            USDC: string | number;
            USDT: string | number;
            DOT: string | number;
        };
    };
    bond: string | number;
    estimated_redeemable_balance: string | number;
    last_heartbeat: number;
    reputation_points: number;
    keyholder_epochs: number[];
    is_current_authority: boolean;
    is_current_backup: boolean;
    is_qualified: boolean;
    is_online: boolean;
    is_bidding: boolean;
    apy_bp: number | null;
    operator?: string | undefined;
    vanity_name?: string | undefined;
    bound_redeem_address?: string | undefined;
    restricted_balances?: Record<string, string | number> | undefined;
    current_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
    upcoming_delegation_status?: {
        operator: string;
        bid: string | number;
    } | undefined;
}>;
declare const cfAccounts: z.ZodArray<z.ZodTuple<[z.ZodString, z.ZodString], null>, "many">;
declare const cfPoolPriceV2: z.ZodObject<{
    sell: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
    buy: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
    range_order: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    base_asset: z.ZodUnion<[z.ZodObject<{
        chain: z.ZodLiteral<"Bitcoin">;
        asset: z.ZodLiteral<"BTC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Bitcoin";
        asset: "BTC";
    }, {
        chain: "Bitcoin";
        asset: "BTC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Polkadot">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Polkadot";
        asset: "DOT";
    }, {
        chain: "Polkadot";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"FLIP">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "FLIP";
    }, {
        chain: "Ethereum";
        asset: "FLIP";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "ETH";
    }, {
        chain: "Ethereum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDC";
    }, {
        chain: "Ethereum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDT";
    }, {
        chain: "Ethereum";
        asset: "USDT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "ETH";
    }, {
        chain: "Arbitrum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "USDC";
    }, {
        chain: "Arbitrum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"SOL">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "SOL";
    }, {
        chain: "Solana";
        asset: "SOL";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "USDC";
    }, {
        chain: "Solana";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "DOT";
    }, {
        chain: "Assethub";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDC";
    }, {
        chain: "Assethub";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDT";
    }, {
        chain: "Assethub";
        asset: "USDT";
    }>]>;
    quote_asset: z.ZodUnion<[z.ZodObject<{
        chain: z.ZodLiteral<"Bitcoin">;
        asset: z.ZodLiteral<"BTC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Bitcoin";
        asset: "BTC";
    }, {
        chain: "Bitcoin";
        asset: "BTC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Polkadot">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Polkadot";
        asset: "DOT";
    }, {
        chain: "Polkadot";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"FLIP">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "FLIP";
    }, {
        chain: "Ethereum";
        asset: "FLIP";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "ETH";
    }, {
        chain: "Ethereum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDC";
    }, {
        chain: "Ethereum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDT";
    }, {
        chain: "Ethereum";
        asset: "USDT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "ETH";
    }, {
        chain: "Arbitrum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "USDC";
    }, {
        chain: "Arbitrum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"SOL">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "SOL";
    }, {
        chain: "Solana";
        asset: "SOL";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "USDC";
    }, {
        chain: "Solana";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "DOT";
    }, {
        chain: "Assethub";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDC";
    }, {
        chain: "Assethub";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDT";
    }, {
        chain: "Assethub";
        asset: "USDT";
    }>]>;
}, "strip", z.ZodTypeAny, {
    quote_asset: {
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    };
    sell: bigint | null;
    buy: bigint | null;
    range_order: bigint;
    base_asset: {
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    };
}, {
    quote_asset: {
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    };
    sell: string | number | null;
    buy: string | number | null;
    range_order: string | number;
    base_asset: {
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    };
}>;
declare const ask: z.ZodEffects<z.ZodObject<{
    id: z.ZodEffects<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>, string, string | number>;
    tick: z.ZodNumber;
    sell_amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    fees_earned: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    original_sell_amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    lp: z.ZodString;
}, "strip", z.ZodTypeAny, {
    id: string;
    tick: number;
    sell_amount: bigint;
    fees_earned: bigint;
    original_sell_amount: bigint;
    lp: string;
}, {
    id: string | number;
    tick: number;
    sell_amount: string | number;
    fees_earned: string | number;
    original_sell_amount: string | number;
    lp: string;
}>, {
    type: "ask";
    id: string;
    tick: number;
    sell_amount: bigint;
    fees_earned: bigint;
    original_sell_amount: bigint;
    lp: string;
}, {
    id: string | number;
    tick: number;
    sell_amount: string | number;
    fees_earned: string | number;
    original_sell_amount: string | number;
    lp: string;
}>;
declare const bid: z.ZodEffects<z.ZodObject<{
    id: z.ZodEffects<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>, string, string | number>;
    tick: z.ZodNumber;
    sell_amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    fees_earned: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    original_sell_amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    lp: z.ZodString;
}, "strip", z.ZodTypeAny, {
    id: string;
    tick: number;
    sell_amount: bigint;
    fees_earned: bigint;
    original_sell_amount: bigint;
    lp: string;
}, {
    id: string | number;
    tick: number;
    sell_amount: string | number;
    fees_earned: string | number;
    original_sell_amount: string | number;
    lp: string;
}>, {
    type: "bid";
    id: string;
    tick: number;
    sell_amount: bigint;
    fees_earned: bigint;
    original_sell_amount: bigint;
    lp: string;
}, {
    id: string | number;
    tick: number;
    sell_amount: string | number;
    fees_earned: string | number;
    original_sell_amount: string | number;
    lp: string;
}>;
type RpcLimitOrder = z.infer<typeof ask> | z.infer<typeof bid>;
type RpcRangeOrder = z.infer<typeof rangeOrder>;
declare const rangeOrder: z.ZodEffects<z.ZodObject<{
    id: z.ZodEffects<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>, string, string | number>;
    range: z.ZodObject<{
        start: z.ZodNumber;
        end: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        start: number;
        end: number;
    }, {
        start: number;
        end: number;
    }>;
    liquidity: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    fees_earned: z.ZodObject<{
        base: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        quote: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        base: bigint;
        quote: bigint;
    }, {
        base: string | number;
        quote: string | number;
    }>;
    lp: z.ZodString;
}, "strip", z.ZodTypeAny, {
    id: string;
    fees_earned: {
        base: bigint;
        quote: bigint;
    };
    lp: string;
    range: {
        start: number;
        end: number;
    };
    liquidity: bigint;
}, {
    id: string | number;
    fees_earned: {
        base: string | number;
        quote: string | number;
    };
    lp: string;
    range: {
        start: number;
        end: number;
    };
    liquidity: string | number;
}>, {
    type: "range";
    id: string;
    fees_earned: {
        base: bigint;
        quote: bigint;
    };
    lp: string;
    range: {
        start: number;
        end: number;
    };
    liquidity: bigint;
}, {
    id: string | number;
    fees_earned: {
        base: string | number;
        quote: string | number;
    };
    lp: string;
    range: {
        start: number;
        end: number;
    };
    liquidity: string | number;
}>;
declare const cfPoolOrders: z.ZodObject<{
    limit_orders: z.ZodObject<{
        asks: z.ZodArray<z.ZodEffects<z.ZodObject<{
            id: z.ZodEffects<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>, string, string | number>;
            tick: z.ZodNumber;
            sell_amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            fees_earned: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            original_sell_amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            lp: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            tick: number;
            sell_amount: bigint;
            fees_earned: bigint;
            original_sell_amount: bigint;
            lp: string;
        }, {
            id: string | number;
            tick: number;
            sell_amount: string | number;
            fees_earned: string | number;
            original_sell_amount: string | number;
            lp: string;
        }>, {
            type: "ask";
            id: string;
            tick: number;
            sell_amount: bigint;
            fees_earned: bigint;
            original_sell_amount: bigint;
            lp: string;
        }, {
            id: string | number;
            tick: number;
            sell_amount: string | number;
            fees_earned: string | number;
            original_sell_amount: string | number;
            lp: string;
        }>, "many">;
        bids: z.ZodArray<z.ZodEffects<z.ZodObject<{
            id: z.ZodEffects<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>, string, string | number>;
            tick: z.ZodNumber;
            sell_amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            fees_earned: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            original_sell_amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            lp: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            tick: number;
            sell_amount: bigint;
            fees_earned: bigint;
            original_sell_amount: bigint;
            lp: string;
        }, {
            id: string | number;
            tick: number;
            sell_amount: string | number;
            fees_earned: string | number;
            original_sell_amount: string | number;
            lp: string;
        }>, {
            type: "bid";
            id: string;
            tick: number;
            sell_amount: bigint;
            fees_earned: bigint;
            original_sell_amount: bigint;
            lp: string;
        }, {
            id: string | number;
            tick: number;
            sell_amount: string | number;
            fees_earned: string | number;
            original_sell_amount: string | number;
            lp: string;
        }>, "many">;
    }, "strip", z.ZodTypeAny, {
        asks: {
            type: "ask";
            id: string;
            tick: number;
            sell_amount: bigint;
            fees_earned: bigint;
            original_sell_amount: bigint;
            lp: string;
        }[];
        bids: {
            type: "bid";
            id: string;
            tick: number;
            sell_amount: bigint;
            fees_earned: bigint;
            original_sell_amount: bigint;
            lp: string;
        }[];
    }, {
        asks: {
            id: string | number;
            tick: number;
            sell_amount: string | number;
            fees_earned: string | number;
            original_sell_amount: string | number;
            lp: string;
        }[];
        bids: {
            id: string | number;
            tick: number;
            sell_amount: string | number;
            fees_earned: string | number;
            original_sell_amount: string | number;
            lp: string;
        }[];
    }>;
    range_orders: z.ZodArray<z.ZodEffects<z.ZodObject<{
        id: z.ZodEffects<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>, string, string | number>;
        range: z.ZodObject<{
            start: z.ZodNumber;
            end: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            start: number;
            end: number;
        }, {
            start: number;
            end: number;
        }>;
        liquidity: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        fees_earned: z.ZodObject<{
            base: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
            quote: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        }, "strip", z.ZodTypeAny, {
            base: bigint;
            quote: bigint;
        }, {
            base: string | number;
            quote: string | number;
        }>;
        lp: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        id: string;
        fees_earned: {
            base: bigint;
            quote: bigint;
        };
        lp: string;
        range: {
            start: number;
            end: number;
        };
        liquidity: bigint;
    }, {
        id: string | number;
        fees_earned: {
            base: string | number;
            quote: string | number;
        };
        lp: string;
        range: {
            start: number;
            end: number;
        };
        liquidity: string | number;
    }>, {
        type: "range";
        id: string;
        fees_earned: {
            base: bigint;
            quote: bigint;
        };
        lp: string;
        range: {
            start: number;
            end: number;
        };
        liquidity: bigint;
    }, {
        id: string | number;
        fees_earned: {
            base: string | number;
            quote: string | number;
        };
        lp: string;
        range: {
            start: number;
            end: number;
        };
        liquidity: string | number;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    limit_orders: {
        asks: {
            type: "ask";
            id: string;
            tick: number;
            sell_amount: bigint;
            fees_earned: bigint;
            original_sell_amount: bigint;
            lp: string;
        }[];
        bids: {
            type: "bid";
            id: string;
            tick: number;
            sell_amount: bigint;
            fees_earned: bigint;
            original_sell_amount: bigint;
            lp: string;
        }[];
    };
    range_orders: {
        type: "range";
        id: string;
        fees_earned: {
            base: bigint;
            quote: bigint;
        };
        lp: string;
        range: {
            start: number;
            end: number;
        };
        liquidity: bigint;
    }[];
}, {
    limit_orders: {
        asks: {
            id: string | number;
            tick: number;
            sell_amount: string | number;
            fees_earned: string | number;
            original_sell_amount: string | number;
            lp: string;
        }[];
        bids: {
            id: string | number;
            tick: number;
            sell_amount: string | number;
            fees_earned: string | number;
            original_sell_amount: string | number;
            lp: string;
        }[];
    };
    range_orders: {
        id: string | number;
        fees_earned: {
            base: string | number;
            quote: string | number;
        };
        lp: string;
        range: {
            start: number;
            end: number;
        };
        liquidity: string | number;
    }[];
}>;
declare const cfBoostPoolDetails: z.ZodArray<z.ZodIntersection<z.ZodUnion<[z.ZodObject<{
    chain: z.ZodLiteral<"Bitcoin">;
    asset: z.ZodLiteral<"BTC">;
}, "strip", z.ZodTypeAny, {
    chain: "Bitcoin";
    asset: "BTC";
}, {
    chain: "Bitcoin";
    asset: "BTC";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Polkadot">;
    asset: z.ZodLiteral<"DOT">;
}, "strip", z.ZodTypeAny, {
    chain: "Polkadot";
    asset: "DOT";
}, {
    chain: "Polkadot";
    asset: "DOT";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Ethereum">;
    asset: z.ZodLiteral<"FLIP">;
}, "strip", z.ZodTypeAny, {
    chain: "Ethereum";
    asset: "FLIP";
}, {
    chain: "Ethereum";
    asset: "FLIP";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Ethereum">;
    asset: z.ZodLiteral<"ETH">;
}, "strip", z.ZodTypeAny, {
    chain: "Ethereum";
    asset: "ETH";
}, {
    chain: "Ethereum";
    asset: "ETH";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Ethereum">;
    asset: z.ZodLiteral<"USDC">;
}, "strip", z.ZodTypeAny, {
    chain: "Ethereum";
    asset: "USDC";
}, {
    chain: "Ethereum";
    asset: "USDC";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Ethereum">;
    asset: z.ZodLiteral<"USDT">;
}, "strip", z.ZodTypeAny, {
    chain: "Ethereum";
    asset: "USDT";
}, {
    chain: "Ethereum";
    asset: "USDT";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Arbitrum">;
    asset: z.ZodLiteral<"ETH">;
}, "strip", z.ZodTypeAny, {
    chain: "Arbitrum";
    asset: "ETH";
}, {
    chain: "Arbitrum";
    asset: "ETH";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Arbitrum">;
    asset: z.ZodLiteral<"USDC">;
}, "strip", z.ZodTypeAny, {
    chain: "Arbitrum";
    asset: "USDC";
}, {
    chain: "Arbitrum";
    asset: "USDC";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Solana">;
    asset: z.ZodLiteral<"SOL">;
}, "strip", z.ZodTypeAny, {
    chain: "Solana";
    asset: "SOL";
}, {
    chain: "Solana";
    asset: "SOL";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Solana">;
    asset: z.ZodLiteral<"USDC">;
}, "strip", z.ZodTypeAny, {
    chain: "Solana";
    asset: "USDC";
}, {
    chain: "Solana";
    asset: "USDC";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Assethub">;
    asset: z.ZodLiteral<"DOT">;
}, "strip", z.ZodTypeAny, {
    chain: "Assethub";
    asset: "DOT";
}, {
    chain: "Assethub";
    asset: "DOT";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Assethub">;
    asset: z.ZodLiteral<"USDC">;
}, "strip", z.ZodTypeAny, {
    chain: "Assethub";
    asset: "USDC";
}, {
    chain: "Assethub";
    asset: "USDC";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Assethub">;
    asset: z.ZodLiteral<"USDT">;
}, "strip", z.ZodTypeAny, {
    chain: "Assethub";
    asset: "USDT";
}, {
    chain: "Assethub";
    asset: "USDT";
}>]>, z.ZodObject<{
    fee_tier: z.ZodNumber;
    available_amounts: z.ZodArray<z.ZodObject<{
        account_id: z.ZodString;
        amount: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
    }, "strip", z.ZodTypeAny, {
        account_id: string;
        amount: bigint;
    }, {
        account_id: string;
        amount: string;
    }>, "many">;
    deposits_pending_finalization: z.ZodArray<z.ZodObject<{
        deposit_id: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        owed_amounts: z.ZodArray<z.ZodObject<{
            account_id: z.ZodString;
            amount: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
        }, "strip", z.ZodTypeAny, {
            account_id: string;
            amount: bigint;
        }, {
            account_id: string;
            amount: string;
        }>, "many">;
    }, "strip", z.ZodTypeAny, {
        deposit_id: bigint;
        owed_amounts: {
            account_id: string;
            amount: bigint;
        }[];
    }, {
        deposit_id: string | number;
        owed_amounts: {
            account_id: string;
            amount: string;
        }[];
    }>, "many">;
    pending_withdrawals: z.ZodArray<z.ZodObject<{
        account_id: z.ZodString;
        pending_deposits: z.ZodArray<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>, "many">;
    }, "strip", z.ZodTypeAny, {
        account_id: string;
        pending_deposits: bigint[];
    }, {
        account_id: string;
        pending_deposits: (string | number)[];
    }>, "many">;
    network_fee_deduction_percent: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    fee_tier: number;
    available_amounts: {
        account_id: string;
        amount: bigint;
    }[];
    deposits_pending_finalization: {
        deposit_id: bigint;
        owed_amounts: {
            account_id: string;
            amount: bigint;
        }[];
    }[];
    pending_withdrawals: {
        account_id: string;
        pending_deposits: bigint[];
    }[];
    network_fee_deduction_percent?: number | undefined;
}, {
    fee_tier: number;
    available_amounts: {
        account_id: string;
        amount: string;
    }[];
    deposits_pending_finalization: {
        deposit_id: string | number;
        owed_amounts: {
            account_id: string;
            amount: string;
        }[];
    }[];
    pending_withdrawals: {
        account_id: string;
        pending_deposits: (string | number)[];
    }[];
    network_fee_deduction_percent?: number | undefined;
}>>, "many">;
declare const cfBoostPoolPendingFees: z.ZodArray<z.ZodIntersection<z.ZodUnion<[z.ZodObject<{
    chain: z.ZodLiteral<"Bitcoin">;
    asset: z.ZodLiteral<"BTC">;
}, "strip", z.ZodTypeAny, {
    chain: "Bitcoin";
    asset: "BTC";
}, {
    chain: "Bitcoin";
    asset: "BTC";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Polkadot">;
    asset: z.ZodLiteral<"DOT">;
}, "strip", z.ZodTypeAny, {
    chain: "Polkadot";
    asset: "DOT";
}, {
    chain: "Polkadot";
    asset: "DOT";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Ethereum">;
    asset: z.ZodLiteral<"FLIP">;
}, "strip", z.ZodTypeAny, {
    chain: "Ethereum";
    asset: "FLIP";
}, {
    chain: "Ethereum";
    asset: "FLIP";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Ethereum">;
    asset: z.ZodLiteral<"ETH">;
}, "strip", z.ZodTypeAny, {
    chain: "Ethereum";
    asset: "ETH";
}, {
    chain: "Ethereum";
    asset: "ETH";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Ethereum">;
    asset: z.ZodLiteral<"USDC">;
}, "strip", z.ZodTypeAny, {
    chain: "Ethereum";
    asset: "USDC";
}, {
    chain: "Ethereum";
    asset: "USDC";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Ethereum">;
    asset: z.ZodLiteral<"USDT">;
}, "strip", z.ZodTypeAny, {
    chain: "Ethereum";
    asset: "USDT";
}, {
    chain: "Ethereum";
    asset: "USDT";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Arbitrum">;
    asset: z.ZodLiteral<"ETH">;
}, "strip", z.ZodTypeAny, {
    chain: "Arbitrum";
    asset: "ETH";
}, {
    chain: "Arbitrum";
    asset: "ETH";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Arbitrum">;
    asset: z.ZodLiteral<"USDC">;
}, "strip", z.ZodTypeAny, {
    chain: "Arbitrum";
    asset: "USDC";
}, {
    chain: "Arbitrum";
    asset: "USDC";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Solana">;
    asset: z.ZodLiteral<"SOL">;
}, "strip", z.ZodTypeAny, {
    chain: "Solana";
    asset: "SOL";
}, {
    chain: "Solana";
    asset: "SOL";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Solana">;
    asset: z.ZodLiteral<"USDC">;
}, "strip", z.ZodTypeAny, {
    chain: "Solana";
    asset: "USDC";
}, {
    chain: "Solana";
    asset: "USDC";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Assethub">;
    asset: z.ZodLiteral<"DOT">;
}, "strip", z.ZodTypeAny, {
    chain: "Assethub";
    asset: "DOT";
}, {
    chain: "Assethub";
    asset: "DOT";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Assethub">;
    asset: z.ZodLiteral<"USDC">;
}, "strip", z.ZodTypeAny, {
    chain: "Assethub";
    asset: "USDC";
}, {
    chain: "Assethub";
    asset: "USDC";
}>, z.ZodObject<{
    chain: z.ZodLiteral<"Assethub">;
    asset: z.ZodLiteral<"USDT">;
}, "strip", z.ZodTypeAny, {
    chain: "Assethub";
    asset: "USDT";
}, {
    chain: "Assethub";
    asset: "USDT";
}>]>, z.ZodObject<{
    fee_tier: z.ZodNumber;
    pending_fees: z.ZodArray<z.ZodObject<{
        deposit_id: z.ZodEffects<z.ZodNumber, bigint, number>;
        fees: z.ZodArray<z.ZodObject<{
            account_id: z.ZodString;
            amount: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
        }, "strip", z.ZodTypeAny, {
            account_id: string;
            amount: bigint;
        }, {
            account_id: string;
            amount: string;
        }>, "many">;
    }, "strip", z.ZodTypeAny, {
        fees: {
            account_id: string;
            amount: bigint;
        }[];
        deposit_id: bigint;
    }, {
        fees: {
            account_id: string;
            amount: string;
        }[];
        deposit_id: number;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    fee_tier: number;
    pending_fees: {
        fees: {
            account_id: string;
            amount: bigint;
        }[];
        deposit_id: bigint;
    }[];
}, {
    fee_tier: number;
    pending_fees: {
        fees: {
            account_id: string;
            amount: string;
        }[];
        deposit_id: number;
    }[];
}>>, "many">;
declare const lpTotalBalances: z.ZodObject<Omit<{
    Bitcoin: z.ZodObject<{
        BTC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        BTC: bigint;
    }, {
        BTC: string | number;
    }>;
    Ethereum: z.ZodObject<{
        ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        FLIP: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        ETH: bigint;
        USDC: bigint;
        FLIP: bigint;
        USDT: bigint;
    }, {
        ETH: string | number;
        USDC: string | number;
        FLIP: string | number;
        USDT: string | number;
    }>;
    Polkadot: z.ZodObject<{
        DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        DOT: bigint;
    }, {
        DOT: string | number;
    }>;
    Arbitrum: z.ZodObject<{
        ETH: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        ETH: bigint;
        USDC: bigint;
    }, {
        ETH: string | number;
        USDC: string | number;
    }>;
    Solana: z.ZodObject<{
        SOL: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        USDC: bigint;
        SOL: bigint;
    }, {
        USDC: string | number;
        SOL: string | number;
    }>;
    Assethub: z.ZodObject<{
        DOT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        USDC: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
        USDT: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        USDC: bigint;
        USDT: bigint;
        DOT: bigint;
    }, {
        USDC: string | number;
        USDT: string | number;
        DOT: string | number;
    }>;
}, "Polkadot">, "strip", z.ZodTypeAny, {
    Bitcoin: {
        BTC: bigint;
    };
    Ethereum: {
        ETH: bigint;
        USDC: bigint;
        FLIP: bigint;
        USDT: bigint;
    };
    Arbitrum: {
        ETH: bigint;
        USDC: bigint;
    };
    Solana: {
        USDC: bigint;
        SOL: bigint;
    };
    Assethub: {
        USDC: bigint;
        USDT: bigint;
        DOT: bigint;
    };
}, {
    Bitcoin: {
        BTC: string | number;
    };
    Ethereum: {
        ETH: string | number;
        USDC: string | number;
        FLIP: string | number;
        USDT: string | number;
    };
    Arbitrum: {
        ETH: string | number;
        USDC: string | number;
    };
    Solana: {
        USDC: string | number;
        SOL: string | number;
    };
    Assethub: {
        USDC: string | number;
        USDT: string | number;
        DOT: string | number;
    };
}>;
declare const cfFailedCallEvm: z.ZodObject<{
    contract: z.ZodEffects<z.ZodString, `0x${string}`, string>;
    data: z.ZodString;
}, "strip", z.ZodTypeAny, {
    data: string;
    contract: `0x${string}`;
}, {
    data: string;
    contract: string;
}>;
declare const cfAuctionState: z.ZodEffects<z.ZodObject<{
    epoch_duration: z.ZodNumber;
    current_epoch_started_at: z.ZodNumber;
    redemption_period_as_percentage: z.ZodNumber;
    min_funding: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    auction_size_range: z.ZodTuple<[z.ZodNumber, z.ZodNumber], null>;
    min_active_bid: z.ZodNullable<z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
    min_bid: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
}, "strip", z.ZodTypeAny, {
    epoch_duration: number;
    current_epoch_started_at: number;
    redemption_period_as_percentage: number;
    min_funding: bigint;
    auction_size_range: [number, number];
    min_active_bid: bigint | null;
    min_bid: bigint;
}, {
    epoch_duration: number;
    current_epoch_started_at: number;
    redemption_period_as_percentage: number;
    min_funding: string | number;
    auction_size_range: [number, number];
    min_active_bid: string | number | null;
    min_bid: string | number;
}>, Rename<{
    epoch_duration: number;
    current_epoch_started_at: number;
    redemption_period_as_percentage: number;
    min_funding: bigint;
    auction_size_range: [number, number];
    min_active_bid: bigint | null;
    min_bid: bigint;
}, {
    readonly epoch_duration: "epoch_duration_blocks";
}>, {
    epoch_duration: number;
    current_epoch_started_at: number;
    redemption_period_as_percentage: number;
    min_funding: string | number;
    auction_size_range: [number, number];
    min_active_bid: string | number | null;
    min_bid: string | number;
}>;
declare const cfMonitoringSimulateAuction: z.ZodObject<{
    auction_outcome: z.ZodObject<{
        winners: z.ZodArray<z.ZodEffects<z.ZodString, `cF${string}`, string>, "many">;
        bond: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        bond: bigint;
        winners: `cF${string}`[];
    }, {
        bond: string | number;
        winners: string[];
    }>;
    operators_info: z.ZodRecord<z.ZodEffects<z.ZodString, `cF${string}`, string>, z.ZodObject<{
        operator: z.ZodEffects<z.ZodString, `cF${string}`, string>;
        validators: z.ZodRecord<z.ZodEffects<z.ZodString, `cF${string}`, string>, z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        delegators: z.ZodRecord<z.ZodEffects<z.ZodString, `cF${string}`, string>, z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>>;
        delegation_fee_bps: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        operator: `cF${string}`;
        delegators: Partial<Record<`cF${string}`, bigint>>;
        validators: Partial<Record<`cF${string}`, bigint>>;
        delegation_fee_bps: number;
    }, {
        operator: string;
        delegators: Record<string, string | number>;
        validators: Record<string, string | number>;
        delegation_fee_bps: number;
    }>>;
    new_validators: z.ZodArray<z.ZodEffects<z.ZodString, `cF${string}`, string>, "many">;
    current_mab: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
}, "strip", z.ZodTypeAny, {
    auction_outcome: {
        bond: bigint;
        winners: `cF${string}`[];
    };
    operators_info: Partial<Record<`cF${string}`, {
        operator: `cF${string}`;
        delegators: Partial<Record<`cF${string}`, bigint>>;
        validators: Partial<Record<`cF${string}`, bigint>>;
        delegation_fee_bps: number;
    }>>;
    new_validators: `cF${string}`[];
    current_mab: bigint;
}, {
    auction_outcome: {
        bond: string | number;
        winners: string[];
    };
    operators_info: Record<string, {
        operator: string;
        delegators: Record<string, string | number>;
        validators: Record<string, string | number>;
        delegation_fee_bps: number;
    }>;
    new_validators: string[];
    current_mab: string | number;
}>;
declare const cfFlipSuppy: z.ZodEffects<z.ZodTuple<[z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>, z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>], null>, {
    totalIssuance: bigint;
    offchainFunds: bigint;
}, [string | number, string | number]>;
declare const ethereumAddress: z.ZodEffects<z.ZodString, `0x${string}`, string>;
declare const cfPoolOrderbook: z.ZodObject<{
    bids: z.ZodArray<z.ZodObject<{
        amount: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
        sqrt_price: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
    }, "strip", z.ZodTypeAny, {
        amount: bigint;
        sqrt_price: bigint;
    }, {
        amount: string;
        sqrt_price: string;
    }>, "many">;
    asks: z.ZodArray<z.ZodObject<{
        amount: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
        sqrt_price: z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>;
    }, "strip", z.ZodTypeAny, {
        amount: bigint;
        sqrt_price: bigint;
    }, {
        amount: string;
        sqrt_price: string;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    asks: {
        amount: bigint;
        sqrt_price: bigint;
    }[];
    bids: {
        amount: bigint;
        sqrt_price: bigint;
    }[];
}, {
    asks: {
        amount: string;
        sqrt_price: string;
    }[];
    bids: {
        amount: string;
        sqrt_price: string;
    }[];
}>;
declare const cfTradingStrategy: z.ZodObject<{
    lp_id: z.ZodString;
    strategy_id: z.ZodString;
    strategy: z.ZodUnion<[z.ZodObject<{
        TickZeroCentered: z.ZodObject<{
            spread_tick: z.ZodNumber;
            base_asset: z.ZodUnion<[z.ZodObject<{
                chain: z.ZodLiteral<"Bitcoin">;
                asset: z.ZodLiteral<"BTC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Bitcoin";
                asset: "BTC";
            }, {
                chain: "Bitcoin";
                asset: "BTC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Polkadot">;
                asset: z.ZodLiteral<"DOT">;
            }, "strip", z.ZodTypeAny, {
                chain: "Polkadot";
                asset: "DOT";
            }, {
                chain: "Polkadot";
                asset: "DOT";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Ethereum">;
                asset: z.ZodLiteral<"FLIP">;
            }, "strip", z.ZodTypeAny, {
                chain: "Ethereum";
                asset: "FLIP";
            }, {
                chain: "Ethereum";
                asset: "FLIP";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Ethereum">;
                asset: z.ZodLiteral<"ETH">;
            }, "strip", z.ZodTypeAny, {
                chain: "Ethereum";
                asset: "ETH";
            }, {
                chain: "Ethereum";
                asset: "ETH";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Ethereum">;
                asset: z.ZodLiteral<"USDC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Ethereum";
                asset: "USDC";
            }, {
                chain: "Ethereum";
                asset: "USDC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Ethereum">;
                asset: z.ZodLiteral<"USDT">;
            }, "strip", z.ZodTypeAny, {
                chain: "Ethereum";
                asset: "USDT";
            }, {
                chain: "Ethereum";
                asset: "USDT";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Arbitrum">;
                asset: z.ZodLiteral<"ETH">;
            }, "strip", z.ZodTypeAny, {
                chain: "Arbitrum";
                asset: "ETH";
            }, {
                chain: "Arbitrum";
                asset: "ETH";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Arbitrum">;
                asset: z.ZodLiteral<"USDC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Arbitrum";
                asset: "USDC";
            }, {
                chain: "Arbitrum";
                asset: "USDC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Solana">;
                asset: z.ZodLiteral<"SOL">;
            }, "strip", z.ZodTypeAny, {
                chain: "Solana";
                asset: "SOL";
            }, {
                chain: "Solana";
                asset: "SOL";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Solana">;
                asset: z.ZodLiteral<"USDC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Solana";
                asset: "USDC";
            }, {
                chain: "Solana";
                asset: "USDC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Assethub">;
                asset: z.ZodLiteral<"DOT">;
            }, "strip", z.ZodTypeAny, {
                chain: "Assethub";
                asset: "DOT";
            }, {
                chain: "Assethub";
                asset: "DOT";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Assethub">;
                asset: z.ZodLiteral<"USDC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Assethub";
                asset: "USDC";
            }, {
                chain: "Assethub";
                asset: "USDC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Assethub">;
                asset: z.ZodLiteral<"USDT">;
            }, "strip", z.ZodTypeAny, {
                chain: "Assethub";
                asset: "USDT";
            }, {
                chain: "Assethub";
                asset: "USDT";
            }>]>;
        }, "strip", z.ZodTypeAny, {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            spread_tick: number;
        }, {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            spread_tick: number;
        }>;
    }, "strip", z.ZodTypeAny, {
        TickZeroCentered: {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            spread_tick: number;
        };
    }, {
        TickZeroCentered: {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            spread_tick: number;
        };
    }>, z.ZodObject<{
        SimpleBuySell: z.ZodObject<{
            buy_tick: z.ZodNumber;
            sell_tick: z.ZodNumber;
            base_asset: z.ZodUnion<[z.ZodObject<{
                chain: z.ZodLiteral<"Bitcoin">;
                asset: z.ZodLiteral<"BTC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Bitcoin";
                asset: "BTC";
            }, {
                chain: "Bitcoin";
                asset: "BTC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Polkadot">;
                asset: z.ZodLiteral<"DOT">;
            }, "strip", z.ZodTypeAny, {
                chain: "Polkadot";
                asset: "DOT";
            }, {
                chain: "Polkadot";
                asset: "DOT";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Ethereum">;
                asset: z.ZodLiteral<"FLIP">;
            }, "strip", z.ZodTypeAny, {
                chain: "Ethereum";
                asset: "FLIP";
            }, {
                chain: "Ethereum";
                asset: "FLIP";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Ethereum">;
                asset: z.ZodLiteral<"ETH">;
            }, "strip", z.ZodTypeAny, {
                chain: "Ethereum";
                asset: "ETH";
            }, {
                chain: "Ethereum";
                asset: "ETH";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Ethereum">;
                asset: z.ZodLiteral<"USDC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Ethereum";
                asset: "USDC";
            }, {
                chain: "Ethereum";
                asset: "USDC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Ethereum">;
                asset: z.ZodLiteral<"USDT">;
            }, "strip", z.ZodTypeAny, {
                chain: "Ethereum";
                asset: "USDT";
            }, {
                chain: "Ethereum";
                asset: "USDT";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Arbitrum">;
                asset: z.ZodLiteral<"ETH">;
            }, "strip", z.ZodTypeAny, {
                chain: "Arbitrum";
                asset: "ETH";
            }, {
                chain: "Arbitrum";
                asset: "ETH";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Arbitrum">;
                asset: z.ZodLiteral<"USDC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Arbitrum";
                asset: "USDC";
            }, {
                chain: "Arbitrum";
                asset: "USDC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Solana">;
                asset: z.ZodLiteral<"SOL">;
            }, "strip", z.ZodTypeAny, {
                chain: "Solana";
                asset: "SOL";
            }, {
                chain: "Solana";
                asset: "SOL";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Solana">;
                asset: z.ZodLiteral<"USDC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Solana";
                asset: "USDC";
            }, {
                chain: "Solana";
                asset: "USDC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Assethub">;
                asset: z.ZodLiteral<"DOT">;
            }, "strip", z.ZodTypeAny, {
                chain: "Assethub";
                asset: "DOT";
            }, {
                chain: "Assethub";
                asset: "DOT";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Assethub">;
                asset: z.ZodLiteral<"USDC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Assethub";
                asset: "USDC";
            }, {
                chain: "Assethub";
                asset: "USDC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Assethub">;
                asset: z.ZodLiteral<"USDT">;
            }, "strip", z.ZodTypeAny, {
                chain: "Assethub";
                asset: "USDT";
            }, {
                chain: "Assethub";
                asset: "USDT";
            }>]>;
        }, "strip", z.ZodTypeAny, {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            buy_tick: number;
            sell_tick: number;
        }, {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            buy_tick: number;
            sell_tick: number;
        }>;
    }, "strip", z.ZodTypeAny, {
        SimpleBuySell: {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            buy_tick: number;
            sell_tick: number;
        };
    }, {
        SimpleBuySell: {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            buy_tick: number;
            sell_tick: number;
        };
    }>, z.ZodObject<{
        InventoryBased: z.ZodObject<{
            min_buy_tick: z.ZodNumber;
            max_buy_tick: z.ZodNumber;
            min_sell_tick: z.ZodNumber;
            max_sell_tick: z.ZodNumber;
            base_asset: z.ZodUnion<[z.ZodObject<{
                chain: z.ZodLiteral<"Bitcoin">;
                asset: z.ZodLiteral<"BTC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Bitcoin";
                asset: "BTC";
            }, {
                chain: "Bitcoin";
                asset: "BTC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Polkadot">;
                asset: z.ZodLiteral<"DOT">;
            }, "strip", z.ZodTypeAny, {
                chain: "Polkadot";
                asset: "DOT";
            }, {
                chain: "Polkadot";
                asset: "DOT";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Ethereum">;
                asset: z.ZodLiteral<"FLIP">;
            }, "strip", z.ZodTypeAny, {
                chain: "Ethereum";
                asset: "FLIP";
            }, {
                chain: "Ethereum";
                asset: "FLIP";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Ethereum">;
                asset: z.ZodLiteral<"ETH">;
            }, "strip", z.ZodTypeAny, {
                chain: "Ethereum";
                asset: "ETH";
            }, {
                chain: "Ethereum";
                asset: "ETH";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Ethereum">;
                asset: z.ZodLiteral<"USDC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Ethereum";
                asset: "USDC";
            }, {
                chain: "Ethereum";
                asset: "USDC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Ethereum">;
                asset: z.ZodLiteral<"USDT">;
            }, "strip", z.ZodTypeAny, {
                chain: "Ethereum";
                asset: "USDT";
            }, {
                chain: "Ethereum";
                asset: "USDT";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Arbitrum">;
                asset: z.ZodLiteral<"ETH">;
            }, "strip", z.ZodTypeAny, {
                chain: "Arbitrum";
                asset: "ETH";
            }, {
                chain: "Arbitrum";
                asset: "ETH";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Arbitrum">;
                asset: z.ZodLiteral<"USDC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Arbitrum";
                asset: "USDC";
            }, {
                chain: "Arbitrum";
                asset: "USDC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Solana">;
                asset: z.ZodLiteral<"SOL">;
            }, "strip", z.ZodTypeAny, {
                chain: "Solana";
                asset: "SOL";
            }, {
                chain: "Solana";
                asset: "SOL";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Solana">;
                asset: z.ZodLiteral<"USDC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Solana";
                asset: "USDC";
            }, {
                chain: "Solana";
                asset: "USDC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Assethub">;
                asset: z.ZodLiteral<"DOT">;
            }, "strip", z.ZodTypeAny, {
                chain: "Assethub";
                asset: "DOT";
            }, {
                chain: "Assethub";
                asset: "DOT";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Assethub">;
                asset: z.ZodLiteral<"USDC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Assethub";
                asset: "USDC";
            }, {
                chain: "Assethub";
                asset: "USDC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Assethub">;
                asset: z.ZodLiteral<"USDT">;
            }, "strip", z.ZodTypeAny, {
                chain: "Assethub";
                asset: "USDT";
            }, {
                chain: "Assethub";
                asset: "USDT";
            }>]>;
        }, "strip", z.ZodTypeAny, {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            min_buy_tick: number;
            max_buy_tick: number;
            min_sell_tick: number;
            max_sell_tick: number;
        }, {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            min_buy_tick: number;
            max_buy_tick: number;
            min_sell_tick: number;
            max_sell_tick: number;
        }>;
    }, "strip", z.ZodTypeAny, {
        InventoryBased: {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            min_buy_tick: number;
            max_buy_tick: number;
            min_sell_tick: number;
            max_sell_tick: number;
        };
    }, {
        InventoryBased: {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            min_buy_tick: number;
            max_buy_tick: number;
            min_sell_tick: number;
            max_sell_tick: number;
        };
    }>]>;
    balance: z.ZodArray<z.ZodTuple<[z.ZodUnion<[z.ZodObject<{
        chain: z.ZodLiteral<"Bitcoin">;
        asset: z.ZodLiteral<"BTC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Bitcoin";
        asset: "BTC";
    }, {
        chain: "Bitcoin";
        asset: "BTC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Polkadot">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Polkadot";
        asset: "DOT";
    }, {
        chain: "Polkadot";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"FLIP">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "FLIP";
    }, {
        chain: "Ethereum";
        asset: "FLIP";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "ETH";
    }, {
        chain: "Ethereum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDC";
    }, {
        chain: "Ethereum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDT";
    }, {
        chain: "Ethereum";
        asset: "USDT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "ETH";
    }, {
        chain: "Arbitrum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "USDC";
    }, {
        chain: "Arbitrum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"SOL">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "SOL";
    }, {
        chain: "Solana";
        asset: "SOL";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "USDC";
    }, {
        chain: "Solana";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "DOT";
    }, {
        chain: "Assethub";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDC";
    }, {
        chain: "Assethub";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDT";
    }, {
        chain: "Assethub";
        asset: "USDT";
    }>]>, z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>], null>, "many">;
}, "strip", z.ZodTypeAny, {
    lp_id: string;
    strategy_id: string;
    strategy: {
        TickZeroCentered: {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            spread_tick: number;
        };
    } | {
        SimpleBuySell: {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            buy_tick: number;
            sell_tick: number;
        };
    } | {
        InventoryBased: {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            min_buy_tick: number;
            max_buy_tick: number;
            min_sell_tick: number;
            max_sell_tick: number;
        };
    };
    balance: [{
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }, bigint][];
}, {
    lp_id: string;
    strategy_id: string;
    strategy: {
        TickZeroCentered: {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            spread_tick: number;
        };
    } | {
        SimpleBuySell: {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            buy_tick: number;
            sell_tick: number;
        };
    } | {
        InventoryBased: {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            min_buy_tick: number;
            max_buy_tick: number;
            min_sell_tick: number;
            max_sell_tick: number;
        };
    };
    balance: [{
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }, string | number][];
}>;
declare const cfGetTradingStrategies: z.ZodDefault<z.ZodArray<z.ZodObject<{
    lp_id: z.ZodString;
    strategy_id: z.ZodString;
    strategy: z.ZodUnion<[z.ZodObject<{
        TickZeroCentered: z.ZodObject<{
            spread_tick: z.ZodNumber;
            base_asset: z.ZodUnion<[z.ZodObject<{
                chain: z.ZodLiteral<"Bitcoin">;
                asset: z.ZodLiteral<"BTC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Bitcoin";
                asset: "BTC";
            }, {
                chain: "Bitcoin";
                asset: "BTC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Polkadot">;
                asset: z.ZodLiteral<"DOT">;
            }, "strip", z.ZodTypeAny, {
                chain: "Polkadot";
                asset: "DOT";
            }, {
                chain: "Polkadot";
                asset: "DOT";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Ethereum">;
                asset: z.ZodLiteral<"FLIP">;
            }, "strip", z.ZodTypeAny, {
                chain: "Ethereum";
                asset: "FLIP";
            }, {
                chain: "Ethereum";
                asset: "FLIP";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Ethereum">;
                asset: z.ZodLiteral<"ETH">;
            }, "strip", z.ZodTypeAny, {
                chain: "Ethereum";
                asset: "ETH";
            }, {
                chain: "Ethereum";
                asset: "ETH";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Ethereum">;
                asset: z.ZodLiteral<"USDC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Ethereum";
                asset: "USDC";
            }, {
                chain: "Ethereum";
                asset: "USDC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Ethereum">;
                asset: z.ZodLiteral<"USDT">;
            }, "strip", z.ZodTypeAny, {
                chain: "Ethereum";
                asset: "USDT";
            }, {
                chain: "Ethereum";
                asset: "USDT";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Arbitrum">;
                asset: z.ZodLiteral<"ETH">;
            }, "strip", z.ZodTypeAny, {
                chain: "Arbitrum";
                asset: "ETH";
            }, {
                chain: "Arbitrum";
                asset: "ETH";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Arbitrum">;
                asset: z.ZodLiteral<"USDC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Arbitrum";
                asset: "USDC";
            }, {
                chain: "Arbitrum";
                asset: "USDC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Solana">;
                asset: z.ZodLiteral<"SOL">;
            }, "strip", z.ZodTypeAny, {
                chain: "Solana";
                asset: "SOL";
            }, {
                chain: "Solana";
                asset: "SOL";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Solana">;
                asset: z.ZodLiteral<"USDC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Solana";
                asset: "USDC";
            }, {
                chain: "Solana";
                asset: "USDC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Assethub">;
                asset: z.ZodLiteral<"DOT">;
            }, "strip", z.ZodTypeAny, {
                chain: "Assethub";
                asset: "DOT";
            }, {
                chain: "Assethub";
                asset: "DOT";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Assethub">;
                asset: z.ZodLiteral<"USDC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Assethub";
                asset: "USDC";
            }, {
                chain: "Assethub";
                asset: "USDC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Assethub">;
                asset: z.ZodLiteral<"USDT">;
            }, "strip", z.ZodTypeAny, {
                chain: "Assethub";
                asset: "USDT";
            }, {
                chain: "Assethub";
                asset: "USDT";
            }>]>;
        }, "strip", z.ZodTypeAny, {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            spread_tick: number;
        }, {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            spread_tick: number;
        }>;
    }, "strip", z.ZodTypeAny, {
        TickZeroCentered: {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            spread_tick: number;
        };
    }, {
        TickZeroCentered: {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            spread_tick: number;
        };
    }>, z.ZodObject<{
        SimpleBuySell: z.ZodObject<{
            buy_tick: z.ZodNumber;
            sell_tick: z.ZodNumber;
            base_asset: z.ZodUnion<[z.ZodObject<{
                chain: z.ZodLiteral<"Bitcoin">;
                asset: z.ZodLiteral<"BTC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Bitcoin";
                asset: "BTC";
            }, {
                chain: "Bitcoin";
                asset: "BTC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Polkadot">;
                asset: z.ZodLiteral<"DOT">;
            }, "strip", z.ZodTypeAny, {
                chain: "Polkadot";
                asset: "DOT";
            }, {
                chain: "Polkadot";
                asset: "DOT";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Ethereum">;
                asset: z.ZodLiteral<"FLIP">;
            }, "strip", z.ZodTypeAny, {
                chain: "Ethereum";
                asset: "FLIP";
            }, {
                chain: "Ethereum";
                asset: "FLIP";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Ethereum">;
                asset: z.ZodLiteral<"ETH">;
            }, "strip", z.ZodTypeAny, {
                chain: "Ethereum";
                asset: "ETH";
            }, {
                chain: "Ethereum";
                asset: "ETH";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Ethereum">;
                asset: z.ZodLiteral<"USDC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Ethereum";
                asset: "USDC";
            }, {
                chain: "Ethereum";
                asset: "USDC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Ethereum">;
                asset: z.ZodLiteral<"USDT">;
            }, "strip", z.ZodTypeAny, {
                chain: "Ethereum";
                asset: "USDT";
            }, {
                chain: "Ethereum";
                asset: "USDT";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Arbitrum">;
                asset: z.ZodLiteral<"ETH">;
            }, "strip", z.ZodTypeAny, {
                chain: "Arbitrum";
                asset: "ETH";
            }, {
                chain: "Arbitrum";
                asset: "ETH";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Arbitrum">;
                asset: z.ZodLiteral<"USDC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Arbitrum";
                asset: "USDC";
            }, {
                chain: "Arbitrum";
                asset: "USDC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Solana">;
                asset: z.ZodLiteral<"SOL">;
            }, "strip", z.ZodTypeAny, {
                chain: "Solana";
                asset: "SOL";
            }, {
                chain: "Solana";
                asset: "SOL";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Solana">;
                asset: z.ZodLiteral<"USDC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Solana";
                asset: "USDC";
            }, {
                chain: "Solana";
                asset: "USDC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Assethub">;
                asset: z.ZodLiteral<"DOT">;
            }, "strip", z.ZodTypeAny, {
                chain: "Assethub";
                asset: "DOT";
            }, {
                chain: "Assethub";
                asset: "DOT";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Assethub">;
                asset: z.ZodLiteral<"USDC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Assethub";
                asset: "USDC";
            }, {
                chain: "Assethub";
                asset: "USDC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Assethub">;
                asset: z.ZodLiteral<"USDT">;
            }, "strip", z.ZodTypeAny, {
                chain: "Assethub";
                asset: "USDT";
            }, {
                chain: "Assethub";
                asset: "USDT";
            }>]>;
        }, "strip", z.ZodTypeAny, {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            buy_tick: number;
            sell_tick: number;
        }, {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            buy_tick: number;
            sell_tick: number;
        }>;
    }, "strip", z.ZodTypeAny, {
        SimpleBuySell: {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            buy_tick: number;
            sell_tick: number;
        };
    }, {
        SimpleBuySell: {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            buy_tick: number;
            sell_tick: number;
        };
    }>, z.ZodObject<{
        InventoryBased: z.ZodObject<{
            min_buy_tick: z.ZodNumber;
            max_buy_tick: z.ZodNumber;
            min_sell_tick: z.ZodNumber;
            max_sell_tick: z.ZodNumber;
            base_asset: z.ZodUnion<[z.ZodObject<{
                chain: z.ZodLiteral<"Bitcoin">;
                asset: z.ZodLiteral<"BTC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Bitcoin";
                asset: "BTC";
            }, {
                chain: "Bitcoin";
                asset: "BTC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Polkadot">;
                asset: z.ZodLiteral<"DOT">;
            }, "strip", z.ZodTypeAny, {
                chain: "Polkadot";
                asset: "DOT";
            }, {
                chain: "Polkadot";
                asset: "DOT";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Ethereum">;
                asset: z.ZodLiteral<"FLIP">;
            }, "strip", z.ZodTypeAny, {
                chain: "Ethereum";
                asset: "FLIP";
            }, {
                chain: "Ethereum";
                asset: "FLIP";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Ethereum">;
                asset: z.ZodLiteral<"ETH">;
            }, "strip", z.ZodTypeAny, {
                chain: "Ethereum";
                asset: "ETH";
            }, {
                chain: "Ethereum";
                asset: "ETH";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Ethereum">;
                asset: z.ZodLiteral<"USDC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Ethereum";
                asset: "USDC";
            }, {
                chain: "Ethereum";
                asset: "USDC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Ethereum">;
                asset: z.ZodLiteral<"USDT">;
            }, "strip", z.ZodTypeAny, {
                chain: "Ethereum";
                asset: "USDT";
            }, {
                chain: "Ethereum";
                asset: "USDT";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Arbitrum">;
                asset: z.ZodLiteral<"ETH">;
            }, "strip", z.ZodTypeAny, {
                chain: "Arbitrum";
                asset: "ETH";
            }, {
                chain: "Arbitrum";
                asset: "ETH";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Arbitrum">;
                asset: z.ZodLiteral<"USDC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Arbitrum";
                asset: "USDC";
            }, {
                chain: "Arbitrum";
                asset: "USDC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Solana">;
                asset: z.ZodLiteral<"SOL">;
            }, "strip", z.ZodTypeAny, {
                chain: "Solana";
                asset: "SOL";
            }, {
                chain: "Solana";
                asset: "SOL";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Solana">;
                asset: z.ZodLiteral<"USDC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Solana";
                asset: "USDC";
            }, {
                chain: "Solana";
                asset: "USDC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Assethub">;
                asset: z.ZodLiteral<"DOT">;
            }, "strip", z.ZodTypeAny, {
                chain: "Assethub";
                asset: "DOT";
            }, {
                chain: "Assethub";
                asset: "DOT";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Assethub">;
                asset: z.ZodLiteral<"USDC">;
            }, "strip", z.ZodTypeAny, {
                chain: "Assethub";
                asset: "USDC";
            }, {
                chain: "Assethub";
                asset: "USDC";
            }>, z.ZodObject<{
                chain: z.ZodLiteral<"Assethub">;
                asset: z.ZodLiteral<"USDT">;
            }, "strip", z.ZodTypeAny, {
                chain: "Assethub";
                asset: "USDT";
            }, {
                chain: "Assethub";
                asset: "USDT";
            }>]>;
        }, "strip", z.ZodTypeAny, {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            min_buy_tick: number;
            max_buy_tick: number;
            min_sell_tick: number;
            max_sell_tick: number;
        }, {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            min_buy_tick: number;
            max_buy_tick: number;
            min_sell_tick: number;
            max_sell_tick: number;
        }>;
    }, "strip", z.ZodTypeAny, {
        InventoryBased: {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            min_buy_tick: number;
            max_buy_tick: number;
            min_sell_tick: number;
            max_sell_tick: number;
        };
    }, {
        InventoryBased: {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            min_buy_tick: number;
            max_buy_tick: number;
            min_sell_tick: number;
            max_sell_tick: number;
        };
    }>]>;
    balance: z.ZodArray<z.ZodTuple<[z.ZodUnion<[z.ZodObject<{
        chain: z.ZodLiteral<"Bitcoin">;
        asset: z.ZodLiteral<"BTC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Bitcoin";
        asset: "BTC";
    }, {
        chain: "Bitcoin";
        asset: "BTC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Polkadot">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Polkadot";
        asset: "DOT";
    }, {
        chain: "Polkadot";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"FLIP">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "FLIP";
    }, {
        chain: "Ethereum";
        asset: "FLIP";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "ETH";
    }, {
        chain: "Ethereum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDC";
    }, {
        chain: "Ethereum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDT";
    }, {
        chain: "Ethereum";
        asset: "USDT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "ETH";
    }, {
        chain: "Arbitrum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "USDC";
    }, {
        chain: "Arbitrum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"SOL">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "SOL";
    }, {
        chain: "Solana";
        asset: "SOL";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "USDC";
    }, {
        chain: "Solana";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "DOT";
    }, {
        chain: "Assethub";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDC";
    }, {
        chain: "Assethub";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDT";
    }, {
        chain: "Assethub";
        asset: "USDT";
    }>]>, z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>], null>, "many">;
}, "strip", z.ZodTypeAny, {
    lp_id: string;
    strategy_id: string;
    strategy: {
        TickZeroCentered: {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            spread_tick: number;
        };
    } | {
        SimpleBuySell: {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            buy_tick: number;
            sell_tick: number;
        };
    } | {
        InventoryBased: {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            min_buy_tick: number;
            max_buy_tick: number;
            min_sell_tick: number;
            max_sell_tick: number;
        };
    };
    balance: [{
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }, bigint][];
}, {
    lp_id: string;
    strategy_id: string;
    strategy: {
        TickZeroCentered: {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            spread_tick: number;
        };
    } | {
        SimpleBuySell: {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            buy_tick: number;
            sell_tick: number;
        };
    } | {
        InventoryBased: {
            base_asset: {
                chain: "Bitcoin";
                asset: "BTC";
            } | {
                chain: "Polkadot";
                asset: "DOT";
            } | {
                chain: "Ethereum";
                asset: "FLIP";
            } | {
                chain: "Ethereum";
                asset: "ETH";
            } | {
                chain: "Ethereum";
                asset: "USDC";
            } | {
                chain: "Ethereum";
                asset: "USDT";
            } | {
                chain: "Arbitrum";
                asset: "ETH";
            } | {
                chain: "Arbitrum";
                asset: "USDC";
            } | {
                chain: "Solana";
                asset: "SOL";
            } | {
                chain: "Solana";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "DOT";
            } | {
                chain: "Assethub";
                asset: "USDC";
            } | {
                chain: "Assethub";
                asset: "USDT";
            };
            min_buy_tick: number;
            max_buy_tick: number;
            min_sell_tick: number;
            max_sell_tick: number;
        };
    };
    balance: [{
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }, string | number][];
}>, "many">>;
declare const cfGetTradingStrategyLimits: z.ZodObject<{
    minimum_deployment_amount: z.ZodObject<Omit<{
        Bitcoin: z.ZodObject<{
            BTC: z.ZodNullable<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            BTC: number | null;
        }, {
            BTC: number | null;
        }>;
        Ethereum: z.ZodObject<{
            ETH: z.ZodNullable<z.ZodNumber>;
            USDC: z.ZodNullable<z.ZodNumber>;
            FLIP: z.ZodNullable<z.ZodNumber>;
            USDT: z.ZodNullable<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            ETH: number | null;
            USDC: number | null;
            FLIP: number | null;
            USDT: number | null;
        }, {
            ETH: number | null;
            USDC: number | null;
            FLIP: number | null;
            USDT: number | null;
        }>;
        Polkadot: z.ZodObject<{
            DOT: z.ZodNullable<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            DOT: number | null;
        }, {
            DOT: number | null;
        }>;
        Arbitrum: z.ZodObject<{
            ETH: z.ZodNullable<z.ZodNumber>;
            USDC: z.ZodNullable<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            ETH: number | null;
            USDC: number | null;
        }, {
            ETH: number | null;
            USDC: number | null;
        }>;
        Solana: z.ZodObject<{
            SOL: z.ZodNullable<z.ZodNumber>;
            USDC: z.ZodNullable<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            USDC: number | null;
            SOL: number | null;
        }, {
            USDC: number | null;
            SOL: number | null;
        }>;
        Assethub: z.ZodObject<{
            DOT: z.ZodNullable<z.ZodNumber>;
            USDC: z.ZodNullable<z.ZodNumber>;
            USDT: z.ZodNullable<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            USDC: number | null;
            USDT: number | null;
            DOT: number | null;
        }, {
            USDC: number | null;
            USDT: number | null;
            DOT: number | null;
        }>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: {
            BTC: number | null;
        };
        Ethereum: {
            ETH: number | null;
            USDC: number | null;
            FLIP: number | null;
            USDT: number | null;
        };
        Arbitrum: {
            ETH: number | null;
            USDC: number | null;
        };
        Solana: {
            USDC: number | null;
            SOL: number | null;
        };
        Assethub: {
            USDC: number | null;
            USDT: number | null;
            DOT: number | null;
        };
    }, {
        Bitcoin: {
            BTC: number | null;
        };
        Ethereum: {
            ETH: number | null;
            USDC: number | null;
            FLIP: number | null;
            USDT: number | null;
        };
        Arbitrum: {
            ETH: number | null;
            USDC: number | null;
        };
        Solana: {
            USDC: number | null;
            SOL: number | null;
        };
        Assethub: {
            USDC: number | null;
            USDT: number | null;
            DOT: number | null;
        };
    }>;
    minimum_added_funds_amount: z.ZodObject<Omit<{
        Bitcoin: z.ZodObject<{
            BTC: z.ZodNullable<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            BTC: number | null;
        }, {
            BTC: number | null;
        }>;
        Ethereum: z.ZodObject<{
            ETH: z.ZodNullable<z.ZodNumber>;
            USDC: z.ZodNullable<z.ZodNumber>;
            FLIP: z.ZodNullable<z.ZodNumber>;
            USDT: z.ZodNullable<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            ETH: number | null;
            USDC: number | null;
            FLIP: number | null;
            USDT: number | null;
        }, {
            ETH: number | null;
            USDC: number | null;
            FLIP: number | null;
            USDT: number | null;
        }>;
        Polkadot: z.ZodObject<{
            DOT: z.ZodNullable<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            DOT: number | null;
        }, {
            DOT: number | null;
        }>;
        Arbitrum: z.ZodObject<{
            ETH: z.ZodNullable<z.ZodNumber>;
            USDC: z.ZodNullable<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            ETH: number | null;
            USDC: number | null;
        }, {
            ETH: number | null;
            USDC: number | null;
        }>;
        Solana: z.ZodObject<{
            SOL: z.ZodNullable<z.ZodNumber>;
            USDC: z.ZodNullable<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            USDC: number | null;
            SOL: number | null;
        }, {
            USDC: number | null;
            SOL: number | null;
        }>;
        Assethub: z.ZodObject<{
            DOT: z.ZodNullable<z.ZodNumber>;
            USDC: z.ZodNullable<z.ZodNumber>;
            USDT: z.ZodNullable<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            USDC: number | null;
            USDT: number | null;
            DOT: number | null;
        }, {
            USDC: number | null;
            USDT: number | null;
            DOT: number | null;
        }>;
    }, "Polkadot">, "strip", z.ZodTypeAny, {
        Bitcoin: {
            BTC: number | null;
        };
        Ethereum: {
            ETH: number | null;
            USDC: number | null;
            FLIP: number | null;
            USDT: number | null;
        };
        Arbitrum: {
            ETH: number | null;
            USDC: number | null;
        };
        Solana: {
            USDC: number | null;
            SOL: number | null;
        };
        Assethub: {
            USDC: number | null;
            USDT: number | null;
            DOT: number | null;
        };
    }, {
        Bitcoin: {
            BTC: number | null;
        };
        Ethereum: {
            ETH: number | null;
            USDC: number | null;
            FLIP: number | null;
            USDT: number | null;
        };
        Arbitrum: {
            ETH: number | null;
            USDC: number | null;
        };
        Solana: {
            USDC: number | null;
            SOL: number | null;
        };
        Assethub: {
            USDC: number | null;
            USDT: number | null;
            DOT: number | null;
        };
    }>;
}, "strip", z.ZodTypeAny, {
    minimum_deployment_amount: {
        Bitcoin: {
            BTC: number | null;
        };
        Ethereum: {
            ETH: number | null;
            USDC: number | null;
            FLIP: number | null;
            USDT: number | null;
        };
        Arbitrum: {
            ETH: number | null;
            USDC: number | null;
        };
        Solana: {
            USDC: number | null;
            SOL: number | null;
        };
        Assethub: {
            USDC: number | null;
            USDT: number | null;
            DOT: number | null;
        };
    };
    minimum_added_funds_amount: {
        Bitcoin: {
            BTC: number | null;
        };
        Ethereum: {
            ETH: number | null;
            USDC: number | null;
            FLIP: number | null;
            USDT: number | null;
        };
        Arbitrum: {
            ETH: number | null;
            USDC: number | null;
        };
        Solana: {
            USDC: number | null;
            SOL: number | null;
        };
        Assethub: {
            USDC: number | null;
            USDT: number | null;
            DOT: number | null;
        };
    };
}, {
    minimum_deployment_amount: {
        Bitcoin: {
            BTC: number | null;
        };
        Ethereum: {
            ETH: number | null;
            USDC: number | null;
            FLIP: number | null;
            USDT: number | null;
        };
        Arbitrum: {
            ETH: number | null;
            USDC: number | null;
        };
        Solana: {
            USDC: number | null;
            SOL: number | null;
        };
        Assethub: {
            USDC: number | null;
            USDT: number | null;
            DOT: number | null;
        };
    };
    minimum_added_funds_amount: {
        Bitcoin: {
            BTC: number | null;
        };
        Ethereum: {
            ETH: number | null;
            USDC: number | null;
            FLIP: number | null;
            USDT: number | null;
        };
        Arbitrum: {
            ETH: number | null;
            USDC: number | null;
        };
        Solana: {
            USDC: number | null;
            SOL: number | null;
        };
        Assethub: {
            USDC: number | null;
            USDT: number | null;
            DOT: number | null;
        };
    };
}>;
declare const cfAvailablePools: z.ZodArray<z.ZodObject<{
    base: z.ZodEffects<z.ZodUnion<[z.ZodObject<{
        chain: z.ZodLiteral<"Bitcoin">;
        asset: z.ZodLiteral<"BTC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Bitcoin";
        asset: "BTC";
    }, {
        chain: "Bitcoin";
        asset: "BTC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Polkadot">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Polkadot";
        asset: "DOT";
    }, {
        chain: "Polkadot";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"FLIP">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "FLIP";
    }, {
        chain: "Ethereum";
        asset: "FLIP";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "ETH";
    }, {
        chain: "Ethereum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDC";
    }, {
        chain: "Ethereum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDT";
    }, {
        chain: "Ethereum";
        asset: "USDT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "ETH";
    }, {
        chain: "Arbitrum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "USDC";
    }, {
        chain: "Arbitrum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"SOL">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "SOL";
    }, {
        chain: "Solana";
        asset: "SOL";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "USDC";
    }, {
        chain: "Solana";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "DOT";
    }, {
        chain: "Assethub";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDC";
    }, {
        chain: "Assethub";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDT";
    }, {
        chain: "Assethub";
        asset: "USDT";
    }>]>, {
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }, {
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }>;
    quote: z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDC";
    }, {
        chain: "Ethereum";
        asset: "USDC";
    }>;
}, "strip", z.ZodTypeAny, {
    base: {
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    };
    quote: {
        chain: "Ethereum";
        asset: "USDC";
    };
}, {
    base: {
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    };
    quote: {
        chain: "Ethereum";
        asset: "USDC";
    };
}>, "many">;
declare const cfOraclePrices: z.ZodArray<z.ZodObject<{
    price: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    updated_at_oracle_timestamp: z.ZodNumber;
    updated_at_statechain_block: z.ZodNumber;
    base_asset: z.ZodEnum<["Btc", "Eth", "Sol", "Usdc", "Usdt", "Usd"]>;
    quote_asset: z.ZodEnum<["Btc", "Eth", "Sol", "Usdc", "Usdt", "Usd"]>;
}, "strip", z.ZodTypeAny, {
    price: bigint;
    quote_asset: "Btc" | "Eth" | "Sol" | "Usdc" | "Usdt" | "Usd";
    base_asset: "Btc" | "Eth" | "Sol" | "Usdc" | "Usdt" | "Usd";
    updated_at_oracle_timestamp: number;
    updated_at_statechain_block: number;
}, {
    price: string | number;
    quote_asset: "Btc" | "Eth" | "Sol" | "Usdc" | "Usdt" | "Usd";
    base_asset: "Btc" | "Eth" | "Sol" | "Usdc" | "Usdt" | "Usd";
    updated_at_oracle_timestamp: number;
    updated_at_statechain_block: number;
}>, "many">;
declare const cfSafeModeStatuses: z.ZodObject<{
    emissions: z.ZodObject<{
        emissions_sync_enabled: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        emissions_sync_enabled: boolean;
    }, {
        emissions_sync_enabled: boolean;
    }>;
    funding: z.ZodObject<{
        redeem_enabled: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        redeem_enabled: boolean;
    }, {
        redeem_enabled: boolean;
    }>;
    swapping: z.ZodObject<{
        swaps_enabled: z.ZodBoolean;
        withdrawals_enabled: z.ZodBoolean;
        broker_registration_enabled: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        swaps_enabled: boolean;
        withdrawals_enabled: boolean;
        broker_registration_enabled: boolean;
    }, {
        swaps_enabled: boolean;
        withdrawals_enabled: boolean;
        broker_registration_enabled: boolean;
    }>;
    liquidity_provider: z.ZodObject<{
        deposit_enabled: z.ZodBoolean;
        withdrawal_enabled: z.ZodBoolean;
        internal_swaps_enabled: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        deposit_enabled: boolean;
        withdrawal_enabled: boolean;
        internal_swaps_enabled: boolean;
    }, {
        deposit_enabled: boolean;
        withdrawal_enabled: boolean;
        internal_swaps_enabled: boolean;
    }>;
    validator: z.ZodObject<{
        authority_rotation_enabled: z.ZodBoolean;
        start_bidding_enabled: z.ZodBoolean;
        stop_bidding_enabled: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        authority_rotation_enabled: boolean;
        start_bidding_enabled: boolean;
        stop_bidding_enabled: boolean;
    }, {
        authority_rotation_enabled: boolean;
        start_bidding_enabled: boolean;
        stop_bidding_enabled: boolean;
    }>;
    pools: z.ZodObject<{
        range_order_update_enabled: z.ZodBoolean;
        limit_order_update_enabled: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        range_order_update_enabled: boolean;
        limit_order_update_enabled: boolean;
    }, {
        range_order_update_enabled: boolean;
        limit_order_update_enabled: boolean;
    }>;
    trading_strategies: z.ZodObject<{
        strategy_updates_enabled: z.ZodBoolean;
        strategy_closure_enabled: z.ZodBoolean;
        strategy_execution_enabled: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        strategy_updates_enabled: boolean;
        strategy_closure_enabled: boolean;
        strategy_execution_enabled: boolean;
    }, {
        strategy_updates_enabled: boolean;
        strategy_closure_enabled: boolean;
        strategy_execution_enabled: boolean;
    }>;
    reputation: z.ZodObject<{
        reporting_enabled: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        reporting_enabled: boolean;
    }, {
        reporting_enabled: boolean;
    }>;
    asset_balances: z.ZodObject<{
        reconciliation_enabled: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        reconciliation_enabled: boolean;
    }, {
        reconciliation_enabled: boolean;
    }>;
    threshold_signature_evm: z.ZodObject<{
        slashing_enabled: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        slashing_enabled: boolean;
    }, {
        slashing_enabled: boolean;
    }>;
    threshold_signature_bitcoin: z.ZodObject<{
        slashing_enabled: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        slashing_enabled: boolean;
    }, {
        slashing_enabled: boolean;
    }>;
    threshold_signature_polkadot: z.ZodObject<{
        slashing_enabled: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        slashing_enabled: boolean;
    }, {
        slashing_enabled: boolean;
    }>;
    threshold_signature_solana: z.ZodObject<{
        slashing_enabled: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        slashing_enabled: boolean;
    }, {
        slashing_enabled: boolean;
    }>;
    lending_pools: z.ZodObject<{
        add_boost_funds_enabled: z.ZodBoolean;
        stop_boosting_enabled: z.ZodBoolean;
        borrowing_enabled: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodObject<{
            chain: z.ZodLiteral<"Bitcoin">;
            asset: z.ZodLiteral<"BTC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Bitcoin";
            asset: "BTC";
        }, {
            chain: "Bitcoin";
            asset: "BTC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Polkadot">;
            asset: z.ZodLiteral<"DOT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Polkadot";
            asset: "DOT";
        }, {
            chain: "Polkadot";
            asset: "DOT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"FLIP">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "FLIP";
        }, {
            chain: "Ethereum";
            asset: "FLIP";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"ETH">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "ETH";
        }, {
            chain: "Ethereum";
            asset: "ETH";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "USDC";
        }, {
            chain: "Ethereum";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"USDT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "USDT";
        }, {
            chain: "Ethereum";
            asset: "USDT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Arbitrum">;
            asset: z.ZodLiteral<"ETH">;
        }, "strip", z.ZodTypeAny, {
            chain: "Arbitrum";
            asset: "ETH";
        }, {
            chain: "Arbitrum";
            asset: "ETH";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Arbitrum">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Arbitrum";
            asset: "USDC";
        }, {
            chain: "Arbitrum";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Solana">;
            asset: z.ZodLiteral<"SOL">;
        }, "strip", z.ZodTypeAny, {
            chain: "Solana";
            asset: "SOL";
        }, {
            chain: "Solana";
            asset: "SOL";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Solana">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Solana";
            asset: "USDC";
        }, {
            chain: "Solana";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Assethub">;
            asset: z.ZodLiteral<"DOT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Assethub";
            asset: "DOT";
        }, {
            chain: "Assethub";
            asset: "DOT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Assethub">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Assethub";
            asset: "USDC";
        }, {
            chain: "Assethub";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Assethub">;
            asset: z.ZodLiteral<"USDT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Assethub";
            asset: "USDT";
        }, {
            chain: "Assethub";
            asset: "USDT";
        }>]>, "many">>;
        add_lender_funds_enabled: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodObject<{
            chain: z.ZodLiteral<"Bitcoin">;
            asset: z.ZodLiteral<"BTC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Bitcoin";
            asset: "BTC";
        }, {
            chain: "Bitcoin";
            asset: "BTC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Polkadot">;
            asset: z.ZodLiteral<"DOT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Polkadot";
            asset: "DOT";
        }, {
            chain: "Polkadot";
            asset: "DOT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"FLIP">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "FLIP";
        }, {
            chain: "Ethereum";
            asset: "FLIP";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"ETH">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "ETH";
        }, {
            chain: "Ethereum";
            asset: "ETH";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "USDC";
        }, {
            chain: "Ethereum";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"USDT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "USDT";
        }, {
            chain: "Ethereum";
            asset: "USDT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Arbitrum">;
            asset: z.ZodLiteral<"ETH">;
        }, "strip", z.ZodTypeAny, {
            chain: "Arbitrum";
            asset: "ETH";
        }, {
            chain: "Arbitrum";
            asset: "ETH";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Arbitrum">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Arbitrum";
            asset: "USDC";
        }, {
            chain: "Arbitrum";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Solana">;
            asset: z.ZodLiteral<"SOL">;
        }, "strip", z.ZodTypeAny, {
            chain: "Solana";
            asset: "SOL";
        }, {
            chain: "Solana";
            asset: "SOL";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Solana">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Solana";
            asset: "USDC";
        }, {
            chain: "Solana";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Assethub">;
            asset: z.ZodLiteral<"DOT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Assethub";
            asset: "DOT";
        }, {
            chain: "Assethub";
            asset: "DOT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Assethub">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Assethub";
            asset: "USDC";
        }, {
            chain: "Assethub";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Assethub">;
            asset: z.ZodLiteral<"USDT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Assethub";
            asset: "USDT";
        }, {
            chain: "Assethub";
            asset: "USDT";
        }>]>, "many">>;
        withdraw_lender_funds_enabled: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodObject<{
            chain: z.ZodLiteral<"Bitcoin">;
            asset: z.ZodLiteral<"BTC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Bitcoin";
            asset: "BTC";
        }, {
            chain: "Bitcoin";
            asset: "BTC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Polkadot">;
            asset: z.ZodLiteral<"DOT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Polkadot";
            asset: "DOT";
        }, {
            chain: "Polkadot";
            asset: "DOT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"FLIP">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "FLIP";
        }, {
            chain: "Ethereum";
            asset: "FLIP";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"ETH">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "ETH";
        }, {
            chain: "Ethereum";
            asset: "ETH";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "USDC";
        }, {
            chain: "Ethereum";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"USDT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "USDT";
        }, {
            chain: "Ethereum";
            asset: "USDT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Arbitrum">;
            asset: z.ZodLiteral<"ETH">;
        }, "strip", z.ZodTypeAny, {
            chain: "Arbitrum";
            asset: "ETH";
        }, {
            chain: "Arbitrum";
            asset: "ETH";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Arbitrum">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Arbitrum";
            asset: "USDC";
        }, {
            chain: "Arbitrum";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Solana">;
            asset: z.ZodLiteral<"SOL">;
        }, "strip", z.ZodTypeAny, {
            chain: "Solana";
            asset: "SOL";
        }, {
            chain: "Solana";
            asset: "SOL";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Solana">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Solana";
            asset: "USDC";
        }, {
            chain: "Solana";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Assethub">;
            asset: z.ZodLiteral<"DOT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Assethub";
            asset: "DOT";
        }, {
            chain: "Assethub";
            asset: "DOT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Assethub">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Assethub";
            asset: "USDC";
        }, {
            chain: "Assethub";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Assethub">;
            asset: z.ZodLiteral<"USDT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Assethub";
            asset: "USDT";
        }, {
            chain: "Assethub";
            asset: "USDT";
        }>]>, "many">>;
        add_collateral_enabled: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodObject<{
            chain: z.ZodLiteral<"Bitcoin">;
            asset: z.ZodLiteral<"BTC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Bitcoin";
            asset: "BTC";
        }, {
            chain: "Bitcoin";
            asset: "BTC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Polkadot">;
            asset: z.ZodLiteral<"DOT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Polkadot";
            asset: "DOT";
        }, {
            chain: "Polkadot";
            asset: "DOT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"FLIP">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "FLIP";
        }, {
            chain: "Ethereum";
            asset: "FLIP";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"ETH">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "ETH";
        }, {
            chain: "Ethereum";
            asset: "ETH";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "USDC";
        }, {
            chain: "Ethereum";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"USDT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "USDT";
        }, {
            chain: "Ethereum";
            asset: "USDT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Arbitrum">;
            asset: z.ZodLiteral<"ETH">;
        }, "strip", z.ZodTypeAny, {
            chain: "Arbitrum";
            asset: "ETH";
        }, {
            chain: "Arbitrum";
            asset: "ETH";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Arbitrum">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Arbitrum";
            asset: "USDC";
        }, {
            chain: "Arbitrum";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Solana">;
            asset: z.ZodLiteral<"SOL">;
        }, "strip", z.ZodTypeAny, {
            chain: "Solana";
            asset: "SOL";
        }, {
            chain: "Solana";
            asset: "SOL";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Solana">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Solana";
            asset: "USDC";
        }, {
            chain: "Solana";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Assethub">;
            asset: z.ZodLiteral<"DOT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Assethub";
            asset: "DOT";
        }, {
            chain: "Assethub";
            asset: "DOT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Assethub">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Assethub";
            asset: "USDC";
        }, {
            chain: "Assethub";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Assethub">;
            asset: z.ZodLiteral<"USDT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Assethub";
            asset: "USDT";
        }, {
            chain: "Assethub";
            asset: "USDT";
        }>]>, "many">>;
        remove_collateral_enabled: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodObject<{
            chain: z.ZodLiteral<"Bitcoin">;
            asset: z.ZodLiteral<"BTC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Bitcoin";
            asset: "BTC";
        }, {
            chain: "Bitcoin";
            asset: "BTC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Polkadot">;
            asset: z.ZodLiteral<"DOT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Polkadot";
            asset: "DOT";
        }, {
            chain: "Polkadot";
            asset: "DOT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"FLIP">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "FLIP";
        }, {
            chain: "Ethereum";
            asset: "FLIP";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"ETH">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "ETH";
        }, {
            chain: "Ethereum";
            asset: "ETH";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "USDC";
        }, {
            chain: "Ethereum";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"USDT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "USDT";
        }, {
            chain: "Ethereum";
            asset: "USDT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Arbitrum">;
            asset: z.ZodLiteral<"ETH">;
        }, "strip", z.ZodTypeAny, {
            chain: "Arbitrum";
            asset: "ETH";
        }, {
            chain: "Arbitrum";
            asset: "ETH";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Arbitrum">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Arbitrum";
            asset: "USDC";
        }, {
            chain: "Arbitrum";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Solana">;
            asset: z.ZodLiteral<"SOL">;
        }, "strip", z.ZodTypeAny, {
            chain: "Solana";
            asset: "SOL";
        }, {
            chain: "Solana";
            asset: "SOL";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Solana">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Solana";
            asset: "USDC";
        }, {
            chain: "Solana";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Assethub">;
            asset: z.ZodLiteral<"DOT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Assethub";
            asset: "DOT";
        }, {
            chain: "Assethub";
            asset: "DOT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Assethub">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Assethub";
            asset: "USDC";
        }, {
            chain: "Assethub";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Assethub">;
            asset: z.ZodLiteral<"USDT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Assethub";
            asset: "USDT";
        }, {
            chain: "Assethub";
            asset: "USDT";
        }>]>, "many">>;
    }, "strip", z.ZodTypeAny, {
        add_boost_funds_enabled: boolean;
        stop_boosting_enabled: boolean;
        borrowing_enabled?: ({
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        })[] | undefined;
        add_lender_funds_enabled?: ({
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        })[] | undefined;
        withdraw_lender_funds_enabled?: ({
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        })[] | undefined;
        add_collateral_enabled?: ({
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        })[] | undefined;
        remove_collateral_enabled?: ({
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        })[] | undefined;
    }, {
        add_boost_funds_enabled: boolean;
        stop_boosting_enabled: boolean;
        borrowing_enabled?: ({
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        })[] | undefined;
        add_lender_funds_enabled?: ({
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        })[] | undefined;
        withdraw_lender_funds_enabled?: ({
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        })[] | undefined;
        add_collateral_enabled?: ({
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        })[] | undefined;
        remove_collateral_enabled?: ({
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        })[] | undefined;
    }>;
    broadcast_ethereum: z.ZodObject<{
        retry_enabled: z.ZodBoolean;
        egress_witnessing_enabled: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        retry_enabled: boolean;
        egress_witnessing_enabled: boolean;
    }, {
        retry_enabled: boolean;
        egress_witnessing_enabled: boolean;
    }>;
    broadcast_bitcoin: z.ZodObject<{
        retry_enabled: z.ZodBoolean;
        egress_witnessing_enabled: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        retry_enabled: boolean;
        egress_witnessing_enabled: boolean;
    }, {
        retry_enabled: boolean;
        egress_witnessing_enabled: boolean;
    }>;
    broadcast_polkadot: z.ZodObject<{
        retry_enabled: z.ZodBoolean;
        egress_witnessing_enabled: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        retry_enabled: boolean;
        egress_witnessing_enabled: boolean;
    }, {
        retry_enabled: boolean;
        egress_witnessing_enabled: boolean;
    }>;
    broadcast_arbitrum: z.ZodObject<{
        retry_enabled: z.ZodBoolean;
        egress_witnessing_enabled: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        retry_enabled: boolean;
        egress_witnessing_enabled: boolean;
    }, {
        retry_enabled: boolean;
        egress_witnessing_enabled: boolean;
    }>;
    broadcast_solana: z.ZodObject<{
        retry_enabled: z.ZodBoolean;
        egress_witnessing_enabled: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        retry_enabled: boolean;
        egress_witnessing_enabled: boolean;
    }, {
        retry_enabled: boolean;
        egress_witnessing_enabled: boolean;
    }>;
    broadcast_assethub: z.ZodObject<{
        retry_enabled: z.ZodBoolean;
        egress_witnessing_enabled: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        retry_enabled: boolean;
        egress_witnessing_enabled: boolean;
    }, {
        retry_enabled: boolean;
        egress_witnessing_enabled: boolean;
    }>;
    ingress_egress_ethereum: z.ZodObject<{
        boost_deposits_enabled: z.ZodBoolean;
        deposit_channel_creation_enabled: z.ZodBoolean;
        deposit_channel_witnessing_enabled: z.ZodBoolean;
        vault_deposit_witnessing_enabled: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        boost_deposits_enabled: boolean;
        deposit_channel_creation_enabled: boolean;
        deposit_channel_witnessing_enabled: boolean;
        vault_deposit_witnessing_enabled: boolean;
    }, {
        boost_deposits_enabled: boolean;
        deposit_channel_creation_enabled: boolean;
        deposit_channel_witnessing_enabled: boolean;
        vault_deposit_witnessing_enabled: boolean;
    }>;
    ingress_egress_bitcoin: z.ZodObject<{
        boost_deposits_enabled: z.ZodBoolean;
        deposit_channel_creation_enabled: z.ZodBoolean;
        deposit_channel_witnessing_enabled: z.ZodBoolean;
        vault_deposit_witnessing_enabled: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        boost_deposits_enabled: boolean;
        deposit_channel_creation_enabled: boolean;
        deposit_channel_witnessing_enabled: boolean;
        vault_deposit_witnessing_enabled: boolean;
    }, {
        boost_deposits_enabled: boolean;
        deposit_channel_creation_enabled: boolean;
        deposit_channel_witnessing_enabled: boolean;
        vault_deposit_witnessing_enabled: boolean;
    }>;
    ingress_egress_polkadot: z.ZodObject<{
        boost_deposits_enabled: z.ZodBoolean;
        deposit_channel_creation_enabled: z.ZodBoolean;
        deposit_channel_witnessing_enabled: z.ZodBoolean;
        vault_deposit_witnessing_enabled: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        boost_deposits_enabled: boolean;
        deposit_channel_creation_enabled: boolean;
        deposit_channel_witnessing_enabled: boolean;
        vault_deposit_witnessing_enabled: boolean;
    }, {
        boost_deposits_enabled: boolean;
        deposit_channel_creation_enabled: boolean;
        deposit_channel_witnessing_enabled: boolean;
        vault_deposit_witnessing_enabled: boolean;
    }>;
    ingress_egress_arbitrum: z.ZodObject<{
        boost_deposits_enabled: z.ZodBoolean;
        deposit_channel_creation_enabled: z.ZodBoolean;
        deposit_channel_witnessing_enabled: z.ZodBoolean;
        vault_deposit_witnessing_enabled: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        boost_deposits_enabled: boolean;
        deposit_channel_creation_enabled: boolean;
        deposit_channel_witnessing_enabled: boolean;
        vault_deposit_witnessing_enabled: boolean;
    }, {
        boost_deposits_enabled: boolean;
        deposit_channel_creation_enabled: boolean;
        deposit_channel_witnessing_enabled: boolean;
        vault_deposit_witnessing_enabled: boolean;
    }>;
    ingress_egress_solana: z.ZodObject<{
        boost_deposits_enabled: z.ZodBoolean;
        deposit_channel_creation_enabled: z.ZodBoolean;
        deposit_channel_witnessing_enabled: z.ZodBoolean;
        vault_deposit_witnessing_enabled: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        boost_deposits_enabled: boolean;
        deposit_channel_creation_enabled: boolean;
        deposit_channel_witnessing_enabled: boolean;
        vault_deposit_witnessing_enabled: boolean;
    }, {
        boost_deposits_enabled: boolean;
        deposit_channel_creation_enabled: boolean;
        deposit_channel_witnessing_enabled: boolean;
        vault_deposit_witnessing_enabled: boolean;
    }>;
    ingress_egress_assethub: z.ZodObject<{
        boost_deposits_enabled: z.ZodBoolean;
        deposit_channel_creation_enabled: z.ZodBoolean;
        deposit_channel_witnessing_enabled: z.ZodBoolean;
        vault_deposit_witnessing_enabled: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        boost_deposits_enabled: boolean;
        deposit_channel_creation_enabled: boolean;
        deposit_channel_witnessing_enabled: boolean;
        vault_deposit_witnessing_enabled: boolean;
    }, {
        boost_deposits_enabled: boolean;
        deposit_channel_creation_enabled: boolean;
        deposit_channel_witnessing_enabled: boolean;
        vault_deposit_witnessing_enabled: boolean;
    }>;
    witnesser: z.ZodEnum<["CodeRed", "CodeGreen", "CodeAmber"]>;
    elections_generic: z.ZodObject<{
        oracle_price_elections: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        oracle_price_elections: boolean;
    }, {
        oracle_price_elections: boolean;
    }>;
}, "strip", z.ZodTypeAny, {
    asset_balances: {
        reconciliation_enabled: boolean;
    };
    liquidity_provider: {
        deposit_enabled: boolean;
        withdrawal_enabled: boolean;
        internal_swaps_enabled: boolean;
    };
    validator: {
        authority_rotation_enabled: boolean;
        start_bidding_enabled: boolean;
        stop_bidding_enabled: boolean;
    };
    swapping: {
        swaps_enabled: boolean;
        withdrawals_enabled: boolean;
        broker_registration_enabled: boolean;
    };
    funding: {
        redeem_enabled: boolean;
    };
    pools: {
        range_order_update_enabled: boolean;
        limit_order_update_enabled: boolean;
    };
    emissions: {
        emissions_sync_enabled: boolean;
    };
    trading_strategies: {
        strategy_updates_enabled: boolean;
        strategy_closure_enabled: boolean;
        strategy_execution_enabled: boolean;
    };
    reputation: {
        reporting_enabled: boolean;
    };
    threshold_signature_evm: {
        slashing_enabled: boolean;
    };
    threshold_signature_bitcoin: {
        slashing_enabled: boolean;
    };
    threshold_signature_polkadot: {
        slashing_enabled: boolean;
    };
    threshold_signature_solana: {
        slashing_enabled: boolean;
    };
    lending_pools: {
        add_boost_funds_enabled: boolean;
        stop_boosting_enabled: boolean;
        borrowing_enabled?: ({
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        })[] | undefined;
        add_lender_funds_enabled?: ({
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        })[] | undefined;
        withdraw_lender_funds_enabled?: ({
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        })[] | undefined;
        add_collateral_enabled?: ({
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        })[] | undefined;
        remove_collateral_enabled?: ({
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        })[] | undefined;
    };
    broadcast_ethereum: {
        retry_enabled: boolean;
        egress_witnessing_enabled: boolean;
    };
    broadcast_bitcoin: {
        retry_enabled: boolean;
        egress_witnessing_enabled: boolean;
    };
    broadcast_polkadot: {
        retry_enabled: boolean;
        egress_witnessing_enabled: boolean;
    };
    broadcast_arbitrum: {
        retry_enabled: boolean;
        egress_witnessing_enabled: boolean;
    };
    broadcast_solana: {
        retry_enabled: boolean;
        egress_witnessing_enabled: boolean;
    };
    broadcast_assethub: {
        retry_enabled: boolean;
        egress_witnessing_enabled: boolean;
    };
    ingress_egress_ethereum: {
        boost_deposits_enabled: boolean;
        deposit_channel_creation_enabled: boolean;
        deposit_channel_witnessing_enabled: boolean;
        vault_deposit_witnessing_enabled: boolean;
    };
    ingress_egress_bitcoin: {
        boost_deposits_enabled: boolean;
        deposit_channel_creation_enabled: boolean;
        deposit_channel_witnessing_enabled: boolean;
        vault_deposit_witnessing_enabled: boolean;
    };
    ingress_egress_polkadot: {
        boost_deposits_enabled: boolean;
        deposit_channel_creation_enabled: boolean;
        deposit_channel_witnessing_enabled: boolean;
        vault_deposit_witnessing_enabled: boolean;
    };
    ingress_egress_arbitrum: {
        boost_deposits_enabled: boolean;
        deposit_channel_creation_enabled: boolean;
        deposit_channel_witnessing_enabled: boolean;
        vault_deposit_witnessing_enabled: boolean;
    };
    ingress_egress_solana: {
        boost_deposits_enabled: boolean;
        deposit_channel_creation_enabled: boolean;
        deposit_channel_witnessing_enabled: boolean;
        vault_deposit_witnessing_enabled: boolean;
    };
    ingress_egress_assethub: {
        boost_deposits_enabled: boolean;
        deposit_channel_creation_enabled: boolean;
        deposit_channel_witnessing_enabled: boolean;
        vault_deposit_witnessing_enabled: boolean;
    };
    witnesser: "CodeRed" | "CodeGreen" | "CodeAmber";
    elections_generic: {
        oracle_price_elections: boolean;
    };
}, {
    asset_balances: {
        reconciliation_enabled: boolean;
    };
    liquidity_provider: {
        deposit_enabled: boolean;
        withdrawal_enabled: boolean;
        internal_swaps_enabled: boolean;
    };
    validator: {
        authority_rotation_enabled: boolean;
        start_bidding_enabled: boolean;
        stop_bidding_enabled: boolean;
    };
    swapping: {
        swaps_enabled: boolean;
        withdrawals_enabled: boolean;
        broker_registration_enabled: boolean;
    };
    funding: {
        redeem_enabled: boolean;
    };
    pools: {
        range_order_update_enabled: boolean;
        limit_order_update_enabled: boolean;
    };
    emissions: {
        emissions_sync_enabled: boolean;
    };
    trading_strategies: {
        strategy_updates_enabled: boolean;
        strategy_closure_enabled: boolean;
        strategy_execution_enabled: boolean;
    };
    reputation: {
        reporting_enabled: boolean;
    };
    threshold_signature_evm: {
        slashing_enabled: boolean;
    };
    threshold_signature_bitcoin: {
        slashing_enabled: boolean;
    };
    threshold_signature_polkadot: {
        slashing_enabled: boolean;
    };
    threshold_signature_solana: {
        slashing_enabled: boolean;
    };
    lending_pools: {
        add_boost_funds_enabled: boolean;
        stop_boosting_enabled: boolean;
        borrowing_enabled?: ({
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        })[] | undefined;
        add_lender_funds_enabled?: ({
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        })[] | undefined;
        withdraw_lender_funds_enabled?: ({
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        })[] | undefined;
        add_collateral_enabled?: ({
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        })[] | undefined;
        remove_collateral_enabled?: ({
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        })[] | undefined;
    };
    broadcast_ethereum: {
        retry_enabled: boolean;
        egress_witnessing_enabled: boolean;
    };
    broadcast_bitcoin: {
        retry_enabled: boolean;
        egress_witnessing_enabled: boolean;
    };
    broadcast_polkadot: {
        retry_enabled: boolean;
        egress_witnessing_enabled: boolean;
    };
    broadcast_arbitrum: {
        retry_enabled: boolean;
        egress_witnessing_enabled: boolean;
    };
    broadcast_solana: {
        retry_enabled: boolean;
        egress_witnessing_enabled: boolean;
    };
    broadcast_assethub: {
        retry_enabled: boolean;
        egress_witnessing_enabled: boolean;
    };
    ingress_egress_ethereum: {
        boost_deposits_enabled: boolean;
        deposit_channel_creation_enabled: boolean;
        deposit_channel_witnessing_enabled: boolean;
        vault_deposit_witnessing_enabled: boolean;
    };
    ingress_egress_bitcoin: {
        boost_deposits_enabled: boolean;
        deposit_channel_creation_enabled: boolean;
        deposit_channel_witnessing_enabled: boolean;
        vault_deposit_witnessing_enabled: boolean;
    };
    ingress_egress_polkadot: {
        boost_deposits_enabled: boolean;
        deposit_channel_creation_enabled: boolean;
        deposit_channel_witnessing_enabled: boolean;
        vault_deposit_witnessing_enabled: boolean;
    };
    ingress_egress_arbitrum: {
        boost_deposits_enabled: boolean;
        deposit_channel_creation_enabled: boolean;
        deposit_channel_witnessing_enabled: boolean;
        vault_deposit_witnessing_enabled: boolean;
    };
    ingress_egress_solana: {
        boost_deposits_enabled: boolean;
        deposit_channel_creation_enabled: boolean;
        deposit_channel_witnessing_enabled: boolean;
        vault_deposit_witnessing_enabled: boolean;
    };
    ingress_egress_assethub: {
        boost_deposits_enabled: boolean;
        deposit_channel_creation_enabled: boolean;
        deposit_channel_witnessing_enabled: boolean;
        vault_deposit_witnessing_enabled: boolean;
    };
    witnesser: "CodeRed" | "CodeGreen" | "CodeAmber";
    elections_generic: {
        oracle_price_elections: boolean;
    };
}>;
declare const cfLendingPools: z.ZodArray<z.ZodObject<{
    asset: z.ZodUnion<[z.ZodObject<{
        chain: z.ZodLiteral<"Bitcoin">;
        asset: z.ZodLiteral<"BTC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Bitcoin";
        asset: "BTC";
    }, {
        chain: "Bitcoin";
        asset: "BTC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Polkadot">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Polkadot";
        asset: "DOT";
    }, {
        chain: "Polkadot";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"FLIP">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "FLIP";
    }, {
        chain: "Ethereum";
        asset: "FLIP";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "ETH";
    }, {
        chain: "Ethereum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDC";
    }, {
        chain: "Ethereum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDT";
    }, {
        chain: "Ethereum";
        asset: "USDT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "ETH";
    }, {
        chain: "Arbitrum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "USDC";
    }, {
        chain: "Arbitrum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"SOL">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "SOL";
    }, {
        chain: "Solana";
        asset: "SOL";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "USDC";
    }, {
        chain: "Solana";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "DOT";
    }, {
        chain: "Assethub";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDC";
    }, {
        chain: "Assethub";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDT";
    }, {
        chain: "Assethub";
        asset: "USDT";
    }>]>;
    total_amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    available_amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    utilisation_rate: z.ZodNumber;
    current_interest_rate: z.ZodNumber;
    origination_fee: z.ZodNumber;
    liquidation_fee: z.ZodNumber;
    interest_rate_curve: z.ZodObject<{
        interest_at_zero_utilisation: z.ZodNumber;
        junction_utilisation: z.ZodNumber;
        interest_at_junction_utilisation: z.ZodNumber;
        interest_at_max_utilisation: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        interest_at_zero_utilisation: number;
        junction_utilisation: number;
        interest_at_junction_utilisation: number;
        interest_at_max_utilisation: number;
    }, {
        interest_at_zero_utilisation: number;
        junction_utilisation: number;
        interest_at_junction_utilisation: number;
        interest_at_max_utilisation: number;
    }>;
}, "strip", z.ZodTypeAny, {
    asset: {
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    };
    total_amount: bigint;
    available_amount: bigint;
    utilisation_rate: number;
    current_interest_rate: number;
    origination_fee: number;
    liquidation_fee: number;
    interest_rate_curve: {
        interest_at_zero_utilisation: number;
        junction_utilisation: number;
        interest_at_junction_utilisation: number;
        interest_at_max_utilisation: number;
    };
}, {
    asset: {
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    };
    total_amount: string | number;
    available_amount: string | number;
    utilisation_rate: number;
    current_interest_rate: number;
    origination_fee: number;
    liquidation_fee: number;
    interest_rate_curve: {
        interest_at_zero_utilisation: number;
        junction_utilisation: number;
        interest_at_junction_utilisation: number;
        interest_at_max_utilisation: number;
    };
}>, "many">;
declare const cfLendingConfig: z.ZodObject<{
    ltv_thresholds: z.ZodObject<{
        target: z.ZodNumber;
        topup: z.ZodNumber;
        soft_liquidation: z.ZodNumber;
        soft_liquidation_abort: z.ZodNumber;
        hard_liquidation: z.ZodNumber;
        hard_liquidation_abort: z.ZodNumber;
        low_ltv: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        target: number;
        topup: number;
        soft_liquidation: number;
        soft_liquidation_abort: number;
        hard_liquidation: number;
        hard_liquidation_abort: number;
        low_ltv: number;
    }, {
        target: number;
        topup: number;
        soft_liquidation: number;
        soft_liquidation_abort: number;
        hard_liquidation: number;
        hard_liquidation_abort: number;
        low_ltv: number;
    }>;
    network_fee_contributions: z.ZodObject<{
        extra_interest: z.ZodNumber;
        interest_on_collateral_max: z.ZodNumber;
        from_origination_fee: z.ZodNumber;
        from_liquidation_fee: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        extra_interest: number;
        interest_on_collateral_max: number;
        from_origination_fee: number;
        from_liquidation_fee: number;
    }, {
        extra_interest: number;
        interest_on_collateral_max: number;
        from_origination_fee: number;
        from_liquidation_fee: number;
    }>;
    fee_swap_interval_blocks: z.ZodNumber;
    interest_payment_interval_blocks: z.ZodNumber;
    fee_swap_threshold_usd: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    interest_collection_threshold_usd: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    liquidation_swap_chunk_size_usd: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    soft_liquidation_max_oracle_slippage: z.ZodNumber;
    hard_liquidation_max_oracle_slippage: z.ZodNumber;
    fee_swap_max_oracle_slippage: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    ltv_thresholds: {
        target: number;
        topup: number;
        soft_liquidation: number;
        soft_liquidation_abort: number;
        hard_liquidation: number;
        hard_liquidation_abort: number;
        low_ltv: number;
    };
    network_fee_contributions: {
        extra_interest: number;
        interest_on_collateral_max: number;
        from_origination_fee: number;
        from_liquidation_fee: number;
    };
    fee_swap_interval_blocks: number;
    interest_payment_interval_blocks: number;
    fee_swap_threshold_usd: bigint;
    interest_collection_threshold_usd: bigint;
    liquidation_swap_chunk_size_usd: bigint;
    soft_liquidation_max_oracle_slippage: number;
    hard_liquidation_max_oracle_slippage: number;
    fee_swap_max_oracle_slippage: number;
}, {
    ltv_thresholds: {
        target: number;
        topup: number;
        soft_liquidation: number;
        soft_liquidation_abort: number;
        hard_liquidation: number;
        hard_liquidation_abort: number;
        low_ltv: number;
    };
    network_fee_contributions: {
        extra_interest: number;
        interest_on_collateral_max: number;
        from_origination_fee: number;
        from_liquidation_fee: number;
    };
    fee_swap_interval_blocks: number;
    interest_payment_interval_blocks: number;
    fee_swap_threshold_usd: string | number;
    interest_collection_threshold_usd: string | number;
    liquidation_swap_chunk_size_usd: string | number;
    soft_liquidation_max_oracle_slippage: number;
    hard_liquidation_max_oracle_slippage: number;
    fee_swap_max_oracle_slippage: number;
}>;
declare const cfLoanAccount: z.ZodObject<{
    account: z.ZodEffects<z.ZodString, `cF${string}`, string>;
    primary_collateral_asset: z.ZodUnion<[z.ZodObject<{
        chain: z.ZodLiteral<"Bitcoin">;
        asset: z.ZodLiteral<"BTC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Bitcoin";
        asset: "BTC";
    }, {
        chain: "Bitcoin";
        asset: "BTC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Polkadot">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Polkadot";
        asset: "DOT";
    }, {
        chain: "Polkadot";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"FLIP">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "FLIP";
    }, {
        chain: "Ethereum";
        asset: "FLIP";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "ETH";
    }, {
        chain: "Ethereum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDC";
    }, {
        chain: "Ethereum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDT";
    }, {
        chain: "Ethereum";
        asset: "USDT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "ETH";
    }, {
        chain: "Arbitrum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "USDC";
    }, {
        chain: "Arbitrum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"SOL">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "SOL";
    }, {
        chain: "Solana";
        asset: "SOL";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "USDC";
    }, {
        chain: "Solana";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "DOT";
    }, {
        chain: "Assethub";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDC";
    }, {
        chain: "Assethub";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDT";
    }, {
        chain: "Assethub";
        asset: "USDT";
    }>]>;
    ltv_ratio: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    collateral: z.ZodArray<z.ZodIntersection<z.ZodUnion<[z.ZodObject<{
        chain: z.ZodLiteral<"Bitcoin">;
        asset: z.ZodLiteral<"BTC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Bitcoin";
        asset: "BTC";
    }, {
        chain: "Bitcoin";
        asset: "BTC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Polkadot">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Polkadot";
        asset: "DOT";
    }, {
        chain: "Polkadot";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"FLIP">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "FLIP";
    }, {
        chain: "Ethereum";
        asset: "FLIP";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "ETH";
    }, {
        chain: "Ethereum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDC";
    }, {
        chain: "Ethereum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDT";
    }, {
        chain: "Ethereum";
        asset: "USDT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "ETH";
    }, {
        chain: "Arbitrum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "USDC";
    }, {
        chain: "Arbitrum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"SOL">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "SOL";
    }, {
        chain: "Solana";
        asset: "SOL";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "USDC";
    }, {
        chain: "Solana";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "DOT";
    }, {
        chain: "Assethub";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDC";
    }, {
        chain: "Assethub";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDT";
    }, {
        chain: "Assethub";
        asset: "USDT";
    }>]>, z.ZodObject<{
        amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        amount: bigint;
    }, {
        amount: string | number;
    }>>, "many">;
    loans: z.ZodArray<z.ZodObject<{
        loan_id: z.ZodNumber;
        asset: z.ZodUnion<[z.ZodObject<{
            chain: z.ZodLiteral<"Bitcoin">;
            asset: z.ZodLiteral<"BTC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Bitcoin";
            asset: "BTC";
        }, {
            chain: "Bitcoin";
            asset: "BTC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Polkadot">;
            asset: z.ZodLiteral<"DOT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Polkadot";
            asset: "DOT";
        }, {
            chain: "Polkadot";
            asset: "DOT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"FLIP">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "FLIP";
        }, {
            chain: "Ethereum";
            asset: "FLIP";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"ETH">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "ETH";
        }, {
            chain: "Ethereum";
            asset: "ETH";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "USDC";
        }, {
            chain: "Ethereum";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"USDT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "USDT";
        }, {
            chain: "Ethereum";
            asset: "USDT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Arbitrum">;
            asset: z.ZodLiteral<"ETH">;
        }, "strip", z.ZodTypeAny, {
            chain: "Arbitrum";
            asset: "ETH";
        }, {
            chain: "Arbitrum";
            asset: "ETH";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Arbitrum">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Arbitrum";
            asset: "USDC";
        }, {
            chain: "Arbitrum";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Solana">;
            asset: z.ZodLiteral<"SOL">;
        }, "strip", z.ZodTypeAny, {
            chain: "Solana";
            asset: "SOL";
        }, {
            chain: "Solana";
            asset: "SOL";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Solana">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Solana";
            asset: "USDC";
        }, {
            chain: "Solana";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Assethub">;
            asset: z.ZodLiteral<"DOT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Assethub";
            asset: "DOT";
        }, {
            chain: "Assethub";
            asset: "DOT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Assethub">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Assethub";
            asset: "USDC";
        }, {
            chain: "Assethub";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Assethub">;
            asset: z.ZodLiteral<"USDT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Assethub";
            asset: "USDT";
        }, {
            chain: "Assethub";
            asset: "USDT";
        }>]>;
        created_at: z.ZodNumber;
        principal_amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        asset: {
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        };
        loan_id: number;
        created_at: number;
        principal_amount: bigint;
    }, {
        asset: {
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        };
        loan_id: number;
        created_at: number;
        principal_amount: string | number;
    }>, "many">;
    liquidation_status: z.ZodNullable<z.ZodObject<{
        liquidation_swaps: z.ZodArray<z.ZodObject<{
            swap_request_id: z.ZodNumber;
            loan_id: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            loan_id: number;
            swap_request_id: number;
        }, {
            loan_id: number;
            swap_request_id: number;
        }>, "many">;
        is_hard: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        liquidation_swaps: {
            loan_id: number;
            swap_request_id: number;
        }[];
        is_hard: boolean;
    }, {
        liquidation_swaps: {
            loan_id: number;
            swap_request_id: number;
        }[];
        is_hard: boolean;
    }>>;
}, "strip", z.ZodTypeAny, {
    account: `cF${string}`;
    primary_collateral_asset: {
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    };
    ltv_ratio: bigint;
    collateral: (({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        amount: bigint;
    })[];
    loans: {
        asset: {
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        };
        loan_id: number;
        created_at: number;
        principal_amount: bigint;
    }[];
    liquidation_status: {
        liquidation_swaps: {
            loan_id: number;
            swap_request_id: number;
        }[];
        is_hard: boolean;
    } | null;
}, {
    account: string;
    primary_collateral_asset: {
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    };
    ltv_ratio: string | number;
    collateral: (({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        amount: string | number;
    })[];
    loans: {
        asset: {
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        };
        loan_id: number;
        created_at: number;
        principal_amount: string | number;
    }[];
    liquidation_status: {
        liquidation_swaps: {
            loan_id: number;
            swap_request_id: number;
        }[];
        is_hard: boolean;
    } | null;
}>;
declare const cfLoanAccounts: z.ZodArray<z.ZodObject<{
    account: z.ZodEffects<z.ZodString, `cF${string}`, string>;
    primary_collateral_asset: z.ZodUnion<[z.ZodObject<{
        chain: z.ZodLiteral<"Bitcoin">;
        asset: z.ZodLiteral<"BTC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Bitcoin";
        asset: "BTC";
    }, {
        chain: "Bitcoin";
        asset: "BTC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Polkadot">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Polkadot";
        asset: "DOT";
    }, {
        chain: "Polkadot";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"FLIP">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "FLIP";
    }, {
        chain: "Ethereum";
        asset: "FLIP";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "ETH";
    }, {
        chain: "Ethereum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDC";
    }, {
        chain: "Ethereum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDT";
    }, {
        chain: "Ethereum";
        asset: "USDT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "ETH";
    }, {
        chain: "Arbitrum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "USDC";
    }, {
        chain: "Arbitrum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"SOL">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "SOL";
    }, {
        chain: "Solana";
        asset: "SOL";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "USDC";
    }, {
        chain: "Solana";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "DOT";
    }, {
        chain: "Assethub";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDC";
    }, {
        chain: "Assethub";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDT";
    }, {
        chain: "Assethub";
        asset: "USDT";
    }>]>;
    ltv_ratio: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    collateral: z.ZodArray<z.ZodIntersection<z.ZodUnion<[z.ZodObject<{
        chain: z.ZodLiteral<"Bitcoin">;
        asset: z.ZodLiteral<"BTC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Bitcoin";
        asset: "BTC";
    }, {
        chain: "Bitcoin";
        asset: "BTC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Polkadot">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Polkadot";
        asset: "DOT";
    }, {
        chain: "Polkadot";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"FLIP">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "FLIP";
    }, {
        chain: "Ethereum";
        asset: "FLIP";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "ETH";
    }, {
        chain: "Ethereum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDC";
    }, {
        chain: "Ethereum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Ethereum">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Ethereum";
        asset: "USDT";
    }, {
        chain: "Ethereum";
        asset: "USDT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"ETH">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "ETH";
    }, {
        chain: "Arbitrum";
        asset: "ETH";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Arbitrum">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Arbitrum";
        asset: "USDC";
    }, {
        chain: "Arbitrum";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"SOL">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "SOL";
    }, {
        chain: "Solana";
        asset: "SOL";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Solana">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Solana";
        asset: "USDC";
    }, {
        chain: "Solana";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"DOT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "DOT";
    }, {
        chain: "Assethub";
        asset: "DOT";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDC">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDC";
    }, {
        chain: "Assethub";
        asset: "USDC";
    }>, z.ZodObject<{
        chain: z.ZodLiteral<"Assethub">;
        asset: z.ZodLiteral<"USDT">;
    }, "strip", z.ZodTypeAny, {
        chain: "Assethub";
        asset: "USDT";
    }, {
        chain: "Assethub";
        asset: "USDT";
    }>]>, z.ZodObject<{
        amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        amount: bigint;
    }, {
        amount: string | number;
    }>>, "many">;
    loans: z.ZodArray<z.ZodObject<{
        loan_id: z.ZodNumber;
        asset: z.ZodUnion<[z.ZodObject<{
            chain: z.ZodLiteral<"Bitcoin">;
            asset: z.ZodLiteral<"BTC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Bitcoin";
            asset: "BTC";
        }, {
            chain: "Bitcoin";
            asset: "BTC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Polkadot">;
            asset: z.ZodLiteral<"DOT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Polkadot";
            asset: "DOT";
        }, {
            chain: "Polkadot";
            asset: "DOT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"FLIP">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "FLIP";
        }, {
            chain: "Ethereum";
            asset: "FLIP";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"ETH">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "ETH";
        }, {
            chain: "Ethereum";
            asset: "ETH";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "USDC";
        }, {
            chain: "Ethereum";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Ethereum">;
            asset: z.ZodLiteral<"USDT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Ethereum";
            asset: "USDT";
        }, {
            chain: "Ethereum";
            asset: "USDT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Arbitrum">;
            asset: z.ZodLiteral<"ETH">;
        }, "strip", z.ZodTypeAny, {
            chain: "Arbitrum";
            asset: "ETH";
        }, {
            chain: "Arbitrum";
            asset: "ETH";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Arbitrum">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Arbitrum";
            asset: "USDC";
        }, {
            chain: "Arbitrum";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Solana">;
            asset: z.ZodLiteral<"SOL">;
        }, "strip", z.ZodTypeAny, {
            chain: "Solana";
            asset: "SOL";
        }, {
            chain: "Solana";
            asset: "SOL";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Solana">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Solana";
            asset: "USDC";
        }, {
            chain: "Solana";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Assethub">;
            asset: z.ZodLiteral<"DOT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Assethub";
            asset: "DOT";
        }, {
            chain: "Assethub";
            asset: "DOT";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Assethub">;
            asset: z.ZodLiteral<"USDC">;
        }, "strip", z.ZodTypeAny, {
            chain: "Assethub";
            asset: "USDC";
        }, {
            chain: "Assethub";
            asset: "USDC";
        }>, z.ZodObject<{
            chain: z.ZodLiteral<"Assethub">;
            asset: z.ZodLiteral<"USDT">;
        }, "strip", z.ZodTypeAny, {
            chain: "Assethub";
            asset: "USDT";
        }, {
            chain: "Assethub";
            asset: "USDT";
        }>]>;
        created_at: z.ZodNumber;
        principal_amount: z.ZodEffects<z.ZodUnion<[z.ZodNumber, z.ZodEffects<z.ZodEffects<z.ZodString, `0x${string}`, string>, bigint, string>, z.ZodString]>, bigint, string | number>;
    }, "strip", z.ZodTypeAny, {
        asset: {
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        };
        loan_id: number;
        created_at: number;
        principal_amount: bigint;
    }, {
        asset: {
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        };
        loan_id: number;
        created_at: number;
        principal_amount: string | number;
    }>, "many">;
    liquidation_status: z.ZodNullable<z.ZodObject<{
        liquidation_swaps: z.ZodArray<z.ZodObject<{
            swap_request_id: z.ZodNumber;
            loan_id: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            loan_id: number;
            swap_request_id: number;
        }, {
            loan_id: number;
            swap_request_id: number;
        }>, "many">;
        is_hard: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        liquidation_swaps: {
            loan_id: number;
            swap_request_id: number;
        }[];
        is_hard: boolean;
    }, {
        liquidation_swaps: {
            loan_id: number;
            swap_request_id: number;
        }[];
        is_hard: boolean;
    }>>;
}, "strip", z.ZodTypeAny, {
    account: `cF${string}`;
    primary_collateral_asset: {
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    };
    ltv_ratio: bigint;
    collateral: (({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        amount: bigint;
    })[];
    loans: {
        asset: {
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        };
        loan_id: number;
        created_at: number;
        principal_amount: bigint;
    }[];
    liquidation_status: {
        liquidation_swaps: {
            loan_id: number;
            swap_request_id: number;
        }[];
        is_hard: boolean;
    } | null;
}, {
    account: string;
    primary_collateral_asset: {
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    };
    ltv_ratio: string | number;
    collateral: (({
        chain: "Bitcoin";
        asset: "BTC";
    } | {
        chain: "Polkadot";
        asset: "DOT";
    } | {
        chain: "Ethereum";
        asset: "FLIP";
    } | {
        chain: "Ethereum";
        asset: "ETH";
    } | {
        chain: "Ethereum";
        asset: "USDC";
    } | {
        chain: "Ethereum";
        asset: "USDT";
    } | {
        chain: "Arbitrum";
        asset: "ETH";
    } | {
        chain: "Arbitrum";
        asset: "USDC";
    } | {
        chain: "Solana";
        asset: "SOL";
    } | {
        chain: "Solana";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "DOT";
    } | {
        chain: "Assethub";
        asset: "USDC";
    } | {
        chain: "Assethub";
        asset: "USDT";
    }) & {
        amount: string | number;
    })[];
    loans: {
        asset: {
            chain: "Bitcoin";
            asset: "BTC";
        } | {
            chain: "Polkadot";
            asset: "DOT";
        } | {
            chain: "Ethereum";
            asset: "FLIP";
        } | {
            chain: "Ethereum";
            asset: "ETH";
        } | {
            chain: "Ethereum";
            asset: "USDC";
        } | {
            chain: "Ethereum";
            asset: "USDT";
        } | {
            chain: "Arbitrum";
            asset: "ETH";
        } | {
            chain: "Arbitrum";
            asset: "USDC";
        } | {
            chain: "Solana";
            asset: "SOL";
        } | {
            chain: "Solana";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "DOT";
        } | {
            chain: "Assethub";
            asset: "USDC";
        } | {
            chain: "Assethub";
            asset: "USDT";
        };
        loan_id: number;
        created_at: number;
        principal_amount: string | number;
    }[];
    liquidation_status: {
        liquidation_swaps: {
            loan_id: number;
            swap_request_id: number;
        }[];
        is_hard: boolean;
    } | null;
}>, "many">;

export { type AssetAndChain, type RpcLimitOrder, type RpcRangeOrder, accountInfoCommon, broker, brokerRequestSwapDepositAddress, cfAccountInfo, cfAccounts, cfAuctionState, cfAvailablePools, cfBoostPoolDetails, cfBoostPoolPendingFees, cfBoostPoolsDepth, cfEnvironment, cfFailedCallEvm, cfFlipSuppy, cfFundingEnvironment, cfGetTradingStrategies, cfGetTradingStrategyLimits, cfIngressEgressEnvironment, cfLendingConfig, cfLendingPools, cfLoanAccount, cfLoanAccounts, cfMonitoringSimulateAuction, cfOraclePrices, cfPoolDepth, cfPoolOrderbook, cfPoolOrders, cfPoolPriceV2, cfPoolsEnvironment, cfSafeModeStatuses, cfSupportedAssets, cfSwapRate, cfSwapRateV2, cfSwapRateV3, cfSwappingEnvironment, cfTradingStrategy, chainGetBlockHash, ethereumAddress, hexString, liquidityProvider, lpTotalBalances, numberOrHex, numericString, operator, requestSwapParameterEncoding, rpcResponse, stateGetMetadata, stateGetRuntimeVersion, u256, unregistered, validator };
