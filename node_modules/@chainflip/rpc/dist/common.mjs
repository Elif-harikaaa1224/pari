// src/common.ts
import { z } from "zod";
import {
  cfBoostPoolDetails,
  cfBoostPoolPendingFees,
  brokerRequestSwapDepositAddress,
  cfAccountInfo,
  cfBoostPoolsDepth,
  cfEnvironment,
  cfFundingEnvironment,
  cfIngressEgressEnvironment,
  cfPoolOrders,
  cfPoolPriceV2,
  cfPoolsEnvironment,
  cfSupportedAssets,
  cfSwapRate,
  cfSwapRateV2,
  cfSwappingEnvironment,
  chainGetBlockHash,
  stateGetMetadata,
  stateGetRuntimeVersion,
  cfPoolDepth,
  cfAccounts,
  cfSwapRateV3,
  requestSwapParameterEncoding,
  lpTotalBalances,
  cfFailedCallEvm,
  numberOrHex,
  cfAuctionState,
  cfFlipSuppy,
  ethereumAddress,
  cfPoolOrderbook,
  cfGetTradingStrategies,
  cfAvailablePools,
  cfSafeModeStatuses,
  cfGetTradingStrategyLimits,
  hexString,
  cfOraclePrices,
  cfLendingPools,
  cfLendingConfig,
  cfLoanAccounts,
  cfMonitoringSimulateAuction
} from "./parsers.mjs";
import { rpcResponse } from "./parsers.mjs";
var rpcResult = {
  broker_request_swap_deposit_address: brokerRequestSwapDepositAddress,
  broker_request_swap_parameter_encoding: requestSwapParameterEncoding,
  cf_request_swap_parameter_encoding: requestSwapParameterEncoding,
  cf_accounts: cfAccounts,
  cf_account_info: cfAccountInfo,
  cf_pool_depth: cfPoolDepth,
  cf_boost_pools_depth: cfBoostPoolsDepth,
  cf_environment: cfEnvironment,
  cf_funding_environment: cfFundingEnvironment,
  cf_ingress_egress_environment: cfIngressEgressEnvironment,
  cf_pool_orders: cfPoolOrders,
  cf_pool_price_v2: cfPoolPriceV2,
  cf_pools_environment: cfPoolsEnvironment,
  cf_supported_assets: cfSupportedAssets,
  cf_swap_rate: cfSwapRate,
  cf_swap_rate_v2: cfSwapRateV2,
  cf_swap_rate_v3: cfSwapRateV3,
  cf_swapping_environment: cfSwappingEnvironment,
  chain_getBlockHash: chainGetBlockHash,
  cf_boost_pool_details: cfBoostPoolDetails,
  cf_boost_pool_pending_fees: cfBoostPoolPendingFees,
  state_getMetadata: stateGetMetadata,
  state_getRuntimeVersion: stateGetRuntimeVersion,
  lp_total_balances: lpTotalBalances,
  cf_failed_call_ethereum: cfFailedCallEvm.nullable(),
  cf_failed_call_arbitrum: cfFailedCallEvm.nullable(),
  cf_authority_emission_per_block: numberOrHex,
  cf_epoch_duration: z.number(),
  cf_auction_state: cfAuctionState,
  cf_monitoring_simulate_auction: cfMonitoringSimulateAuction,
  cf_flip_supply: cfFlipSuppy,
  cf_eth_state_chain_gateway_address: ethereumAddress.nullable(),
  cf_eth_key_manager_address: ethereumAddress.nullable(),
  cf_pool_orderbook: cfPoolOrderbook,
  cf_get_trading_strategies: cfGetTradingStrategies,
  cf_get_trading_strategy_limits: cfGetTradingStrategyLimits,
  cf_available_pools: cfAvailablePools,
  cf_safe_mode_statuses: cfSafeModeStatuses,
  broker_encode_cf_parameters: hexString,
  cf_encode_cf_parameters: hexString,
  cf_oracle_prices: cfOraclePrices,
  cf_lending_pools: cfLendingPools,
  cf_lending_config: cfLendingConfig,
  cf_loan_accounts: cfLoanAccounts
};
export {
  rpcResponse,
  rpcResult
};
