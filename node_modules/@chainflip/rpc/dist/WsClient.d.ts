import Client, { ClientOpts, RequestMap } from './Client.js';
import { JsonRpcRequest, RpcMethod } from './common.js';
import '@chainflip/utils/async';
import '@chainflip/utils/chainflip';
import '@chainflip/utils/types';
import 'zod';
import './parsers.js';

declare class WsClient extends Client {
    private ws?;
    private reconnectAttempts;
    private emitter;
    private inFlightRequestMap;
    private readonly timeout;
    private shouldConnect;
    constructor(url: string, { timeout, ...opts }?: {
        timeout?: number;
    } & ClientOpts);
    close(): Promise<void>;
    private connectionReady;
    private handleDisconnect;
    private handleMessage;
    private connect;
    protected send(requests: JsonRpcRequest<RpcMethod>[], requestMap: RequestMap): Promise<void>;
}

export { WsClient as default };
