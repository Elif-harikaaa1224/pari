// src/HttpClient.ts
import Client from "./Client.mjs";
var HttpClient = class extends Client {
  async send(request, requestMap) {
    let res;
    try {
      res = await fetch(this.url, {
        body: JSON.stringify(request),
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        }
      });
    } catch (error) {
      this.handleErrorResponse(new Error("Network error", { cause: error }), requestMap);
      return;
    }
    if (!res.ok) {
      this.handleErrorResponse(new Error(`HTTP error: ${res.status}`), requestMap);
      return;
    }
    try {
      const jsonRpcResponse = await res.json();
      for (const r of jsonRpcResponse) {
        this.handleResponse({ id: r.id, success: true, result: r }, requestMap);
      }
    } catch (cause) {
      this.handleErrorResponse(new Error("Invalid JSON response", { cause }), requestMap);
    }
  }
};
export {
  HttpClient as default
};
