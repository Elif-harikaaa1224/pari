import { UTCDate } from '@date-fns/utc';
import { Interval, DateArg } from 'date-fns';

declare const toISODateString: (date: Date) => string;
declare const fromUnixTime: (time: string | number) => Date;
declare const formatTimestamp: (timestamp: string, locale?: string | undefined, timeZone?: undefined | "UTC") => string;
declare const formatTimestampShort: (timestamp: string, locale?: string | undefined, timeZone?: undefined | "UTC") => string;
declare const differenceInTimeAgo: (time: string, ago?: boolean, endTime?: string) => string;
declare const intervalToDurationWords: (interval: Interval) => string;
type FNSDate = DateArg<Date>;
declare const subUtcDays: (date: FNSDate, days: number) => UTCDate;
declare const addUtcDays: (date: FNSDate, days: number) => UTCDate;
declare const toStartOfUtcDay: (date: FNSDate) => UTCDate;
declare const toStartOfUtcDayString: (date: FNSDate) => string;
declare const toEndOfUtcDay: (date: FNSDate) => UTCDate;
declare const toEndOfUtcDayString: (date: FNSDate) => string;
declare const differenceInUtcDays: (interval: {
    start: FNSDate;
    end: FNSDate;
}) => number;
declare const eachUtcDayOfInterval: (interval: {
    start: FNSDate;
    end: FNSDate;
}) => UTCDate[];

export { addUtcDays, differenceInTimeAgo, differenceInUtcDays, eachUtcDayOfInterval, formatTimestamp, formatTimestampShort, fromUnixTime, intervalToDurationWords, subUtcDays, toEndOfUtcDay, toEndOfUtcDayString, toISODateString, toStartOfUtcDay, toStartOfUtcDayString };
