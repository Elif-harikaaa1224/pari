import { ChainflipAsset } from './chainflip.js';

type HexString = `0x${string}`;
type Bytelike = Uint8Array | number[] | HexString;
type VaultSwapData<Broker, CcmData = never> = {
    amount: bigint;
    destinationAddress: string;
    inputAsset: ChainflipAsset;
    outputAsset: ChainflipAsset;
    depositChainBlockHeight: number | null;
    brokerFee: {
        account: Broker;
        commissionBps: number;
    };
    affiliateFees: {
        accountIndex: number;
        commissionBps: number;
    }[];
    maxBoostFee: number;
    dcaParams: {
        chunkInterval: number;
        numberOfChunks: number;
    } | null;
    refundParams: {
        refundAddress: string;
        minPrice: bigint;
        retryDuration: number;
        maxOraclePriceSlippage: number | null;
    };
    ccmDepositMetadata: {
        channelMetadata: {
            message: HexString;
            gasBudget: HexString;
        };
        ccmAdditionalData: CcmData;
    } | null;
};

export type { Bytelike, HexString, VaultSwapData };
