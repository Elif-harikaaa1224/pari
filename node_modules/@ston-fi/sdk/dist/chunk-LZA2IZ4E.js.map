{"version":3,"sources":["../src/utils/toUnits.ts"],"sourcesContent":["/**\n * Convert string-representation of number with specified decimals to bigint\n *\n * analog of `toNano` function from @ton/core package, but with custom decimals count\n *\n * @see [implementation by viem.](https://github.com/wevm/viem/blob/71a4e7aca259f0565005929d6584dca87bd59807/src/utils/unit/parseUnits.ts#L16)\n */\nexport function toUnits(value: string, decimals = 9) {\n  let [integer = \"0\", fraction = \"0\"] = value.split(\".\");\n\n  const negative = integer.startsWith(\"-\");\n  if (negative) integer = integer.slice(1);\n\n  // trim trailing zeros.\n  fraction = fraction.replace(/(0+)$/, \"\");\n\n  // round off if the fraction is larger than the number of decimals.\n  if (decimals === 0) {\n    if (Math.round(Number(`.${fraction}`)) === 1)\n      integer = `${BigInt(integer) + BigInt(1)}`;\n    fraction = \"\";\n  } else if (fraction.length > decimals) {\n    const [left, unit, right] = [\n      fraction.slice(0, decimals - 1),\n      fraction.slice(decimals - 1, decimals),\n      fraction.slice(decimals),\n    ];\n\n    const rounded = Math.round(Number(`${unit}.${right}`));\n    if (rounded > 9)\n      fraction = `${BigInt(left) + BigInt(1)}0`.padStart(left.length + 1, \"0\");\n    else fraction = `${left}${rounded}`;\n\n    if (fraction.length > decimals) {\n      fraction = fraction.slice(1);\n      integer = `${BigInt(integer) + BigInt(1)}`;\n    }\n\n    fraction = fraction.slice(0, decimals);\n  } else {\n    fraction = fraction.padEnd(decimals, \"0\");\n  }\n\n  return BigInt(`${negative ? \"-\" : \"\"}${integer}${fraction}`);\n}\n"],"mappings":";AAOO,SAAS,QAAQ,OAAe,WAAW,GAAG;AACnD,MAAI,CAAC,UAAU,KAAK,WAAW,GAAG,IAAI,MAAM,MAAM,GAAG;AAErD,QAAM,WAAW,QAAQ,WAAW,GAAG;AACvC,MAAI,SAAU,WAAU,QAAQ,MAAM,CAAC;AAGvC,aAAW,SAAS,QAAQ,SAAS,EAAE;AAGvC,MAAI,aAAa,GAAG;AAClB,QAAI,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE,CAAC,MAAM;AACzC,gBAAU,GAAG,OAAO,OAAO,IAAI,OAAO,CAAC,CAAC;AAC1C,eAAW;AAAA,EACb,WAAW,SAAS,SAAS,UAAU;AACrC,UAAM,CAAC,MAAM,MAAM,KAAK,IAAI;AAAA,MAC1B,SAAS,MAAM,GAAG,WAAW,CAAC;AAAA,MAC9B,SAAS,MAAM,WAAW,GAAG,QAAQ;AAAA,MACrC,SAAS,MAAM,QAAQ;AAAA,IACzB;AAEA,UAAM,UAAU,KAAK,MAAM,OAAO,GAAG,IAAI,IAAI,KAAK,EAAE,CAAC;AACrD,QAAI,UAAU;AACZ,iBAAW,GAAG,OAAO,IAAI,IAAI,OAAO,CAAC,CAAC,IAAI,SAAS,KAAK,SAAS,GAAG,GAAG;AAAA,QACpE,YAAW,GAAG,IAAI,GAAG,OAAO;AAEjC,QAAI,SAAS,SAAS,UAAU;AAC9B,iBAAW,SAAS,MAAM,CAAC;AAC3B,gBAAU,GAAG,OAAO,OAAO,IAAI,OAAO,CAAC,CAAC;AAAA,IAC1C;AAEA,eAAW,SAAS,MAAM,GAAG,QAAQ;AAAA,EACvC,OAAO;AACL,eAAW,SAAS,OAAO,UAAU,GAAG;AAAA,EAC1C;AAEA,SAAO,OAAO,GAAG,WAAW,MAAM,EAAE,GAAG,OAAO,GAAG,QAAQ,EAAE;AAC7D;","names":[]}