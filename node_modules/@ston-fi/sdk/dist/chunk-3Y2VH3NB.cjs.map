{"version":3,"sources":["/Users/paul-n/git/ston-fi/public/sdk-contracts/packages/sdk/dist/chunk-3Y2VH3NB.cjs","../src/utils/fromUnits.ts"],"names":[],"mappings":"AAAA;ACOO,SAAS,SAAA,CAAU,KAAA,EAAe,SAAA,EAAW,CAAA,EAAG;AACrD,EAAA,IAAI,QAAA,EAAU,KAAA,CAAM,QAAA,CAAS,CAAA;AAE7B,EAAA,MAAM,SAAA,EAAW,OAAA,CAAQ,UAAA,CAAW,GAAG,CAAA;AACvC,EAAA,GAAA,CAAI,QAAA,EAAU,QAAA,EAAU,OAAA,CAAQ,KAAA,CAAM,CAAC,CAAA;AAEvC,EAAA,QAAA,EAAU,OAAA,CAAQ,QAAA,CAAS,QAAA,EAAU,GAAG,CAAA;AAExC,EAAA,IAAI,CAAC,OAAA,EAAS,QAAQ,EAAA,EAAI;AAAA,IACxB,OAAA,CAAQ,KAAA,CAAM,CAAA,EAAG,OAAA,CAAQ,OAAA,EAAS,QAAQ,CAAA;AAAA,IAC1C,OAAA,CAAQ,KAAA,CAAM,OAAA,CAAQ,OAAA,EAAS,QAAQ;AAAA,EACzC,CAAA;AACA,EAAA,SAAA,EAAW,QAAA,CAAS,OAAA,CAAQ,OAAA,EAAS,EAAE,CAAA;AACvC,EAAA,OAAO,CAAA,EAAA;AAGT;ADVU;AACA;AACA;AACA","file":"/Users/paul-n/git/ston-fi/public/sdk-contracts/packages/sdk/dist/chunk-3Y2VH3NB.cjs","sourcesContent":[null,"/**\n * Convert bigint with specified decimals to string-representation of number\n *\n * analog of `fromNano` function from @ton/core package, but with custom decimals count\n *\n * @see [implementation by viem.](https://github.com/wevm/viem/blob/71a4e7aca259f0565005929d6584dca87bd59807/src/utils/unit/formatUnits.ts#L16)\n */\nexport function fromUnits(value: bigint, decimals = 9) {\n  let display = value.toString();\n\n  const negative = display.startsWith(\"-\");\n  if (negative) display = display.slice(1);\n\n  display = display.padStart(decimals, \"0\");\n\n  let [integer, fraction] = [\n    display.slice(0, display.length - decimals),\n    display.slice(display.length - decimals),\n  ];\n  fraction = fraction.replace(/(0+)$/, \"\");\n  return `${negative ? \"-\" : \"\"}${integer || \"0\"}${\n    fraction ? `.${fraction}` : \"\"\n  }`;\n}\n"]}